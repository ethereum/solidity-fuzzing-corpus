
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
struct St0 {
  int248 el0;
}
library L0 {
  function f0() external    returns(int224 o0,int232 o1)
  {
    {
      delete o1;
      int192 l0 = int192(0);
      int232 l1 = (((((int232(0) ^ int232(0)) & int232(0)) * int232(-1126453537946830614422906725412525827703245892598826862350526643996220)) * int232(3450873173395281893717377931138512726225554486085193277581262111899647)) + int232(3450873173395281893717377931138512726225554486085193277581262111899647));
    }
  }
  event ev0();
}
pragma solidity >= 0.0.0;
contract C0 {
  using L0 for *;
  using L0 for *;
  fallback() external   
  {
    bytes24 l0 = (false ? bytes24(bytes28(0x00000000000000000000000000000000000000000000000000000000)) : bytes24(0x000000000000000000000000000000000000000000000000));
    address l1 = address(this);
    assembly
    {
    }
    (l0, l0) = (bytes24(0xd7c8da21f340022145b707b28b1fe0c9bd6b1d325d87724e), ((bytes24(0xa6b9b7b4ca13d0831b9e19fb73375bdac93bf6ba6aced11e) | bytes24(0x000000000000000000000000000000000000000000000000)) ^ bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff)));
    assert(l0 == bytes24(0xd7c8da21f340022145b707b28b1fe0c9bd6b1d325d87724e));
    assert(l0 == ((bytes24(0xa6b9b7b4ca13d0831b9e19fb73375bdac93bf6ba6aced11e) | bytes24(0x000000000000000000000000000000000000000000000000)) ^ bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff)));
  }
  using L0 for *;
  uint256   s0 = uint256(59082290912971172348913181917348429246818154295411703001911283898326309027308);
  uint56[2]   s1;

	function compareMemoryAndStorage(uint56[2] memory v1, uint56[2] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  int144[7]   s2;

	function compareMemoryAndStorage(int144[7] memory v1, int144[7] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(uint56[2] memory i0,int144[7] memory i1)   {
    s1 = i0;
    s2 = i1;
    unchecked {
      (s1, s2[(((uint256(45771856449069042851041638676981689384086189005981651412829675335466399838901) % (true ? uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) : uint256(114399843451996724700376724668333429065666925210191389992590757423529628192712))) ** uint176(uint176(0))) - uint256(30100854148834654585281128247757529183797657910390690481920282290549617199954))]) = ([uint56(0), uint56(72057594037927935)], (int144(-5602077196505733832365150918773875571849361) * ((int208(((int208(0) - int208(0)) / int208(205688069665150755269371147819668813122841983204197482918576127))) < int208(205688069665150755269371147819668813122841983204197482918576127)) ? int144(-1819177372326682551755893914350195636731379) : int144(-11083291738601776788077833874670766603518344))));
      assert(s2[(((uint256(45771856449069042851041638676981689384086189005981651412829675335466399838901) % (true ? uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) : uint256(114399843451996724700376724668333429065666925210191389992590757423529628192712))) ** uint176(uint176(0))) - uint256(30100854148834654585281128247757529183797657910390690481920282290549617199954))] == (int144(-5602077196505733832365150918773875571849361) * ((int208(((int208(0) - int208(0)) / int208(205688069665150755269371147819668813122841983204197482918576127))) < int208(205688069665150755269371147819668813122841983204197482918576127)) ? int144(-1819177372326682551755893914350195636731379) : int144(-11083291738601776788077833874670766603518344))));
      int144[7] memory l0 = s2;
      int144[7] memory l1 = l0;
      assert(compareMemoryAndStorage(l1, s2));
      while (false)
      {
      }
    }
  }
}
// ====
// ----
