
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
library L0 {
  function f0(function (bytes31) external   returns (bool, int136, int256) i0) private    returns(address o0)
  {
    {
    }
    assembly
    {
      extcodecopy(115792089237316195423570985008687907853269984665640564039457584007913129639935, add(0x80, mod(o0, 1024)), add(mul(54064169101742714829876415388144781028910806652382013946649847613210359915281, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 31197764224321065055472079277949867934443262902001762804119384301659719840437), mod(o0, 1024))
      switch 25273778655586394447210081583100148945478196408021783957682769501869460771441
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        let al0 := 3818846421802631066647717198592584366422944117723160260419254752542974564173
      }
      case 94657945670466780267381450675728537821846775452628917252094112177468860719857
      {
        let al1 := 0
        switch o0
        default
        {
        }
      }
      case 68877697092414767113932142449699816497343608000280204134362753173514357647790
      {
        switch o0
        case 0
        {
        }
        default
        {
        }
        switch o0
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          let al2 := calldataload(mod(mload(add(0x80, mod(41655294599150631609508252137632349109397740854439287948298598605587561952453, 2048))), calldatasize()))
          for 
          { let yulinit0 := 0 } lt(yulinit0, mod(blockhash(al2), 11)) { yulinit0 := add(yulinit0, 1) }
          {
            o0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
          }
          o0 := al2
        }
        case 81273479131726725636203378331258866700478512400142112415857902285551959111114
        {
          extcodecopy(115792089237316195423570985008687907853269984665640564039457584007913129639935, add(0x80, mod(o0, 1024)), 63186192438296787766575182537612393934645212577440682223496006488689253198430, mod(o0, 1024))
          o0 := o0
          calldatacopy(add(0x80, mod(sgt(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 1024)), o0, mod(87875194889522936090742049567481757282191370590742631793436076198270150024350, 1024))
        }
      }
      for 
      { let yulinit1 := 0 } lt(yulinit1, mod(o0, 11)) { yulinit1 := add(yulinit1, 1) }
      {
        o0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
        if o0
        {
          break
        }
        codecopy(add(0x80, mod(o0, 1024)), shr(0, 0), mod(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), 1024))
        returndatacopy(add(0x80, mod(gasprice(), 1024)), o0, mod(o0, 1024))
      }
      return(add(0x80, mod(gasprice(), 1024)), o0)
    }
  }
}
// ====
// ----
