==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  int192[][]   s0 = [[int192(3138550867693340381917894711603833208051177722232017256447), int192(402674200651767151209908454707099805002342825995297784219), int192(3138550867693340381917894711603833208051177722232017256447), int192(1560687490799982538373087777173782364541921137281899898969), int192(2547605658424137137466449517430445064808560950661640340950), int192(2655531446835270779522283992119353629276750576906834828205), int192(1501037815646732975116381252393540996098207886557112203069)], [int192(3138550867693340381917894711603833208051177722232017256447), int192(3138550867693340381917894711603833208051177722232017256447), int192(0), int192(3138550867693340381917894711603833208051177722232017256447), int192(3138550867693340381917894711603833208051177722232017256447), int192(3138550867693340381917894711603833208051177722232017256447), int192(0)], [int192(0), int192(0), int192(3138550867693340381917894711603833208051177722232017256447), int192(-1640275316068811748835805391714532695606214905274867153599), int192(3138550867693340381917894711603833208051177722232017256447), int192(0), int192(-1137457154987007446005542119329019055648257496191514830705)], [int192(2513442398022977901847905482248237503060342382501846503601), int192(0), int192(3138550867693340381917894711603833208051177722232017256447), int192(3138550867693340381917894711603833208051177722232017256447), int192(602026980587349863212026918483103949878799930367538033000), int192(1531677303959275862536194697822968787642145006057099509905), int192(0)], [int192(-2829722998800975772440206261527462807760812987346193720788), int192(3138550867693340381917894711603833208051177722232017256447), int192(3138550867693340381917894711603833208051177722232017256447), int192(-1864767320480656475463465789951477394515969999049944494080), int192(0), int192(-2488389724876163174391933661084869940160147875960311828359), int192(3138550867693340381917894711603833208051177722232017256447)]];

	function compareMemoryAndStorage(int192[][] memory v1, int192[][] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(int192[] memory v1, int192[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  uint16[6][6]   s1;

	function compareMemoryAndStorage(uint16[6][6] memory v1, uint16[6][6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint16[6] memory v1, uint16[6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  int72 immutable  s2 = int72(0);
  constructor(uint16[6][6] memory i0)   {
    s1 = i0;
    unchecked {
      uint16[6][6] memory l0 = s1;
      uint16[6][6] memory l1 = l0;
      assert(compareMemoryAndStorage(l1, s1));
      int72  l2 = s2;
      int72  l3 = l2;
      assert(l3 == s2);
    }
  }
}
// ----
// Warning 2018: (su1.sol:2278-2524): Function state mutability can be restricted to view
// Warning 2018: (su1.sol:2829-3077): Function state mutability can be restricted to view
