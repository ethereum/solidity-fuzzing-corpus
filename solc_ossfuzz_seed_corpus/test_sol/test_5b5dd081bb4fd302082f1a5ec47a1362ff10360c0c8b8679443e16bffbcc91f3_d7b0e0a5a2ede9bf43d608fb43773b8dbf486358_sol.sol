
==== Source: su0.sol ====
contract C0 {
  fallback() external virtual  
  {
    while (true)
    {
      uint200 l0 = (uint200(0) & ((uint200(1606938044258990275541962092341162602522202993782792835301375) ** uint176((uint176(95780971304118053647396689196894323976171195136475135) >> uint248(uint248(338770987510216956172899139040871494856630943612271035281508117360555351875))))) << uint16(uint16(65535))));
      uint176 l1 = (((~(uint176(95780971304118053647396689196894323976171195136475135))) % uint176(0)) + (uint176(0) * uint176(95780971304118053647396689196894323976171195136475135)));
    }
    (bool l2, bytes memory l3) = address(this).call(bytes("000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
  }
  bytes28  public s0;
  constructor(bytes28 i0)   {
    s0 |= (~((bytes28(0x00000000000000000000000000000000000000000000000000000000) ^ bytes28((false ? bytes30(0x83d0c706214236b4a3af6a6219cc52d86ad86924819d90a32386832d9a06) : bytes30(0x000000000000000000000000000000000000000000000000000000000000))))));
    unchecked {
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
