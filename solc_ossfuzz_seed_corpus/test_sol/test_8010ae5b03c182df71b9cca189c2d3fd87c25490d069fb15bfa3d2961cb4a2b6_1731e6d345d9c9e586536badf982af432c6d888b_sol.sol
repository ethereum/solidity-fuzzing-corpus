
==== Source: su0.sol ====
contract C0 {
  fallback() external virtual  
  {
    function () internal   returns (uint192) l0;
    assembly
    {
      extcodecopy(0, add(0x80, mod(sub(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0), 1024)), create(66713467426455026058184112924598283574252838978058083608557930454898055821044, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(29331217829872897555663189444152180984385730319304476632843485101502793502713, 1024))
      returndatacopy(add(0x80, mod(mload(add(0x80, mod(sub(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0), 1024))), 1024)), 0, mod(74895438371179616587070092181930230012659267275192603196414273409919345577771, 1024))
    }
  }
  address payable immutable public s0;
  constructor(address payable i0)   {
    s0 = (false ? payable(address(this)) : payable(address(this)));
    unchecked {
    }
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
