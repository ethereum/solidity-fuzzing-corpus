
==== Source: su0.sol ====
contract C0 {
  function f0() public virtual  payable returns(function (int168, address[][1] memory) external   o0,int200 o1,int224 o2)
  {
  }
  fallback() external virtual  
  {
    uint56 l0 = ((uint56(((uint56(72057594037927935) - (uint56(0) - uint56(72057594037927935))) / uint56(0))) ^ uint56(0)) % uint56(72057594037927935));
    int200 l1 = (true ? int200(526551249582024629652363276513945759129686117403574058380034) : ((int200(0) & int200(0)) & int200(-413934014143444196246453179827414779217532044460074789223475)));
  }
  int72  public s0 = int72(582143783870148155591);
  int256   s1;
  uint16   s2;
  constructor(int256 i0,uint16 i1)   {
    s1 &= (int256(((((int192(3045414502661939421213079017452730566664183010871122709716) - int192(3138550867693340381917894711603833208051177722232017256447)) + int192(-2954765522146869540484724420081459420449686177298542844341)) ^ int192(3138550867693340381917894711603833208051177722232017256447)) | int192(3138550867693340381917894711603833208051177722232017256447))) - int256(57896044618658097711785492504343953926634992332820282019728792003956564819967));
    s2 %= ((uint16(65535) << uint240(uint240(int240(676246795223813944878382342230367379995768455595362957517508838353159557)))) + uint16(65535));
    unchecked {
      int256  l0 = s1;
      int256  l1 = l0;
      assert(l1 == s1);
      int256  l2 = s1;
      int256  l3 = l2;
      assert(l3 == s1);
      int256  l4 = s1;
      int256  l5 = l4;
      assert(l5 == s1);
      int72  l6 = s0;
      int72  l7 = l6;
      assert(l7 == s0);
      uint16  l8 = s2;
      uint16  l9 = l8;
      assert(l9 == s2);
      int72  l10 = s0;
      int72  l11 = l10;
      assert(l11 == s0);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
