
==== Source: su0.sol ====
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141, M142, M143,
  M144, M145, M146, M147, M148, M149, M150, M151,
  M152, M153, M154, M155
}
pragma solidity >= 0.0.0;
contract C0 {
  function f0(bool i0,int216 i1,int160 i2) private      {
    return;
  }
  bytes29   s0;
  uint96 immutable  s1 = uint96(0);
  bytes9   s2 = bytes9(0xffffffffffffffffff);
  uint216 immutable  s3;
  constructor(bytes29 i0,uint216 i1) payable  {
    s0 |= bytes29(0x0000000000000000000000000000000000000000000000000000000000);
    s3 = uint216(105312291668557186697918027683670432318895095400549111254310977535);
    {
    }
  }
  function f1() external virtual  payable  returns(bool o0,uint24 o1,bytes30 o2)  {
    if ((((uint24(0) & uint24(16777215)) ^ uint24(0)) == uint24(8995603)))
    {
      try this.f1() returns (bool l0, uint24 l1, bytes30 l2)
      {
        return ((uint88(247445398038430253505419974) != ((uint88(143279212334073793590599092) & (uint88(166142895374274211212417024) | uint88(0))) % uint88(309485009821345068724781055))), uint24(2041346), bytes30(0x000000000000000000000000000000000000000000000000000000000000));
      }
      catch
      {
      }
      catch Panic(uint256 l3)
      {
        try this.f1() returns (bool l4, uint24 l5, bytes30 l6)
        {
        }
        catch
        {
          return (false, ((uint24(16777215) ^ uint24(16777215)) + (uint24(10426177) | uint24(16777215))), bytes30(0xa94a6699ca9960343b74ba1043f88f3eaba4fecaf4e63817b014282f155a));
        }
        catch Panic(uint256 l7)
        {
          o0 = (uint224(((uint224(((uint224(EN0(uint8(181))) >> uint256(uint256(92489761415032493185041774405873058341821967483142587156378637111446817859813))) / uint224(26959946667150639794667015087019630673637144422540572481103610249215))) ** uint72(uint72(0))) / uint224(26959946667150639794667015087019630673637144422540572481103610249215))) != uint224(24350257481124305252131875370078645276724255955915844803784773104000));
          assert(o0 == (uint224(((uint224(((uint224(EN0(uint8(181))) >> uint256(uint256(92489761415032493185041774405873058341821967483142587156378637111446817859813))) / uint224(26959946667150639794667015087019630673637144422540572481103610249215))) ** uint72(uint72(0))) / uint224(26959946667150639794667015087019630673637144422540572481103610249215))) != uint224(24350257481124305252131875370078645276724255955915844803784773104000)));
          if ((address(this) < address(this)))
          {
          }
        }
      }
    }
  }
  type T0 is uint40;
  fallback() external   
  {
    return;
  }
}

==== Source: su1.sol ====
struct St0 {
  bytes28 el0;
  int216 el1;
  int40[2] el2;
  bool el3;
}
pragma solidity >= 0.0.0;
struct St1 {
  uint136[][6] el0;
  int176 el1;
  St0 el2;
  int24 el3;
}
// ====
// ----
