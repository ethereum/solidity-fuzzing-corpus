
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  function f0(uint176 i0,bytes12 i1,int168 i2) internal   
  {
    assembly
    {
    }
    address payable l0 = payable(address(this));
    (i0) = (((uint176(((uint176(((uint176(95780971304118053647396689196894323976171195136475135) * uint176(0)) / uint176(86529653511701698430029664026947821964530830972324055))) ^ uint176(95780971304118053647396689196894323976171195136475135)) / uint176(78472895850997830604714115017082889154235095760770055))) - uint176(64319043127930607298615832766483761040683835673613925)) ^ uint176(95780971304118053647396689196894323976171195136475135)));
    assert(i0 == ((uint176(((uint176(((uint176(95780971304118053647396689196894323976171195136475135) * uint176(0)) / uint176(86529653511701698430029664026947821964530830972324055))) ^ uint176(95780971304118053647396689196894323976171195136475135)) / uint176(78472895850997830604714115017082889154235095760770055))) - uint176(64319043127930607298615832766483761040683835673613925)) ^ uint176(95780971304118053647396689196894323976171195136475135)));
    uint8 l1 = ((uint8(255) % ((uint8(35) & uint8(255)) - uint8(255))) ^ uint8(0));
  }
  bool   s0 = true;
  address payable   s1;
  constructor(address payable i0)   {
    s1 = i0;
    unchecked {
    }
  }
  error er0(bool ep0);
}
// ====
// ----
