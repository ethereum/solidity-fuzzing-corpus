
==== Source: su0.sol ====
function f0()     returns(bool o0)
{
  if ((true && false))
  {
  }
  else if (f0())
  {
  }
  else
  {
    (o0) = ((bytes28(0x00000000000000000000000000000000000000000000000000000000) == bytes28(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)));
  }
  if (true)
  {
    for(;
false;
[uint8(0), uint8(0)])
    {
      return ((!(true)));
      (o0, o0) = (true, (((((int24((int24(-6248013) / int24(8388607))) | int24(0)) | int24(4311909)) ^ int24(1563856)) ^ int24(-1611764)) >= int24(0)));
      break;
    }
  }
  else if (false)
  {
    if (((((((uint136(87112285931760246646623899502532662132735) % uint136(0)) ** uint184(uint184(20705774483030332565151945963605620305687788482145640319))) ** uint88(uint88(309485009821345068724781055))) | uint136(87112285931760246646623899502532662132735)) & uint136(0)) < uint136(0)))
    {
    }
    else
    {
      int216 l0 = int216(8420569100949239921679115016636009286875006837360476271044778830);
    }
    assembly
    {
      mstore8(mod(64685323409137972394719451006841742258622389999235637590379328771124633763264, 2048), xor(o0, 0))
      o0 := 95625602009988802066903841212303831595890565159972948109461676456842760782596
      for 
      {
        switch o0
        case 23289520547108870426804594422307319304374207582179028490985959169039733491158
        {
          if 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            return(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
            return(26651295379519552989508471411179560486371864880662003426271911271928911075206, 23899967158978384143743881086532313083682602462851362734638178787646906843562)
          }
        }
        switch mul(o0, 107400903996563292608179608864244988309211636234226775080652487060003157048189)
        default
        {
          let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
          switch o0
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
        }
      }
      o0
      {
        let al1 := o0
      }
      {
      }
      let al2 := 0
    }
  }
}
pragma solidity >= 0.0.0;
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141, M142, M143,
  M144, M145, M146, M147, M148, M149, M150, M151,
  M152, M153, M154, M155, M156, M157, M158, M159,
  M160, M161, M162, M163, M164, M165, M166, M167,
  M168, M169, M170, M171, M172, M173, M174, M175

}
error er0(function (bytes6, address) external   ep0);
struct St0 {
  EN0 el0;
  function (bytes4) external   returns (address, bool, string memory) el1;
}
bytes10 constant cons0 = bytes10(0x00000000000000000000);
// ====
// ----
