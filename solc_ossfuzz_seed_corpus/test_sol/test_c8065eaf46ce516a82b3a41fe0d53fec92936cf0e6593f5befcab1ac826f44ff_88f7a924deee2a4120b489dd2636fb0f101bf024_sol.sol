==== Source:  ====

==== Source: su0.sol ====
library L0 {
  type T0 is bool;
  error er0(uint232 ep0);
}
contract C0 {
  using L0 for *;
  using L0 for *;
  using L0 for *;
  receive() external   payable
  {
    function (int88) external   l0;
  }
  L0.T0 immutable  s0;
  bool immutable  s1;
  uint96[3]   s2;

	function compareMemoryAndStorage(uint96[3] memory v1, uint96[3] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(L0.T0 i0,bool i1,uint96[3] memory i2) payable  {
    s0 = L0.T0.wrap(true);
    s1 = ((~(bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff))) >= ((bytes24(0x000000000000000000000000000000000000000000000000) | bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff)) & bytes24(0x000000000000000000000000000000000000000000000000)));
    s2 = i2;
    unchecked {
      bool  l0 = s1;
      bool  l1 = l0;
      assert(l1 == s1);
      payable(this).transfer(8305602959862389928);
      (i2[(uint256((uint48(281474976710655) * ((uint48(0) % uint48(0)) - uint48(248161404598052)))) ^ uint256(0))], i2[((((uint256(uint240(0)) ** uint80(uint80(511410057386758443410490))) | uint256(49000107557040318463389781066518451306725562548366136220906554395375620082106)) ^ uint256(35807702712942211374877355319026160975700282716606081282565683488074972288615)) + uint256(60724008472618323952677282907910031450820588615096635864875885096786590159037))]) = (i2[((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ** uint8(uint8(255))) + (payable(address(this)).balance >> uint104(uint104(20282409603651670423947251286015))))], (s2[((((s2.length & (uint256(24596836432431385473371174361963223555573918633405259274987806377815747909689) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) ^ uint256(75777717005909480696130795769921103262614983222886100240602615024054713099803)) + uint256(73293041007872445854403676183434157622190253771017015448678282260550834610994))] *= uint96(79228162514264337593543950335)));
      assert(i2[(uint256((uint48(281474976710655) * ((uint48(0) % uint48(0)) - uint48(248161404598052)))) ^ uint256(0))] == i2[((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ** uint8(uint8(255))) + (payable(address(this)).balance >> uint104(uint104(20282409603651670423947251286015))))]);
      assert(i2[((((uint256(uint240(0)) ** uint80(uint80(511410057386758443410490))) | uint256(49000107557040318463389781066518451306725562548366136220906554395375620082106)) ^ uint256(35807702712942211374877355319026160975700282716606081282565683488074972288615)) + uint256(60724008472618323952677282907910031450820588615096635864875885096786590159037))] == (s2[((((s2.length & (uint256(24596836432431385473371174361963223555573918633405259274987806377815747909689) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) ^ uint256(75777717005909480696130795769921103262614983222886100240602615024054713099803)) + uint256(73293041007872445854403676183434157622190253771017015448678282260550834610994))] *= uint96(79228162514264337593543950335)));
      uint96[3] memory l2 = s2;
      uint96[3] memory l3 = l2;
      assert(compareMemoryAndStorage(l3, s2));
    }
  }
  using L0 for *;
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ----
// Warning 2072: (su0.sol:167-197): Unused local variable.
// Warning 5667: (su0.sol:531-539): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:540-547): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:268-516): Function state mutability can be restricted to view
