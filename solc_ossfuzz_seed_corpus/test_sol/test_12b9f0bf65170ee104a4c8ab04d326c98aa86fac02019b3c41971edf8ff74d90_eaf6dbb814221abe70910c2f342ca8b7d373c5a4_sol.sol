
==== Source: su0.sol ====
library L0 {
  function f0() public    returns(bool o0)
  {
    bytes12 l0 = bytes12(0x000000000000000000000000);
    function (bytes17, address) internal   returns (bytes memory, uint8, bytes19) l1;
  }
  function f1() public    returns(bytes16[] memory o0)
  {
    bytes memory l0 = bytes.concat(bytes10(bytes10(0xffffffffffffffffffff)), (bytes6(0x6c26fa05e8db) | bytes6(bytes28(0x00000000000000000000000000000000000000000000000000000000))));
    assembly
    {
    }
    (o0[(uint256((uint256(((payable(address(0x0000000000000000000000000000000000000001)).balance | uint256(18860927212494603570402540358975662573498580078110773572230133687330323472678)) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) / uint256(0))) - uint256(0))], o0[uint256((uint256(4032837115639181754993652578997971620657603232468800764132204459232252227317) / (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | type(uint256).max)))]) = (bytes16(0x00000000000000000000000000000000), bytes16(0x00000000000000000000000000000000));
    assert(o0[(uint256((uint256(((payable(address(0x0000000000000000000000000000000000000001)).balance | uint256(18860927212494603570402540358975662573498580078110773572230133687330323472678)) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) / uint256(0))) - uint256(0))] == bytes16(0x00000000000000000000000000000000));
    assert(o0[uint256((uint256(4032837115639181754993652578997971620657603232468800764132204459232252227317) / (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | type(uint256).max)))] == bytes16(0x00000000000000000000000000000000));
    bytes8 l1 = (~(bytes8(bytes13(0x00000000000000000000000000))));
  }
  event ev0(bytes6  ep0);
}
pragma solidity >= 0.0.0;
// ====
// ----
