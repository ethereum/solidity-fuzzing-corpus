
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
contract C0 {
  receive() external virtual  payable
  {
    assembly
    {
      switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
      case 0
      {
      }
      default
      {
        stop()
      }
      returndatacopy(add(0x80, mod(0, 1024)), staticcall(110915980549101200472040136693161640787601783652211584148669604143573861094867, 4929444159983375094265679223310799272414784882495719546991797523799187296661, add(0x80, mod(0, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, 54214758184724272107613581679805815504711682230929845832778319370257283212126, 96890026951698278351956004424846170035773639019524614558279204839999689032286), mod(67353737950367010693207986367148253755702575728444436625131405547871798720859, 1024))
    }
  }
  int176 immutable  s0 = int176(47890485652059026823698344598447161988085597568237567);
  function f1(int176 i0,int176 i1) private    returns(uint192 o0)
  {
    int176  l0 = s0;
    int176  l1 = l0;
    assert(l1 == s0);
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
