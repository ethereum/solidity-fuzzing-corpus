
==== Source: su0.sol ====
contract C0 {
  fallback() external virtual  
  {
    assembly
    {
      codecopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 0, mod(timestamp(), 1024))
      for 
      {
        return(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935)
      }
      mload(add(0x80, mod(50609037091413705605814182412117761829631612725871609531660863233502592039945, 2048)))
      {
        let al0 := 0
      }
      {
        extcodecopy(0, add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 28975965412232158666648019837606613476627011603360150949423363542611282960331, mod(97595815173233394595850447916440285425119497470097204310397286780673806288419, 1024))
      }
      switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
      default
      {
      }
      return(0, 0)
    }
  }
  bytes16   s0 = bytes16(0xffffffffffffffffffffffffffffffff);
}
pragma solidity >= 0.0.0;
// ====
// ----
