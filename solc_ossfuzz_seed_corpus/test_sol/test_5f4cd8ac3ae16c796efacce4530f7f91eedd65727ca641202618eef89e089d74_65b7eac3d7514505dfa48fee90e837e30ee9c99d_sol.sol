
==== Source: su0.sol ====
contract C0 {
  bool  public s0 = true;
  bool   s1;
  address[]   s2;

	function compareMemoryAndStorage(address[] memory v1, address[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bytes13 immutable public s3;
  constructor(bool i0,address[] memory i1,bytes13 i2) payable  {
    s1 = true;
    s2 = i1;
    s3 = (bytes13(0x00000000000000000000000000) ^ (bytes13(((bytes19(0x83fcc086668ef03c868506f9d171cd499ccd93) ^ bytes19(0xa9907891afb6770da65baaf018ac7443401adc)) | bytes19(0xab9f141c90eb0e15ddd0bc806a1046974e6d5f))) & bytes13(0x00000000000000000000000000)));
    {
      i1[((uint256(94591207654390040113003716347156046707706370096812079711810542963535147571579) % (~(((uint256(97430578203744327550027237059144846332470074149255068568411919003564299751225) + uint256(0)) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))))) % uint256(0))] = address(this);
      assert(i1[((uint256(94591207654390040113003716347156046707706370096812079711810542963535147571579) % (~(((uint256(97430578203744327550027237059144846332470074149255068568411919003564299751225) + uint256(0)) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))))) % uint256(0))] == address(this));
      s2.push();
      (s2[uint256(0)], s2[((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | ((uint104(5387781438430103957047016041892) | uint256(73531280153334942505018562764728838564793050647173916375139008314974157650920)) * uint256(29127955192074041200334286411014278523755790906260841016321989854473168433743))) ^ uint256(18990113866353950760008442781242242018412119143021549897825634016488316250595))]) = (msg.sender, address(bytes20((true ? bytes7(0x19899acddbebb5) : bytes7(0x00000000000000)))));
      assert(s2[uint256(0)] == msg.sender);
      assert(s2[((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | ((uint104(5387781438430103957047016041892) | uint256(73531280153334942505018562764728838564793050647173916375139008314974157650920)) * uint256(29127955192074041200334286411014278523755790906260841016321989854473168433743))) ^ uint256(18990113866353950760008442781242242018412119143021549897825634016488316250595))] == address(bytes20((true ? bytes7(0x19899acddbebb5) : bytes7(0x00000000000000)))));
      bool  l0 = s0;
      bool  l1 = l0;
      assert(l1 == s0);
      address[] memory l2 = s2;
      address[] memory l3 = l2;
      assert(compareMemoryAndStorage(l3, s2));
      bool  l4 = s1;
      bool  l5 = l4;
      assert(l5 == s1);
    }
  }
}
pragma solidity >= 0.0.0;
library L0 {
  function f0(address i0) public    returns(string memory o0,int216 o1)
  {
    bool l0 = false;
    bytes memory l1 = bytes("0000000000000000000000000000000000ffffffffffffffffffffff");
  }
  type T0 is uint88;
}
library L1 {
  function f1(address payable i0,bytes memory i1) private    returns(function (int152) external   o0)
  {
    string memory l0 = string.concat(string.concat(string.concat(string("0000000000000000000000000000000000000006f52238b2a9363ffe0210217bb7bc"), string("ffffffffffffffffffffffffffffffffffffffffffff")), string("000000000000000000000000000000000000000000"), string("ffffffffffffffffffffffffffffffffffffffffffb345ec46f7965172b2cac1")), string("5390fd88cf4813c869c8a8660cd82e41b3e6ca228b35cf8fc442e4713dc777563d74778f4bc9677f58159050579e3a47"));
  }
  function f2() external    returns(address payable o0)
  {
  }
}
// ====
// ----
