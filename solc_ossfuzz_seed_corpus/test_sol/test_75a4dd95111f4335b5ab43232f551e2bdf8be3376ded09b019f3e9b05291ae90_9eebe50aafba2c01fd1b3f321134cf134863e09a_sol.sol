==== Source:  ====

==== Source: su0.sol ====
contract C0 {
  int96   s0;
  bool[5]   s1 = [false, true, true, true, false];

	function compareMemoryAndStorage(bool[5] memory v1, bool[5] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(int96 i0)   {
    s0 += ((-(int96(19729739730443340580569612208))) ^ (-(int96(0))));
    {
      (bool l0) = payable(this).send(6910299239723471453);
      bool[5] memory l1 = s1;
      bool[5] memory l2 = l1;
      assert(compareMemoryAndStorage(l2, s1));
    }
  }
  modifier m0() virtual
  {
    require((address(this) <= address(this)));
    (s1[(uint112(0) + uint112(((uint112(5192296858534827628530496329220095) - uint112(0)) / uint112(0))))]) = (s1[((~((uint256(50759007575629892000425729563898964368812637716450653693482297584452055779206) << uint224(uint224(10996625711125117188607298274475047273995485917044956510367698333412))))) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))]);
    assert(s1[(uint112(0) + uint112(((uint112(5192296858534827628530496329220095) - uint112(0)) / uint112(0))))] == s1[((~((uint256(50759007575629892000425729563898964368812637716450653693482297584452055779206) << uint224(uint224(10996625711125117188607298274475047273995485917044956510367698333412))))) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))]);
    _;
    (s1) = ([true, false, false, false, false]);
  }
  fallback() external virtual m0() payable
  {
    (s1[((uint112((uint112((uint112(5192296858534827628530496329220095) / uint112(5192296858534827628530496329220095))) / uint112(0))) % uint112(4499517864073873429524122641743945)) & uint256(57608341355461269359643915233692294700571849543812804138819787456510380675941))], s0, s0) = (true, (-(int96(39614081257132168796771975167))), int96(36148036525684851179798978122));
    assert(s1[((uint112((uint112((uint112(5192296858534827628530496329220095) / uint112(5192296858534827628530496329220095))) / uint112(0))) % uint112(4499517864073873429524122641743945)) & uint256(57608341355461269359643915233692294700571849543812804138819787456510380675941))] == true);
    assert(s0 == (-(int96(39614081257132168796771975167))));
    assert(s0 == int96(36148036525684851179798978122));
    (s1[uint256((uint256(0) / ((((uint256(0) * uint256(0)) | uint256(75228565017809431480940003957532750429458612958037908327086801773547979077009)) | uint256(87629520351327014940047341388512992894811441318653293477226716794311611166897)) | uint256(0))))], s1[(payable(address(this)).balance << uint144(uint144(22300745198530623141535718272648361505980415)))]) = (((int64(((~((int64(0) | int64(0)))) / int64(9223372036854775807))) - int64(0)) < int64(0)), false);
    assert(s1[uint256((uint256(0) / ((((uint256(0) * uint256(0)) | uint256(75228565017809431480940003957532750429458612958037908327086801773547979077009)) | uint256(87629520351327014940047341388512992894811441318653293477226716794311611166897)) | uint256(0))))] == ((int64(((~((int64(0) | int64(0)))) / int64(9223372036854775807))) - int64(0)) < int64(0)));
    assert(s1[(payable(address(this)).balance << uint144(uint144(22300745198530623141535718272648361505980415)))] == false);
    (s1[s1.length]) = payable(this).send(18431213222175437518);
    int96  l0 = s0;
    int96  l1 = l0;
    assert(l1 == s0);
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
function f1()    
{
  unchecked {
  }
}
// ----
// Warning 5667: (su0.sol:340-348): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2072: (su0.sol:438-445): Unused local variable.
// Warning 2018: (su0.sol:81-325): Function state mutability can be restricted to view
// Warning 2018: (su1.sol:26-65): Function state mutability can be restricted to pure
