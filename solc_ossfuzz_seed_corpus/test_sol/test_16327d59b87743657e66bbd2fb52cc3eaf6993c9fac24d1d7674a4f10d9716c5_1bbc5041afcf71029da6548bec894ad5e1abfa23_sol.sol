
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70
}
library L0 {
  event ev0(int168  ep0);
  function f0(int112[7][][3][] memory i0,EN0 i1) public    returns(address o0)
  {
    function (function () external   returns (address)) internal   l0;
    bytes10 l1 = bytes10(0x00000000000000000000);
  }
  function f1() public    returns(address o0,address payable o1)
  {
    int64 l0 = (int64(9223372036854775807) - (int64(9223372036854775807) - int64((int64(1485348146457308612) / int64(0)))));
    function (bytes6, int168) external   l1;
  }
}

==== Source: su1.sol ====
contract C0 {
  fallback() external virtual  
  {
    assembly
    {
      switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
      default
      {
        codecopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), or(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(98535801979460939400026541775988034570299412635312183977477502324335109749287, 1024))
        revert(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 91685940785197461604799712250500969594779545832759198322476895324445760394291)
      }
      codecopy(add(0x80, mod(43154735178578295846551955370858198102459379779854878363199281025940233742563, 1024)), 0, mod(82925632122776607403134430812185221331321047432819441504299782567198600963670, 1024))
      switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
      case 0
      {
        calldatacopy(add(0x80, mod(16393687715014980051213281052413412883582369324178415228655113654804809941179, 1024)), 0, mod(0, 1024))
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
        }
      }
      extcodecopy(0, add(0x80, mod(80589601359239725918838567632099405770143722544414743949550908471289397675468, 1024)), 106403804874571136548861985872723760821626092233997486601151724495788470519448, mod(mload(add(0x80, mod(43154735178578295846551955370858198102459379779854878363199281025940233742563, 1024))), 1024))
    }
    (bool l0, bytes memory l1) = address(this).call(bytes("ffffffffffffffffffffffffffffffffffffffffff584e34400d2df02d1bfd7d125c06c7d636e0ad"));
    function (bytes27) external   returns (bytes18, int104) l2;
    (bool l3, bytes memory l4) = address(this).call((true ? bytes("000000000000000000000000000000000000000000000000000000000000000000000000000000000000") : msg.data));
    address payable l5 = payable(address(this));
  }
  bool immutable  s0 = false;
  address payable   s1;
  uint32  public s2;
  bytes6   s3;
  constructor(address payable i0,uint32 i1,bytes6 i2)   {
    s1 = payable(address(this));
    s2 ^= uint32(0);
    s3 |= bytes6(0xffffffffffff);
    unchecked {
      uint32  l0 = s2;
      uint32  l1 = l0;
      assert(l1 == s2);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
