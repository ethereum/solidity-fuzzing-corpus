==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external virtual  payable
  {
    assembly
    {
      switch sload(0)
      case 0
      {
        returndatacopy(add(0x80, mod(57178117910465589097668220866689171194610789509286844507830780634643789803619, 1024)), 0, mod(call(72096148745069539509746244970444706131684024010018782569190715035637034636980, 48670099568921190176938778109417486462631479969084910680287835612969228822805, 0, add(0x80, mod(57178117910465589097668220866689171194610789509286844507830780634643789803619, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, 7808079292226250672525278511303369233229498114740013902068250621259300226924, 0), 1024))
        let al0 := mload(add(0x80, mod(57178117910465589097668220866689171194610789509286844507830780634643789803619, 1024)))
      }
      default
      {
        {
        }
      }
      switch mod(84867418482438766942653519997352105278569380962565364830010131997762300076047, 0)
      default
      {
      }
    }
    address l0 = (true ? address(this) : address(this));
  }
  string  public s0 = string("00000000000000000000000000000000000000008e5b18ac0b2ffe17cda0db077a965b4a1344bf0b75c5a8c1c8");

	function compareMemoryAndStorage(string memory v1, string storage v2) internal pure returns (bool) {
		return keccak256(bytes(v1)) == keccak256(bytes(v2));
	}
}
// ----
// Warning 9592: (su0.sol:901-1023): "switch" statement with only a default case.
// Warning 2072: (su0.sol:1034-1044): Unused local variable.
