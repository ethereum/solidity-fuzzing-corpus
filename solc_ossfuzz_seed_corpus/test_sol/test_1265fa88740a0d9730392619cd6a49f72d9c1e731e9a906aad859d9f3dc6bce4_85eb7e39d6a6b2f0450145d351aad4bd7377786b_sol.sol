
==== Source: su0.sol ====
contract C0 {
  type T0 is address payable;
  struct St0 {
    bytes7 el0;
    address payable el1;
    int192 el2;
  }
  C0.St0   s0;

	function compareMemoryAndStorage(C0.St0 memory v1, C0.St0 storage v2) internal returns (bool) {

		if (v1.el0 != v2.el0)
			return false;

		if (v1.el1 != v2.el1)
			return false;

		if (v1.el2 != v2.el2)
			return false;

	return true;
	}  address   s1 = address(this);
  uint232 immutable  s2;
  constructor(uint232 i0)   {
    s2 = (uint232(1764890587322858346580270028824047178323848109728323533910419597620002) & ((~(uint232(4536678859626192593499168393828149450868548383789098440257613506296916))) % (uint232(6901746346790563787434755862277025452451108972170386555162524223799295) ** uint160(uint160(1461501637330902918203684832716283019655932542975)))));
    {
    }
  }
  type T1 is int160;
  struct St1 {
    C0.St0 el0;
    C0.St0 el1;
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C1 {
  int224 immutable  s3;
  int248   s4;
  constructor(int224 i0,int248 i1)   {
    s3 = int224(0);
    s4 |= (-((int16(32767) - int248(((int248(226156424291633194186662080095093570025917938800079226639565593765455331327) % int248(226156424291633194186662080095093570025917938800079226639565593765455331327)) / int248(226156424291633194186662080095093570025917938800079226639565593765455331327))))));
    {
    }
  }
  function f0(int224 i0,int248 i1) external     returns(uint104 o0,bytes memory o1)  {
    try this.f0({i0: int224(-13114729753379820096655546245846505435090258523598006229233703525476), i1: (-((int248(((((int248(0) | int248(25804202367185417576780176549919056961220276790517934614304364333811268521)) - int248(226156424291633194186662080095093570025917938800079226639565593765455331327)) % int248(0)) / int248(226156424291633194186662080095093570025917938800079226639565593765455331327))) | int248(0))))}) returns (uint104 l0, bytes memory l1)
    {
    }
    catch
    {
      o0 += uint104((((-((int104(9029463660327245475614594355014) | int104(10141204801825835211973625643007)))) + int104(0)) ** uint48(uint48(0))));
      (bool l2, bytes memory l3) = address(this).call(msg.data);
      return ((~((uint80(1208925819614629174706175) << uint216((uint216((uint216(0) / uint216(52026779633028122986506958863864046627556673579974371164356037767))) | uint216(12348787093528811171142997112680521809864437789230681501834520089)))))), bytes("3937358121d158f3d973239279205a45f57d71aa9584fecd4760b9b1d5361b974a19630a2c86359d43b1643209b80d11"));
    }
  }
  event ev0(bytes1  ep0) anonymous;
  event ev1();
  function f1() public virtual     {
    int248  l0 = s4;
    int248  l1 = l0;
    assert(l1 == s4);
    if (false)
    {
    }
    for(    int40 l2 = (int40(0) ^ (int40(uint40(1099511627775)) % (-(int40(0)))));
;
[int96(-24093484795197966357067939276), int96(-35658553390748589541718026178), int96(0), int96(6029809984951180358063420077), int96(0), int96(2795656389217428628077515543), int96(39614081257132168796771975167)])
    {
      continue;
    }
    int224  l3 = s3;
    int224  l4 = l3;
    assert(l4 == s3);
  }
  event ev2();
}
struct St2 {
  uint176 el0;
  bytes16 el1;
}
error er0();
// ====
// ----
