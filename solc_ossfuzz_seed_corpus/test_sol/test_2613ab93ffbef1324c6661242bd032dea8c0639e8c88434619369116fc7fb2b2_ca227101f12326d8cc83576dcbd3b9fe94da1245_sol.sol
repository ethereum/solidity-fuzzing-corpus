
==== Source: su0.sol ====
contract C0 {
  int192 immutable  s0;
  constructor(int192 i0) payable  {
    s0 = int128((((((int128(128939263886131674615020727852377544237) * int128(165230819471027414775442413084524736918)) * int128(170141183460469231731687303715884105727)) - int128(170141183460469231731687303715884105727)) * int128(170141183460469231731687303715884105727)) / int128(-151525239939549333128590194434542540264)));
    {
      i0 |= (int192((int192(3138550867693340381917894711603833208051177722232017256447) / (~(((int192(0) | int192(3138550867693340381917894711603833208051177722232017256447)) ** uint256(uint256(67889075474983589757074362469312920267176852056480886450302711624333668867000))))))) & int192(3138550867693340381917894711603833208051177722232017256447));
      int192  l0 = s0;
      int192  l1 = l0;
      assert(l1 == s0);
      int192  l2 = s0;
      int192  l3 = l2;
      assert(l3 == s0);
      int192  l4 = s0;
      int192  l5 = l4;
      assert(l5 == s0);
      int192  l6 = s0;
      int192  l7 = l6;
      assert(l7 == s0);
    }
  }
  fallback() external   
  {
    assembly
    {
      switch 87044936957781975117737922386692807632304295339625842510991610566169276543097
      case 104102621234590333744839851897670039434895668961007740869506395050405938788634
      {
        return(0, 0)
      }
    }
    int192  l0 = s0;
    int192  l1 = l0;
    assert(l1 == s0);
    int192  l2 = s0;
    int192  l3 = l2;
    assert(l3 == s0);
    int192  l4 = s0;
    int192  l5 = l4;
    assert(l5 == s0);
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
