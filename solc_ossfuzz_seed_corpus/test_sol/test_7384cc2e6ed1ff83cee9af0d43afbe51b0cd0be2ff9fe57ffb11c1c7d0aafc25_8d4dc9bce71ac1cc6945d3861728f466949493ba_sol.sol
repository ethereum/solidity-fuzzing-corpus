
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
contract C0 {
  function f0() private   
  {
  }
  uint184 immutable public s0;
  uint152   s1 = uint152(218629968781543949420506107880783103395364659);
  address payable   s2 = payable(address(this));
  int176   s3 = int176(0);
  constructor(uint184 i0)   {
    s0 = (uint88(137420536680319167896158752) + ((uint64(18446744073709551615) & uint184(24519928653854221733733552434404946937899825954937634815)) & uint184(0)));
    {
      address payable  l0 = s2;
      address payable  l1 = l0;
      assert(l1 == s2);
      uint152  l2 = s1;
      uint152  l3 = l2;
      assert(l3 == s1);
    }
  }
  fallback() external virtual  
  {
    assembly
    {
    }
    address payable  l0 = s2;
    address payable  l1 = l0;
    assert(l1 == s2);
  }
}
contract C1 {
  receive() external   payable
  {
    function (int128) external   returns (address payable, uint8, bytes22) l0;
    assembly
    {
      {
        let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
      }
      for 
      {
      }
      115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        selfdestruct(0)
      }
      {
        for 
        { let yulinit0 := 0 } lt(yulinit0, mod(0, 11)) { yulinit0 := add(yulinit0, 1) }
        {
          calldatacopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))), mod(mload(add(0x80, mod(0, 2048))), 1024))
          switch or(create(65531880328488201885287104761259355270946599873619650646596938497393091409492, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0), 71785695832911079733878671966820055906939673616466065123168073762302995629386)
          default
          {
            continue
          }
          continue
        }
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          stop()
        }
        case 26434711755288843766570219989069048002599402639990780929153787138664387338220
        {
          break
        }
        default
        {
          pop(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))))
        }
        for 
        {
        }
        115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
        }
        {
          calldatacopy(add(0x80, mod(calldataload(mod(byte(65988712412491100789600860119702098471170195448197132173773199941088631337426, 0), calldatasize())), 1024)), 0, mod(keccak256(add(0x80, mod(calldataload(mod(byte(65988712412491100789600860119702098471170195448197132173773199941088631337426, 0), calldatasize())), 1024)), 0), 1024))
          {
          }
          continue
        }
        returndatacopy(add(0x80, mod(63476809070510487783405202092537412738441014242833149706425499304644611281825, 1024)), sload(53233415322938837970172000019190606427677983076762543495450068061919398217491), mod(106497886419456460740513420155176549282826290570945910226869092369904314396967, 1024))
      }
    }
  }
  bool  public s4 = false;
  address payable  public s5 = payable(address(this));
  error er0(function () external   returns (function (int168, C0, address) external  , uint160) ep0);
}
pragma solidity >= 0.0.0;
// ====
// ----
