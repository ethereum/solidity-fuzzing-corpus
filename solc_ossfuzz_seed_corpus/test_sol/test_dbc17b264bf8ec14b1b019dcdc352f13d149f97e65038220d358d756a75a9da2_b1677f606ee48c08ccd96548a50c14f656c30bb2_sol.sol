
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  uint224   s0;
  bytes3  public s1;
  int216   s2;
  uint88  public s3 = uint88(207993058208701879569538634);
  constructor(uint224 i0,bytes3 i1,int216 i2)   {
    s0 = uint224(0);
    s1 ^= bytes3(0xd010b9);
    s2 *= int216(((int216(0) + (int216(52656145834278593348959013841835216159447547700274555627155488767) & (int216(30342694643690588968346236605799312594230672978886703819060135555) & int216(52656145834278593348959013841835216159447547700274555627155488767)))) / int216(52656145834278593348959013841835216159447547700274555627155488767)));
    {
      (bool l0) = payable(this).send(998577501712498078);
      uint224  l1 = s0;
      uint224  l2 = l1;
      assert(l2 == s0);
    }
  }
  fallback() external virtual  payable
  {
  }
}
library L0 {
  function f1(int112 i0,bool i1,int216 i2) public   
  {
    i0 -= (int112(2596148429267413814265248164610047) + int112(0));
    address l0 = address((ripemd160(bytes("000000000000000000000000000000000000000000000000000000ffff")) | bytes20(address(0x0000000000000000000000000000000000000000))));
  }
}
using L0 for int112;
// ====
// ----
