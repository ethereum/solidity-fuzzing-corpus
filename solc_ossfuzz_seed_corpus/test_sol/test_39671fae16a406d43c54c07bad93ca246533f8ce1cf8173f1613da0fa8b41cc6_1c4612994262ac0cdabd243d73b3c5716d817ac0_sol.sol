==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external   payable
  {
  }
  uint160[3]   s0;

	function compareMemoryAndStorage(uint160[3] memory v1, uint160[3] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  string   s1 = string("52c9a93685ba3e1be10b8005eebb5999d8bbdc0ef79f09dfa2be252783d7f70000000000000000000000000000000000000000000000000000");

	function compareMemoryAndStorage(string memory v1, string storage v2) internal pure returns (bool) {
		return keccak256(bytes(v1)) == keccak256(bytes(v2));
	}
  constructor(uint160[3] memory i0)   {
    s0 = i0;
    unchecked {
      (bool l0, bytes memory l1) = payable(this).call{value: 5599707098697273862}("");
      string memory l2 = s1;
      string memory l3 = l2;
      assert(compareMemoryAndStorage(l3, s1));
      uint160[3] memory l4 = s0;
      uint160[3] memory l5 = l4;
      assert(compareMemoryAndStorage(l5, s0));
      (s0[(((payable(address(this)).balance * (uint256(0) & uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) + uint256(98844708789355618676432565434251571380294851693803572557339216395219422584598)) % uint256(0))], l5[uint256((uint256(((true ? ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ^ uint256(0)) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) : uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(0))) / uint256(0)))]) = (l5[(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) - (uint256(0) << uint216(uint216(28828299540842019856620774551657315384245151894082978541992695802)))) + uint256(82727722353709446746797038417611510929090976260421593773687082056779698873635)) - uint256(0))], uint160((uint160(0) / (uint160(0) % (uint160((uint160(1222921117699362101470557345636525895893948068715) / uint160(0))) % uint160(0))))));
      assert(s0[(((payable(address(this)).balance * (uint256(0) & uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) + uint256(98844708789355618676432565434251571380294851693803572557339216395219422584598)) % uint256(0))] == l5[(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) - (uint256(0) << uint216(uint216(28828299540842019856620774551657315384245151894082978541992695802)))) + uint256(82727722353709446746797038417611510929090976260421593773687082056779698873635)) - uint256(0))]);
      assert(l5[uint256((uint256(((true ? ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ^ uint256(0)) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) : uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(0))) / uint256(0)))] == uint160((uint160(0) / (uint160(0) % (uint160((uint160(1222921117699362101470557345636525895893948068715) / uint160(0))) % uint160(0))))));
    }
  }
  fallback() external virtual  
  {
    s0[uint256((uint256(0) / uint256((true ? (int256(57896044618658097711785492504343953926634992332820282019728792003956564819967) | int256(0)) : int256(42763786105010835123694809637520592504101722886093755819892669051869617242415)))))] /= s0[(~((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * ((true ? uint256(10597582277523483321437850255306103056625439771654210711675561985444044167158) : uint256(85375572955453866147478359022757556955712379720092908283395889654512699245164)) + uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))))];
  }
}
// ----
// Warning 2072: (su1.sol:730-737): Unused local variable.
// Warning 2072: (su1.sol:739-754): Unused local variable.
// Warning 2018: (su1.sol:100-350): Function state mutability can be restricted to view
