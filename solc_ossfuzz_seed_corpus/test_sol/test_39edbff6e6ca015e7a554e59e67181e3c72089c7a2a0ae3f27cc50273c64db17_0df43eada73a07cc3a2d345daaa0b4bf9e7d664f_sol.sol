
==== Source: su0.sol ====
contract C0 {
  struct St0 {
    int120 el0;
    bytes el1;
  }
  int136[]  public s0 = [int136(0), int136(0), int136(0), int136(0), int136(43556142965880123323311949751266331066367), int136(0), int136(-15568077964162008407969048289062818101529), int136(43556142965880123323311949751266331066367), int136(4004218332443399134588858894515077786293), int136(-7868870578622588224158416513577493950482)];

	function compareMemoryAndStorage(int136[] memory v1, int136[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  int104   s1;
  uint64  public s2 = uint64(18446744073709551615);
  address  public s3;
  constructor(int104 i0,address i1)   {
    s1 *= ((int104(10141204801825835211973625643007) ^ (int104(10141204801825835211973625643007) ^ (~(int104(215602257495362105675434220898))))) % int104(0));
    s3 = address(this);
    {
      int136[] memory l0 = s0;
      int136[] memory l1 = l0;
      assert(compareMemoryAndStorage(l1, s0));
    }
  }
}
pragma solidity >= 0.0.0;
contract C1 is C0 {
  receive() external   payable
  {
    (s0[uint256(88249918262478471312137384435971391904246245444245135832786076846796217394894)], s3, s3) = (s0[((uint256((((uint256(99566022661179502181993438430401994997696669044660574927543938098011858218673) & uint256(0)) + uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(65540253982351919328507767814658419899404638272944479627437818924779623487456))) ^ uint256(0)) >> uint144(uint144(0)))], address(this), msg.sender);
    assert(s0[uint256(88249918262478471312137384435971391904246245444245135832786076846796217394894)] == s0[((uint256((((uint256(99566022661179502181993438430401994997696669044660574927543938098011858218673) & uint256(0)) + uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(65540253982351919328507767814658419899404638272944479627437818924779623487456))) ^ uint256(0)) >> uint144(uint144(0)))]);
    assert(s3 == address(this));
    assert(s3 == msg.sender);
  }
  int88  public s4 = int88(0);
  int80   s5 = int80(604462909807314587353087);
  uint56 immutable public s6;
  constructor(int104 i0,address i1,uint56 i2)  C0((((~(((true ? true : true) ? int104(10141204801825835211973625643007) : int104(10141204801825835211973625643007)))) | int104(10141204801825835211973625643007)) ** uint24(uint24(11634171))), address(this))
  {
    s1 /= ((int104(0) ^ (-((int104(10141204801825835211973625643007) ** uint144(uint144(22300745198530623141535718272648361505980415)))))) & int104(10141204801825835211973625643007));
    s3 = address(this);
    s6 = ((uint56(56490349547143873) + uint56(0)) * uint56(69329282752795393));
    unchecked {
      uint64  l0 = s2;
      uint64  l1 = l0;
      assert(l1 == s2);
      uint56  l2 = s6;
      uint56  l3 = l2;
      assert(l3 == s6);
      int136[] memory l4 = s0;
      int136[] memory l5 = l4;
      assert(compareMemoryAndStorage(l5, s0));
    }
  }
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
