
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
bytes19 constant cons0 = bytes19(0x050ef57221582b47f58cb4327cb586040c4d7f);
function f0(function (bytes28, bool) external   returns (bytes1, uint216) i0,bool i1,address i2)     returns(bytes10 o0,address o1)
{
  function (uint48) external   returns (bool, uint248) l0;
  assembly
  {
    switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
    case 115792089237316195423570985008687907853269984665640564039457584007913129639935
    {
      o0 := i1
      for 
      { let yulinit0 := 0 } lt(yulinit0, mod(i2, 11)) { yulinit0 := add(yulinit0, 1) }
      {
        switch i1
        default
        {
          codecopy(add(0x80, mod(chainid(), 1024)), i2, mod(or(0, 0), 1024))
          for 
          {
          }
          byte(gaslimit(), 38176357761444126891082415156611208522945240998443916573727627844964760149379)
          {
          }
          {
          }
        }
        switch 0
        case 0
        {
          continue
        }
        for 
        {
        }
        i2
        {
          let al0 := 32641569503304109077457262287528316932942801663909964164528720833714649253330
        }
        {
          continue
        }
        calldatacopy(add(0x80, mod(i2, 1024)), i2, mod(mload(add(0x80, mod(i2, 1024))), 1024))
      }
    }
    case 0
    {
      if extcodesize(0)
      {
        returndatacopy(add(0x80, mod(keccak256(add(0x80, mod(i2, 1024)), 31171688784984238239248290027827519043454669680154006641929160371068143216217), 1024)), create(64922050011727403965932473458669462486186741575026736101771752305147013654884, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 27225132958596009814556689273106722821342620660844167610310492431562254326214), mod(0, 1024))
        {
          for 
          { let yulinit1 := 0 } lt(yulinit1, mod(21063507518310786011235220187436152472643728619440076420897586656989318931006, 11)) { yulinit1 := add(yulinit1, 1) }
          {
            o1 := mul(i2, 41422600814791561937343798473365980388961760964097370376888208901241040301481)
            return(add(0x80, mod(i2, 1024)), i1)
          }
        }
        switch 0
        case 23507558663722632708477177070303992155472006328915003110374361019163490163496
        {
        }
        o0 := returndatasize()
      }
    }
    function af0(ai0, ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8, ai9) -> ao0, ao1, ao2, ao3, ao4, ao5, ao6, ao7, ao8, ao9, ao10, ao11, ao12, ao13, ao14, ao15, ao16, ao17
    {
      for 
      { let yulinit2 := 0 } lt(yulinit2, mod(ai9, 11)) { yulinit2 := add(yulinit2, 1) }
      {
        switch ai6
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          let al1, al2, al3, al4, al5, al6, al7, al8, al9, al10, al11, al12, al13, al14, al15, al16, al17, al18 := af0(0, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 0, 19095443687450737887345264010455504389030846723942833241616072899083751592242, 7884077540910961194196995537073589083904427782695605684831490847666138824591, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)
        }
        case 54535732391420899514428151828782121864215131955639316902823680534980061573816
        {
          return(0, ai9)
        }
        return(add(0x80, mod(keccak256(add(0x80, mod(i2, 1024)), 31171688784984238239248290027827519043454669680154006641929160371068143216217), 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935)
      }
    }
  }
}
// ====
// ----
