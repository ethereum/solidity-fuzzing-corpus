
==== Source: su0.sol ====
contract C0 {
  bytes21   s0 = bytes21(0xffffffffffffffffffffffffffffffffffffffffff);
  uint72 immutable  s1 = uint72(1774148525686916777257);
  receive() external   payable
  {
    {
      assembly
      {
        switch s0.slot
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
        }
        case 0
        {
          for 
          {
            codecopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(s0.offset, 1024))
            pop(s0.slot)
          }
          115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
          {
          }
        }
        switch callvalue()
        default
        {
          codecopy(add(0x80, mod(39956541304515720373526954793069924709245223827385191460032666622750726078819, 1024)), exp(115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        }
        calldatacopy(add(0x80, mod(s0.slot, 1024)), mulmod(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 95637383255622764978865580909759918458934598113988302155461629264002832485175), mod(0, 1024))
        stop()
      }
      (s0) = ((bytes21((~(bytes11(0x0000000000000000000000)))) & bytes21(0xffffffffffffffffffffffffffffffffffffffffff)));
      assert(s0 == (bytes21((~(bytes11(0x0000000000000000000000)))) & bytes21(0xffffffffffffffffffffffffffffffffffffffffff)));
      revert(string("06905aab647c462d872992bb78ca8c542586510e42540334a5e28fc00ff9bb3a"));
    }
    bytes21  l0 = s0;
    bytes21  l1 = l0;
    assert(l1 == s0);
    (bool l2, bytes memory l3) = payable(this).call{value: 12464902878407070833}("");
    bytes21  l4 = s0;
    bytes21  l5 = l4;
    assert(l5 == s0);
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
