
==== Source: su0.sol ====
contract C0 {
  type T0 is int8;
  C0.T0 public constant cons0 = C0.T0.wrap(int8(127));
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116, M117, M118, M119,
    M120, M121, M122, M123, M124, M125, M126, M127,
    M128, M129, M130, M131, M132, M133, M134, M135,
    M136, M137, M138, M139, M140, M141, M142, M143,
    M144, M145, M146, M147, M148, M149, M150, M151,
    M152, M153, M154, M155, M156, M157, M158, M159,
    M160, M161, M162, M163, M164, M165, M166, M167,
    M168, M169, M170, M171, M172, M173, M174, M175,
    M176, M177, M178, M179, M180, M181, M182, M183,
    M184, M185, M186, M187, M188, M189, M190, M191,
    M192, M193, M194, M195, M196, M197, M198, M199,
    M200, M201, M202, M203, M204, M205, M206, M207,
    M208, M209, M210, M211, M212, M213, M214, M215,
    M216, M217, M218, M219, M220, M221, M222
  }
  function f0(bytes21 i0) public   
  {
  }
  function f1(bool i0,bool i1) public virtual  payable returns(C0.EN0 o0,int152 o1)
  {
    if ((C0.EN0.M45 > C0.EN0.M140))
    {
    }
    else
    {
    }
  }
  uint208  public s0;
  C0.EN0   s1 = C0.EN0.M24;
  uint112   s2 = uint112(5192296858534827628530496329220095);
  C0.EN0  public s3;
  constructor(uint208 i0,C0.EN0 i1)   {
    s0 %= ((((((uint208(411376139330301510538742295639337626245683966408394965837152255) << uint112(uint112(5192296858534827628530496329220095))) ** uint104(uint104(0))) << uint184(uint184(24519928653854221733733552434404946937899825954937634815))) - uint208(192553799953043424684753580493450720757530544617352372159121090)) * uint208(277425504657901093764572897840460153933342961000209625850470730)) << uint56(uint56(55845261581068780)));
    s3 = C0.EN0.M85;
    unchecked {
      {
        for(        payable(address(this));
true;
"ffffffffffffffffffffffffffffffff")
        {
        }
        (s0) = (((((uint208(213234240450390578931513701419686774185881255792488411598885123) ** uint240((uint240(1766847064778384329583297500742918515827483896875618958121606201292619775) ** uint48(uint48(180749559324696))))) << uint80(uint80(754312115190664239741069))) % uint208(0)) & uint208(0)));
        if (false)
        {
          int48[1] memory l0 = [int48(0)];
        }
        else if (false)
        {
        }
        else if ((((((int232(0) ^ int232(-402919328939300278271803187990924243923975454090903097099074213794642)) + int232(3450873173395281893717377931138512726225554486085193277581262111899647)) & int232(404720410639823477749534474739615886195733047958793505705192379077678)) * int232(0)) <= int232(0)))
        {
        }
      }
    }
  }
  modifier m0() 
  {
    _;
    uint248 l0 = uint248(0);
    (s3) = (C0.EN0.M88);
    for(    true;
;
)
    {
      continue;
      _;
      assembly
      {
        {
          return(s1.offset, s1)
        }
        for 
        {
        }
        sload(s2.slot)
        {
        }
        {
        }
      }
      continue;
    }
  }
  error er0(uint32 ep0, function (C0.EN0, int48, address) external   returns (uint256, address, bool) ep1);
}
pragma solidity >= 0.0.0;
function f2()    
{
  if (false)
  {
  }
  else
  {
    if (true)
    {
    }
  }
}
type T1 is int40;
// ====
// ----
