
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  bytes18   s0 = bytes18(0x95d476073d1e9457c33f00ea76f00106b6fc);
  bool   s1;
  address  public s2 = address(this);
  constructor(bool i0)   {
    s1 = ((((((uint216(0) % uint216(105312291668557186697918027683670432318895095400549111254310977535)) >> uint192(uint192(6277101735386680763835789423207666416102355444464034512895))) ^ uint216(0)) * uint216(105312291668557186697918027683670432318895095400549111254310977535)) | uint216(0)) != uint216(0));
    {
      address  l0 = s2;
      address  l1 = l0;
      assert(l1 == s2);
      address  l2 = s2;
      address  l3 = l2;
      assert(l3 == s2);
    }
  }
}
function f0(uint256 i0,string memory i1)     returns(bool o0,bool o1)
{
  (o1) = ((((int104(-6647895026753501487404029870122) % int104(0)) != (int104(-668850220911637431847494934403) & int104(10141204801825835211973625643007))) ? false : true));
  assert(o1 == (((int104(-6647895026753501487404029870122) % int104(0)) != (int104(-668850220911637431847494934403) & int104(10141204801825835211973625643007))) ? false : true));
  address payable[][4][10][5][][] memory l0 = new address payable[][4][10][5][][](3);
}
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141, M142, M143,
  M144, M145, M146, M147, M148, M149, M150, M151,
  M152, M153, M154, M155
}
// ====
// ----
