
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
library L0 {
  modifier m0() 
  {
    uint32 l0 = uint32(0);
    _;
    function (bytes9) internal   returns (bool[][][][][] memory) l1;
  }
  function f0(bool i0,function (uint128, address) external   returns (address, function () external  ) i1) public  m0() 
  {
  }
  function f1() external   
  {
    unchecked {
      int80 l0 = ((int80(604462909807314587353087) - (int80(0) | (int80(-248260476057193174410604) % int80(604462909807314587353087)))) + int80(0));
      for(      string("35755006442e42533c1c0e76de0f454bcf76");
((int152(2854495385411919762116571938898990272765493247) - (int152(2854495385411919762116571938898990272765493247) - int152((int152(2854495385411919762116571938898990272765493247) / int152(2854495385411919762116571938898990272765493247))))) <= int152(0));
payable(address(0x0000000000000000000000000000000000000001)))
      {
      }
      uint152 l1 = (((((~(uint152(2890658862653403146058535177465462315570184855))) << uint24(uint24(16777215))) + uint152(2415694777955656841296802319953148225176720697)) - uint152(5484570378888758389566072790269180275807880183)) + uint152(200729700372022036205345583931659589024737502));
      address l2 = address(bytes20(address(0xc45eC9A646e60045050a1745B9f5514428FEfAC9)));
    }
    address l3 = msg.sender;
    (l3) = (address(0x0000000000000000000000000000000000000008));
    assert(l3 == address(0x0000000000000000000000000000000000000008));
  }
}
using L0 for bool;
// ====
// ----
