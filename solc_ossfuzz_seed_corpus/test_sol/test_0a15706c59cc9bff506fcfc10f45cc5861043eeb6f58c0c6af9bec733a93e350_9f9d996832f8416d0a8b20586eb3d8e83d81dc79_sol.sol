
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
contract C0 {
  int184[]  public s0 = [int184(0)];

	function compareMemoryAndStorage(int184[] memory v1, int184[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bytes17   s1;
  constructor(bytes17 i0) payable  {
    s1 |= bytes17(0xcbc92b7db4a3b4f9f9dd03532fffb54bbc);
    {
      bytes17  l0 = s1;
      bytes17  l1 = l0;
      assert(l1 == s1);
      (s0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)], s1, s0[((uint256(96217065703203771072070227577666842193678270098910678955894374980533583175174) ^ (((uint256(93707063139329752549362515073116761250585392890199674712871902015288899900421) - uint256(112283251645039307878708211069723070293155785143266313119670505312773240762713)) ** uint232(uint232(4724890598341748789328975159249954489949013757669122841147966155833073))) + uint256(63100874492793829863083202348950421672309101153153937878376766370853908034934))) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))]) = (int184(12044382215990040432705132493293985322481973421692556792), (bytes17(0x0000000000000000000000000000000000) | ((address(this) != address(this)) ? bytes17(0x23232407e3e1c4a2737007d79a1a8b47cd) : bytes17(0xfacc372ce396352842c3af8c00bbbaa1b4))), (((int184(-3653330832332319654295885896558404862715588741442201282) ^ ((int184(0) * int184(7374350566015684908078103354965387465748567997466289986)) & int184(0))) * int184(10276584962550384578556458483902252608996992571560007067)) ** uint16(uint16(4463))));
      assert(s0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)] == int184(12044382215990040432705132493293985322481973421692556792));
      assert(s1 == (bytes17(0x0000000000000000000000000000000000) | ((address(this) != address(this)) ? bytes17(0x23232407e3e1c4a2737007d79a1a8b47cd) : bytes17(0xfacc372ce396352842c3af8c00bbbaa1b4))));
      assert(s0[((uint256(96217065703203771072070227577666842193678270098910678955894374980533583175174) ^ (((uint256(93707063139329752549362515073116761250585392890199674712871902015288899900421) - uint256(112283251645039307878708211069723070293155785143266313119670505312773240762713)) ** uint232(uint232(4724890598341748789328975159249954489949013757669122841147966155833073))) + uint256(63100874492793829863083202348950421672309101153153937878376766370853908034934))) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))] == (((int184(-3653330832332319654295885896558404862715588741442201282) ^ ((int184(0) * int184(7374350566015684908078103354965387465748567997466289986)) & int184(0))) * int184(10276584962550384578556458483902252608996992571560007067)) ** uint16(uint16(4463))));
      (bool l2, bytes memory l3) = payable(this).call{value: 0}("");
      bytes17  l4 = s1;
      bytes17  l5 = l4;
      assert(l5 == s1);
    }
  }
  function f0() public virtual  
  {
    bytes17  l0 = s1;
    bytes17  l1 = l0;
    assert(l1 == s1);
  }
  receive() external   payable
  {
    assembly
    {
      let al0 := s0.offset
    }
    bytes17  l0 = s1;
    bytes17  l1 = l0;
    assert(l1 == s1);
    this.f0();
  }
}
error er0();
pragma solidity >= 0.0.0;
// ====
// ----
