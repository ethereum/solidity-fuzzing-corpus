
==== Source: su0.sol ====
library L0 {
  function f0() public    returns(bytes memory o0)
  {
  }
}
library L1 {
  function f1(bool i0) external   
  {
    assembly
    {
      switch i0
      case 0
      {
        {
          i0 := i0
        }
        {
          return(mul(i0, 57632012636500589941542471205424512998598850013984068876908370155299148567797), i0)
        }
      }
      case 12831419628563289199876871134741352910750879282895094007931943420010143074962
      {
      }
      for 
      { let yulinit0 := 0 } lt(yulinit0, mod(0, 11)) { yulinit0 := add(yulinit0, 1) }
      {
        sstore(calldataload(mod(i0, calldatasize())), 115792089237316195423570985008687907853269984665640564039457584007913129639935)
        return(99307539535515683509893123213574168582255972633844795533439835113935482378791, 92531903989357409916487734106997161400818280001595222984561062195944127820204)
      }
      return(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)
    }
    int176 l0 = (false ? ((int64(0) % int64(0)) * int64(7934377082455717682)) : int64(0));
  }
  function f2() external   
  {
    payable(address(0x0000000000000000000000000000000000000008));
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
