==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  fallback() external   payable
  {
  }
  int256[8]   s0;

	function compareMemoryAndStorage(int256[8] memory v1, int256[8] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(int256[8] memory i0) payable  {
    s0 = i0;
    {
      i0[(uint256((((uint256(0) | (uint256(0) + uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) << uint184(uint184(24519928653854221733733552434404946937899825954937634815))) / uint256(113039344850109049632078305051338580355818157972305282040842505389172340005237))) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))] /= int256(-37838099058405448574517965093184488440815911559524333278045376215565621730988);
      revert(string.concat(string("00000000000000000000000000000000000000000000000000000000000000000000"), string.concat(string("00000000000000000000000000"), string("1852a5ef556b10d3c20dd0f982b6d35d74cb171de3d6905b7d"), string("0000000000000000000000000000000000000000000000000000")), string("000000000000000000000000000000000000000000000000000000000000008725c2dee89f033009b2e2ae9cda188f6572")));
    }
  }
  receive() external   payable
  {
  }
}
// ----
// Warning 2018: (su0.sol:100-348): Function state mutability can be restricted to view
