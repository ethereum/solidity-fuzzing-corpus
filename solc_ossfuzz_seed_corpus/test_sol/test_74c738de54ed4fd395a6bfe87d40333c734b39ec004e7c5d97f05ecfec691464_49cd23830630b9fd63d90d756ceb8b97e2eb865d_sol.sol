
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  address payable[8]   s0;

	function compareMemoryAndStorage(address payable[8] memory v1, address payable[8] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bytes11  public s1;
  address payable  public s2;
  uint72 immutable  s3 = uint72(2158800140984979254294);
  constructor(address payable[8] memory i0,bytes11 i1,address payable i2) payable  {
    s0 = i0;
    s1 = bytes11(0x0000000000000000000000);
    s2 = payable(address(this));
    {
      address payable  l0 = s2;
      address payable  l1 = l0;
      assert(l1 == s2);
      address payable[8] memory l2 = s0;
      address payable[8] memory l3 = l2;
      assert(compareMemoryAndStorage(l3, s0));
      (l2[uint256(45178299864335515867320898334813982609767968004798168162101199337811046738249)]) = (payable(msg.sender));
      assert(l2[uint256(45178299864335515867320898334813982609767968004798168162101199337811046738249)] == payable(msg.sender));
      (i0[uint256(0)], s2, l2[uint256((((l2.length % (address(this).balance % uint256(0))) >> uint192(uint192(6277101735386680763835789423207666416102355444464034512895))) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))]) = (l2[(payable(address(this)).balance ^ (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) & uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))], payable(address(this)), i0[((uint256(0) * (uint256(0) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) | uint256(112417464332209597228363669477899696100520474267180530842824185227324795967904))]);
      assert(i0[uint256(0)] == l2[(payable(address(this)).balance ^ (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) & uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))]);
      assert(s2 == payable(address(this)));
      assert(l2[uint256((((l2.length % (address(this).balance % uint256(0))) >> uint192(uint192(6277101735386680763835789423207666416102355444464034512895))) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))] == i0[((uint256(0) * (uint256(0) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) | uint256(112417464332209597228363669477899696100520474267180530842824185227324795967904))]);
      (bool l4, bytes memory l5) = payable(this).call{value: 0}("");
      (bool l6, bytes memory l7) = payable(this).call{value: 0}("");
      delete l3[uint256(((((uint256(47944273508661777179650270478773554949505672172510199145953793506470586052768) & (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) & uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) % uint256(0)) & uint256(0)) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))];
    }
  }
  receive() external   payable
  {
  }
  function f1() private    returns(uint176 o0)
  {
    uint72  l0 = s3;
    uint72  l1 = l0;
    assert(l1 == s3);
  }
}
// ====
// ----
