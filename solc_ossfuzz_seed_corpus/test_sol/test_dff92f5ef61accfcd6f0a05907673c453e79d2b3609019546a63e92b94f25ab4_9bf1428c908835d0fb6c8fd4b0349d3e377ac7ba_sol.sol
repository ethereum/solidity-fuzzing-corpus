==== Source:  ====

==== Source: su0.sol ====
library L0 {
  function f0() external    returns(uint192[4] memory o0)
  {
    (o0[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * ((((uint256(0) + uint256(0)) + uint256(48379338740489173160214311780600587251820867335953664222702735082789605830600)) * uint256(51994355768004482912994874254953491243319237054470950775108239371652081957249)) >> uint64(uint64(0))))], o0[(uint256(0) % uint256(10625885092111519368264085503534190954257293291963067253572552022964042016781))], o0[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) + ((((uint256(0) ^ uint256(114888280918139596678569507892357702327198922831215835220728664540159961719803)) | uint256(0)) ^ uint256(0)) >> uint240(uint240(1766847064778384329583297500742918515827483896875618958121606201292619775))))]) = (uint192(5204992507390121543939579320980951883504337044026481579619), (((uint192(0) & (uint192(2560389445493860117332550870515966272449500418451467397098) + uint192(126425816312981125672551217290229899197476571060917078396))) + uint192(535709789723350246559886009965089546497991932715939060469)) & uint192(6277101735386680763835789423207666416102355444464034512895)), uint192(((uint192(0) + (uint192(1818572529448987878271811292073680480433099784287731775294) + uint192(423228958401441305082269967521565418555042281442964979473))) + uint192(0))));
    assert(o0[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * ((((uint256(0) + uint256(0)) + uint256(48379338740489173160214311780600587251820867335953664222702735082789605830600)) * uint256(51994355768004482912994874254953491243319237054470950775108239371652081957249)) >> uint64(uint64(0))))] == uint192(5204992507390121543939579320980951883504337044026481579619));
    assert(o0[(uint256(0) % uint256(10625885092111519368264085503534190954257293291963067253572552022964042016781))] == (((uint192(0) & (uint192(2560389445493860117332550870515966272449500418451467397098) + uint192(126425816312981125672551217290229899197476571060917078396))) + uint192(535709789723350246559886009965089546497991932715939060469)) & uint192(6277101735386680763835789423207666416102355444464034512895)));
    assert(o0[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) + ((((uint256(0) ^ uint256(114888280918139596678569507892357702327198922831215835220728664540159961719803)) | uint256(0)) ^ uint256(0)) >> uint240(uint240(1766847064778384329583297500742918515827483896875618958121606201292619775))))] == uint192(((uint192(0) + (uint192(1818572529448987878271811292073680480433099784287731775294) + uint192(423228958401441305082269967521565418555042281442964979473))) + uint192(0))));
  }
}
pragma solidity >= 0.0.0;
contract C0 {
  bytes18   s0 = bytes18(0x000000000000000000000000000000000000);
  int200   s1;
  bool  public s2 = true;
  address immutable  s3 = address(this);
  constructor(int200 i0)   {
    s1 ^= i0;
    unchecked {
      address  l0 = s3;
      address  l1 = l0;
      assert(l1 == s3);
      int200(-602583832357159504308796086489063688121637556597046811511835);
    }
  }
  fallback() external   
  {
    bytes18  l0 = s0;
    bytes18  l1 = l0;
    assert(l1 == s0);
    int200  l2 = s1;
    int200  l3 = l2;
    assert(l3 == s1);
    s2 = false;
    assert(s2 == false);
    address  l4 = s3;
    address  l5 = l4;
    assert(l5 == s3);
  }
  using L0 for *;
  using L0 for *;
  using L0 for *;
}
// ----
// Warning 6133: (su0.sol:3073-3142): Statement has no effect.
// Warning 2018: (su0.sol:15-2745): Function state mutability can be restricted to pure
