
==== Source: su0.sol ====
type T0 is uint224;
contract C0 {
  fallback() external virtual  payable
  {
    if ((false && true))
    {
    }
    else
    {
      do
      {
        continue;
        assert(true);
        if (false)
        {
        }
        else if (true)
        {
        }
        else
        {
          break;
        }
        unchecked {
          for(;
;
(((uint224(26959946667150639794667015087019630673637144422540572481103610249215) | ((uint224(25083878489922213142166896385476950890149683869661621303031720774569) >> uint224(uint224(26959946667150639794667015087019630673637144422540572481103610249215))) << uint96(uint96(0)))) - uint224(0)) > uint224(0)))
          {
          }
        }
      }
      while (true);
      assembly
      {
        let al0 := call(mul(13076363079997447386123753739892430974848015200304286239126019520857046558411, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 87658266305830978701662906587339341101710013766571419544324240303207505742978, 7192147851718679601254280480739392659985368628117642986780399311702236110686, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 108140067495060232580301829602549650816863372511178119283731248122699463927920, 0, 0)
        for 
        {
          stop()
        }
        17500038359708066655273097337366457570760326027370289701009910734927790411512
        {
        }
        {
        }
      }
    }
  }
  modifier m0(bytes4 i0) virtual
  {
    _;
    (bool l0, bytes memory l1) = payable(this).call{value: 3434240340486008998}("");
  }
  event ev0();
  struct St0 {
    int48 el0;
  }
  modifier m1(function (uint168, C0.St0 memory) internal   i0,int256 i1) 
  {
    _;
  }
  T0   s0 = T0.wrap(uint224(0));
  address immutable  s1;
  address payable   s2 = payable(address(this));
  constructor(address i0)   {
    s1 = address(this);
    { }
  }
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116
  }
  event ev1(bytes27  ep0);
}
contract C1 {
  type T1 is bool;
  mapping(int64 => uint8)[1]   s3;
  int240 public constant cons0 = (((((int240(638318840305270244724771539248294638559712950830988535670047856840429380) % int240(0)) | int240(883423532389192164791648750371459257913741948437809479060803100646309887)) % int240(-516014796148168078137457103097544806210875408113012821853442394352254611)) | int240(-127016106744562813464730054936052720531806483885596661342075429669661147)) ^ int240(-850418633734151560610388406029286938341186121237357588727141283669476008));
}
int128 constant cons1 = ((((int128(((int128(170141183460469231731687303715884105727) ** uint40(uint40(0))) / int128(29909525628555015507439402127291551592))) | int128(170141183460469231731687303715884105727)) & int128(-163717636092838336764700734368654215596)) - int128(0)) + int128(107132828884732887306455219940835571815));
error er0(C0 ep0);
pragma solidity >= 0.0.0;
function f1(T0 i0,C0 i1)    
{
  f1({i0: T0.wrap(uint224(0)), i1: new C0{salt: sha256("000000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff")}(address(0x0000000000000000000000000000000000000007))});
}
// ====
// ----
