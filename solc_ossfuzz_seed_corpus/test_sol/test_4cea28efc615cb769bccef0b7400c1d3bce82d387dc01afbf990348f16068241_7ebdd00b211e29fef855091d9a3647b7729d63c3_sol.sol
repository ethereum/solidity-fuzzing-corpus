
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  fallback() external   
  {
    assembly
    {
      for 
      { let yulinit0 := 0 } lt(yulinit0, mod(0, 11)) { yulinit0 := add(yulinit0, 1) }
      {
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 2930724593459233102442198353347417112697719766314057670597413220332844753265
        {
          return(115792089237316195423570985008687907853269984665640564039457584007913129639935, 63220365546668947680353559066127074379345948123824760269278688131032784727843)
        }
        case 0
        {
          extcodecopy(0, add(0x80, mod(0, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(extcodehash(115792089237316195423570985008687907853269984665640564039457584007913129639935), 1024))
          {
            let al0 := 85887048805774578445727292447842615988678597539603060789593810969755873516436
            al0 := al0
          }
          pop(0)
        }
      }
    }
    bool l0 = false;
  }
  bool   s0 = false;
  address payable  public s1 = payable(address(this));
}
// ====
// ----
