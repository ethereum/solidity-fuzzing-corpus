
==== Source: su0.sol ====
contract C0 {
  uint152[]   s0 = [uint152(5708990770823839524233143877797980545530986495), uint152(0), uint152(0), uint152(0), uint152(5708990770823839524233143877797980545530986495), uint152(0), uint152(5708990770823839524233143877797980545530986495), uint152(1486012291431351740513253528512857370263760170)];

	function compareMemoryAndStorage(uint152[] memory v1, uint152[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  mapping(uint32 => mapping(address => uint256))   s1;
  uint32  public s2 = uint32(2581574807);
  address payable   s3 = payable(address(this));
  constructor()   {
    {
      address payable  l0 = s3;
      address payable  l1 = l0;
      assert(l1 == s3);
      address payable  l2 = s3;
      address payable  l3 = l2;
      assert(l3 == s3);
      s0.pop();
      (s0, s0[((((uint256(0) ^ (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) << uint64(uint64(7495018448625763051)))) % uint256(55734185026195326465825195109521662374400687245188818963898277808713046904338)) * uint256(2298512459153467101031507820585351166811145475411234986087496794537957815322)) | uint256(23745512683914354856803392837510650221563802709408762048137446405730391881227))], s0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)], s0[uint256(106519856006656858568080367686351896801173685105536462031780887155437499984357)]) = ([uint152(5708990770823839524233143877797980545530986495), uint152(0), uint152(0), uint152(5708990770823839524233143877797980545530986495), uint152(5708990770823839524233143877797980545530986495), uint152(5708990770823839524233143877797980545530986495), uint152(4672407262983337704361866700391558014634132894), uint152(5708990770823839524233143877797980545530986495)], s0[(address(this).balance & ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) % uint256(101500737265097243579299923460311016507052524207247715316237517093803917677659)) | uint256(0)))], uint152(3756058852399560220492885300466771613695427107), (~(((uint152(5708990770823839524233143877797980545530986495) % uint152(3287724148261680162827240757711953671660180628)) | (uint152(1557213987311442940122282036908650327638306761) + uint152(4519477824139703932925144473540782884041113221))))));
      assert(s0[((((uint256(0) ^ (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) << uint64(uint64(7495018448625763051)))) % uint256(55734185026195326465825195109521662374400687245188818963898277808713046904338)) * uint256(2298512459153467101031507820585351166811145475411234986087496794537957815322)) | uint256(23745512683914354856803392837510650221563802709408762048137446405730391881227))] == s0[(address(this).balance & ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) % uint256(101500737265097243579299923460311016507052524207247715316237517093803917677659)) | uint256(0)))]);
      assert(s0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)] == uint152(3756058852399560220492885300466771613695427107));
      assert(s0[uint256(106519856006656858568080367686351896801173685105536462031780887155437499984357)] == (~(((uint152(5708990770823839524233143877797980545530986495) % uint152(3287724148261680162827240757711953671660180628)) | (uint152(1557213987311442940122282036908650327638306761) + uint152(4519477824139703932925144473540782884041113221))))));
      s0.push();
      (s3) = (payable(address(this)));
      assert(s3 == payable(address(this)));
    }
  }
  receive() external virtual  payable
  {
    uint152[] memory l0 = s0;
    uint152[] memory l1 = l0;
    assert(compareMemoryAndStorage(l1, s0));
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
