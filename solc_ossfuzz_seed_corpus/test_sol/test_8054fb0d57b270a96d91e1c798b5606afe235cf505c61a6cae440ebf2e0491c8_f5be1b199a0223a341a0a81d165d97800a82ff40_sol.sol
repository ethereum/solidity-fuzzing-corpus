
==== Source: su0.sol ====
contract C0 {
  receive() external virtual  payable
  {
  }
  int248  public s0 = int248(-10411675671188666255622440156768054837338931726829126455682775481410800063);
  string   s1 = string("fffff3709cfd6a7182");

	function compareMemoryAndStorage(string memory v1, string storage v2) internal pure returns (bool) {
		return keccak256(bytes(v1)) == keccak256(bytes(v2));
	}
  int192[][6]  public s2 = [[int192(3138550867693340381917894711603833208051177722232017256447), int192(363602210224496691260298617580851525882752272815412928619), int192(3138550867693340381917894711603833208051177722232017256447), int192(-399345368019075043294279826141576110666050699389605655951)], [int192(0), int192(3138550867693340381917894711603833208051177722232017256447), int192(-232802198147243306095586932478149910531191189706263286316), int192(-2297567081411931134713379592442730045481701124062545451354)], [int192(3138550867693340381917894711603833208051177722232017256447), int192(0), int192(0), int192(0)], [int192(-2447249672537643276636535046544614351999468296316174515502), int192(3138550867693340381917894711603833208051177722232017256447), int192(0), int192(-1166068812830033662576223276207394530543705800849041030097)], [int192(0), int192(-1339901017235442607410182569902996971558909085730233493580), int192(-353192569518424530719172711491467341117327055743093404690), int192(3138550867693340381917894711603833208051177722232017256447)], [int192(-2034738634040212449297025146602388504499461569256006622015), int192(0), int192(1385565690617140603255029217840291587717363444120828334550), int192(-268396101125854312086334327153270664255978317865111772771)]];

	function compareMemoryAndStorage(int192[][6] memory v1, int192[][6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(int192[] memory v1, int192[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bool   s3;
  constructor(bool i0) payable  {
    s3 = (((int120((((int120(-615359295903726458080858635934561992) % int120(0)) - int120(664613997892457936451903530140172287)) / int120(-599321786210090609798918508047327937))) & int120(664613997892457936451903530140172287)) ^ int120(-250880756950307144078932865396684728)) < int120(0));
    {
      unchecked {
        int248  l0 = s0;
        int248  l1 = l0;
        assert(l1 == s0);
        int192[][6] memory l2 = s2;
        int192[][6] memory l3 = l2;
        assert(compareMemoryAndStorage(l3, s2));
        payable(this).transfer(12137253485933807765);
        int192[][6] memory l4 = s2;
        int192[][6] memory l5 = l4;
        assert(compareMemoryAndStorage(l5, s2));
      }
    }
  }
}
enum EN0 {
  M0
}
pragma solidity >= 0.0.0;
// ====
// ----
