
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  event ev0(int80  ep0, bytes7  ep1, address payable indexed ep2, bool[6][2][][]  ep3);
  int184[6][4][]   s0;

	function compareMemoryAndStorage(int184[6][4][] memory v1, int184[6][4][] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(int184[6][4] memory v1, int184[6][4] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(int184[6] memory v1, int184[6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(int184[6][4][] memory i0) payable  {
    s0 = i0;
    {
      emit ev0(((int80((~((int64((int64(1625931375379443948) / int64(9223372036854775807))) | int64(0))))) + int80(604462909807314587353087)) - int80(-109927618764276572463463)), bytes7(0x7274e86e7506dd), payable(address(this)), new bool[6][2][][](7));
      (bool l0, bytes memory l1) = address(this).call(bytes("ffffffffffffade80218714b11b2993a9d"));
      i0[((((uint256((payable(address(this)).balance / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) - uint256(5912700074771197139695038554936426692838566388401151368876548118074172877450)) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))] = [[int184(0), int184(0), int184(12259964326927110866866776217202473468949912977468817407), int184(0), int184(12259964326927110866866776217202473468949912977468817407), int184(-477913475989614353192612667170012254658652689069436038)], [int184(12259964326927110866866776217202473468949912977468817407), int184(6506010289908358940395855672847118328728720216274029105), int184(4499533211251949331312696369044561380710832952576334002), int184(12259964326927110866866776217202473468949912977468817407), int184(-8748388278864993593388946358927649970141454538298696040), int184(0)], [int184(0), int184(12259964326927110866866776217202473468949912977468817407), int184(0), int184(12259964326927110866866776217202473468949912977468817407), int184(12259964326927110866866776217202473468949912977468817407), int184(0)], [int184(2732566984813848728501159956006943323213025796565299783), int184(12259964326927110866866776217202473468949912977468817407), int184(0), int184(0), int184(1394933688724452053400197747700611989393178272521792537), int184(12259964326927110866866776217202473468949912977468817407)]];
      int184[6][4][] memory l2 = s0;
      int184[6][4][] memory l3 = l2;
      assert(compareMemoryAndStorage(l3, s0));
    }
  }
}
// ====
// ----
