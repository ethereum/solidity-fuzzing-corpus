
==== Source: su0.sol ====
error er0();
contract C0 {
  type T0 is uint80;
  uint232 public constant cons0 = ((((((uint232(6901746346790563787434755862277025452451108972170386555162524223799295) | uint232(3092198156949905596454280217043209085951220567895177759664580537664590)) ^ uint232(0)) << uint128(uint128(0))) >> uint160(uint160(1461501637330902918203684832716283019655932542975))) << uint72(uint72(0))) | uint232(0));
  function f0(string calldata i0) private   
  {
    revert er0();
    assembly
    {
      {
        for 
        {
        }
        73416634905526559255582540316277189162530412484646409065330367381907338590807
        {
          pop(mload(mod(0, 2048)))
        }
        {
        }
      }
    }
  }
  event ev0(bool indexed ep0, uint48  ep1, bytes  ep2, C0.T0  ep3) anonymous;
  struct St0 {
    bool[2] el0;
    mapping(bytes20 => C0.T0) el1;
    function (address) external   returns (int176, address, C0.T0) el2;
  }
  event ev1();
  int80   s0 = int80(0);
  bytes22   s1 = bytes22(0xec6d26b79b15fcaed642d40fbf5f400eb8d4496984f8);
  int144  public s2 = int144(11150372599265311570767859136324180752990207);
  mapping(int88 => bool)   s3;
  constructor()   {
    s3[int88(154742504910672534362390527)] = false;
    {
      (bool l0, bytes memory l1) = address(this).call("00000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff");
      s0 |= (int80(-588848362224895928752544) + (int80(604462909807314587353087) ** uint200(((uint200(0) % uint200(1606938044258990275541962092341162602522202993782792835301375)) % uint200(1606938044258990275541962092341162602522202993782792835301375)))));
    }
  }
  modifier m0(bytes11 i0) 
  {
    assembly
    {
      let al0 := call(mload(mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048)), 96838229350929383502609833481906165310860523995525768156970567242695028022358, 97375847225121134543009973994686045349586321524326660452193830416164764829052, 337315318692809361980355571721503266554667556308035793714435583255412393659, 18144029883617427367838677797855448811258721807581471083915744559326155231142, 99389880403708243851539305980158890882155672593633567452328784344712730186690, 68744963888737857643565661713727124826240456847630740233450626776488931886188)
    }
    _;
  }
  error er1();
}
pragma solidity >= 0.0.0;
function f1(function (int64, bool) external   returns (int200, string memory, uint96) i0)     returns(address payable[1] memory o0)
{
}
// ====
// ----
