
==== Source: su0.sol ====
uint224 constant cons0 = ((uint224((uint224(2514082606096200991380370808049934341224545595390642622555260532475) / ((uint224(0) % uint224(12501490873967735893677162700043272950825468182941971551254207215126)) >> uint184(uint184(24519928653854221733733552434404946937899825954937634815))))) - uint224(25292466309917298085905140364614953216976932463024806630428646322070)) ** uint248(uint248(0)));
contract C0 {
  function f0(int8 i0) private   
  {
    int40 l0 = (int40(384517837349) | int40(0));
  }
  event ev0(uint88  ep0, int48 indexed ep1, function (uint72, bytes20, bytes memory) external   returns (bool)  ep2, uint72  ep3);
  event ev1(bool  ep0, uint112  ep1);
  fallback() external   
  {
  }
  uint96   s0;
  mapping(uint72 => int160)   s1;
  uint72 immutable  s2;
  constructor(uint96 i0,uint72 i1) payable  {
    s0 -= (~((((uint96(79228162514264337593543950335) ^ (uint96(0) + uint96(79228162514264337593543950335))) ** uint232(uint232(4436299006840281142855378388288560083873837239261138355820428452285669))) | uint96(42156343586403215057658511857))));
    s2 = ((uint72(0) | (((uint72(0) << uint248(uint248(0))) - uint72(4722366482869645213695)) | uint72(4722366482869645213695))) | uint72(4294658620012930948273));
    s1[uint72(4722366482869645213695)] = int160(0);
    unchecked {
    }
  }
  function f2(uint136 i0,bool i1,bytes21 i2) external   payable returns(address payable o0)
  {
  }
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116, M117, M118, M119,
    M120, M121, M122, M123, M124, M125, M126, M127,
    M128, M129, M130, M131, M132, M133, M134, M135,
    M136, M137, M138
  }
  function f3() public    returns(bool o0)
  {
    return (true);
  }
  struct St0 {
    address payable el0;
  }
}
enum EN1 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141, M142, M143,
  M144, M145, M146, M147, M148, M149, M150, M151,
  M152, M153, M154, M155, M156, M157, M158, M159,
  M160, M161, M162, M163, M164, M165, M166, M167,
  M168, M169, M170, M171, M172, M173, M174, M175,
  M176, M177, M178, M179, M180, M181, M182, M183,
  M184, M185, M186, M187, M188, M189, M190, M191,
  M192, M193, M194, M195
}
pragma solidity >= 0.0.0;
// ====
// ----
