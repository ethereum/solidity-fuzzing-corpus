==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
function f0(bytes4 i0,int240 i1)  returns(uint240 o0,uint80 o1,bytes3 o2)
{
}

==== Source: su1.sol ====
import "su0.sol";
contract C0 {
  bytes23 s0;
  function f1(int232 i0) external returns(int144 o0,uint216 o1)
  {
  }
  function f2(bytes27 i0) external
  {

    assert(true);
    require(((-(-(int32((type(int32).min / int32(-1277458402))))) == int32(-1206292035)) || ((abi.decode(abi.encodePacked(uint152(uint152((uint152((uint152(3765401594665867058766601925930227704887310797) / (~(uint152(1858370641548980255889933268924684412165088422)) + ~(uint152(3739175015572320580354479252764189607516817367))))) / uint152((((uint152(1075038871174156611539389149634595723117521687) ** uint152(4872304957869888443726046898081886397333608689)) - (uint152(3687964772348066071825426856269042106970370702) >> uint152(4481252410491300035918819467660741298527254355))) / (((uint152(4753278875281550950501196965291880605603796222) & uint152(2206213234582849798891134891066758288812451105)) ^ uint152(5097511545559943094621114243160913461338763498)) * uint152(5180367497040419371162352082295990663515995853))))))), bytes13(bytes13(0x7ae23d73fc56987fc51b14ac1c)), bytes12(bytes12(0x681984c73709a3daea888b29))), (bytes31)) | bytes31(0x5da99811ab574a7789052bb92972dfe8301ac123ab8d3dc575eb2c161b6d92)) < bytes31(0x1f894646d79ac56a9ff7530115b6b983241b31c1c349d8922a837f4a101d7d))));
  }
}
// ----
// Warning 5667: (su1.sol:132-142): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su1.sol:120-1265): Function state mutability can be restricted to pure
