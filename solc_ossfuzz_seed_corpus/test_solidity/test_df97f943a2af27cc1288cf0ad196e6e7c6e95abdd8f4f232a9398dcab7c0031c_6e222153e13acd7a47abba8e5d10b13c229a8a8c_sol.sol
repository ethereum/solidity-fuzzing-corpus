
==== Source: su0.sol ====
contract C0 {
  event ev0() anonymous;
  address  public s0;
  int200   s1;
  bool  public s2;
  constructor(address i0,int200 i1,bool i2)   {
    s0 = address(this);
    s1 *= int200(0);
    s2 = (true ? (uint16(9103) < (uint16(0) * uint16(0))) : true);
    {
    }
  }
}
error er0();
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
import "su0.sol";
function f0(bytes3 i0)    pure suffix returns(uint216 o0){
  if (i0 >= bytes3(0xffffff))
  {
    do
    {
      (o0, o0) = (((uint216(71208517188691215369452843458985087572351074726837767555390418688) | (((uint216(0) * uint216(11433756301162790137897948565663180166814127793307022170270017228)) % uint216(32189866904593744795366299721775610923996927551489252549208076896)) + uint216(0))) - uint216(105312291668557186697918027683670432318895095400549111254310977535)), (~((((((uint216(0) & uint216(0)) >> uint104(uint104(20282409603651670423947251286015))) | uint216(0)) ** uint16(uint16(45523))) * uint216(105312291668557186697918027683670432318895095400549111254310977535)))));
      assert(o0 == ((uint216(71208517188691215369452843458985087572351074726837767555390418688) | (((uint216(0) * uint216(11433756301162790137897948565663180166814127793307022170270017228)) % uint216(32189866904593744795366299721775610923996927551489252549208076896)) + uint216(0))) - uint216(105312291668557186697918027683670432318895095400549111254310977535)));
      assert(o0 == (~((((((uint216(0) & uint216(0)) >> uint104(uint104(20282409603651670423947251286015))) | uint216(0)) ** uint16(uint16(45523))) * uint216(105312291668557186697918027683670432318895095400549111254310977535)))));
      for(uint solinit0 = 0; solinit0 < (uint256(0) % 11); solinit0++)
      {
        (o0) = (uint216(11611107084504814992995794870461129521794526466889778513049349960));
        assert(o0 == uint216(11611107084504814992995794870461129521794526466889778513049349960));
        if (i0 < i0)
        {
          int168[8] memory l0 = [int168(-97076667536543446543976729152282452684961420605988), int168(10464698241955096341604931086389533450065095927621), int168(-179900325009293098364733272601643947063018103066115), int168(0), int168(0), int168(183043276436337859769627481794595617286396057375122), int168(-1534615114204848160546120412726261985130128624924), int168(-93922578444502993422255459904642537150813119330733)];
          (l0[(~(((uint256((uint256((l0.length / uint256(0))) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) - uint256(9576333398779121840499604323148218357361738573095616942666758175244978331087)) + uint256(0))))]) = ((((((int112(2596148429267413814265248164610047) * int112(-1759501013780637357867771871160270)) + int112(2596148429267413814265248164610047)) ** uint232(uint232(6901746346790563787434755862277025452451108972170386555162524223799295))) - int112(0)) - int168(0)));
          assert(l0[(~(((uint256((uint256((l0.length / uint256(0))) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) - uint256(9576333398779121840499604323148218357361738573095616942666758175244978331087)) + uint256(0))))] == (((((int112(2596148429267413814265248164610047) * int112(-1759501013780637357867771871160270)) + int112(2596148429267413814265248164610047)) ** uint232(uint232(6901746346790563787434755862277025452451108972170386555162524223799295))) - int112(0)) - int168(0)));
        }
        else
        {
          if (i0 <= bytes3(0xffffff))
          {
            break;
          }
          return (uint216(4920435098467581470183968234684229612356096695087951602783108418));
        }
        (o0) = (uint216(0));
        assert(o0 == uint216(0));
      }
    }
    while ((false ? true : true));
  }
  else if (i0 < -30930726985335231023499678147039094329816 f1 /*suffix expr*/)
  {
  }
}
pragma solidity >= 0.0.0;
function f1(int136 i0) pure suffix  returns(bytes3 o0)
{
  return (bytes3(0x000000));
}
// ====
// ----
