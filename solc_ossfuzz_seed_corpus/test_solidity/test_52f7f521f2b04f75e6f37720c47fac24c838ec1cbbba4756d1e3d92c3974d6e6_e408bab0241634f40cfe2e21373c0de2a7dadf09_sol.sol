
==== Source: su0.sol ====
function f0(uint16 i0,uint16[] memory i1,uint16 i2)     {
  while (false)
  {
    for(    int216 l0 = ((((-((true ? int216(52656145834278593348959013841835216159447547700274555627155488767) : int216(0)))) & int216(52656145834278593348959013841835216159447547700274555627155488767)) ^ int216(35967616097867108478592880548253407320142382020611131365947150336)) & int216(52656145834278593348959013841835216159447547700274555627155488767));
;
)
    {
      if (i2 > (~(uint16(64928))))
      {
        if (i0 == uint16(15669))
        {
          break;
        }
        else
        {
          break;
        }
        if (i0 > uint16(0))
        {
          continue;
        }
        else if (i0 > ((uint8(0) & ((uint8(79) | uint8(59)) % uint8(0))) + uint8(255)))
        {
          if (i2 > uint16(0))
          {
            for(            bytes2 l1 = ((bytes2(0xbac3) | bytes2(0xb625)) & bytes2(0xffff));
;
int96((int96(37318002143277763437670360221) / int96(0))))
            {
            }
            continue;
          }
          else if (i0 < ((((uint16(((uint16(17534) | uint16(65535)) / uint16(0))) - uint16(0)) ** uint88(uint88(187604292361122097903814075))) % uint16(65535)) | uint16(10105)))
          {
            break;
          }
          (i1, i1[uint256(65662778143350428703171931044980877875855778381824547328184512335531666524625)], i1[(uint256(0) % ((uint256((int256(57896044618658097711785492504343953926634992332820282019728792003956564819967) - int256(0))) | uint256(0)) << uint240(uint240(1766847064778384329583297500742918515827483896875618958121606201292619775))))]) = (new uint16[](6), (uint16((uint16(0) / (uint16(61847) + uint16(65535)))) & uint16(0)), uint16((int16(0) + ((int16(0) * int16(0)) % int16(32767)))));
          assert(i1[uint256(65662778143350428703171931044980877875855778381824547328184512335531666524625)] == (uint16((uint16(0) / (uint16(61847) + uint16(65535)))) & uint16(0)));
          assert(i1[(uint256(0) % ((uint256((int256(57896044618658097711785492504343953926634992332820282019728792003956564819967) - int256(0))) | uint256(0)) << uint240(uint240(1766847064778384329583297500742918515827483896875618958121606201292619775))))] == uint16((int16(0) + ((int16(0) * int16(0)) % int16(32767)))));
        }
      }
    }
  }
}
function f1(bytes memory i0,bytes memory i1)      returns(function (address payable, bytes memory, uint160) external   o0,uint64 o1){
  if (i0.length < (uint256(110266472471357380752719023827168845177741961640837642775883855408216964886854) << uint176(((uint176(0) ^ (uint176(43303927911240798094296993648233435179415478814860902) ** uint240(uint240(0)))) | uint176(95780971304118053647396689196894323976171195136475135)))))
  {
    while (true)
    {
    }
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
bytes31 constant cons0 = bytes31(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff);
struct St0 {
  mapping(bytes1 => int80[3]) el0;
}
// ====
// ----
