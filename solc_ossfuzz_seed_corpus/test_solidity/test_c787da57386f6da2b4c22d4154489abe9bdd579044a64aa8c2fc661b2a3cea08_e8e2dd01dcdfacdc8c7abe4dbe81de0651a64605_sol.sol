
==== Source: su0.sol ====
type T0 is address;
library L0 {
  modifier m0(string memory i0,address payable i1) 
  {
    _;
  }
  modifier m1(function () internal   returns (uint128, bytes16, bool) i0) 
  {
    _;
    revert("a2bbbc15f92499ada69f8cfe35a0d111b61336a4650fce91934a7abbebead7c2c111042e067d5100e1c3b1c1cbb1843cc1ef7a36");
  }
  event ev0(bytes25  ep0);
  type T1 is bool;
  function f0(address i0,int72 i1) public  m0("ffffffffffffffffffffff00000000000000000000000000000000000000",payable(address(0x0000000000000000000000000000000000000001)))  returns(int192 o0,bytes25 o1)
  {
    if ((bytes26(0xf982472189151dbf2810ba71553a28076e5dc39fdf1d92721f7d) >= bytes26(0xa3919de8d2337a120a82bf7075a3b539cca49647abdbf59b8994)))
    {
      for(      (((int80(0) * ((int80(-73883805170346494135600) + int80(-460995877386226394780552)) ^ int80(0))) | int80(179675783799554536123870)) ^ int80(604462909807314587353087));
(bytes29(0x0000000000000000000000000000000000000000000000000000000000) != bytes29(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff));
)
      {
        emit L0.ev0(bytes25(0xffffffffffffffffffffffffffffffffffffffffffffffffff));
      }
    }
    else if (true)
    {
      (o0) = (int192(3138550867693340381917894711603833208051177722232017256447));
    }
    else
    {
      unchecked {
        assembly
        {
          let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
          selfdestruct(create2(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 14250338439403167109104900976392841915212265410487812835838698228839121008830, 115792089237316195423570985008687907853269984665640564039457584007913129639935))
          let al1 := o1
        }
        if (false)
        {
          {
            if (false)
            {
            }
            for(            bytes memory l0 = "000000000000000000000000000000000000000000000000000000";
(uint232((((((uint232(6901746346790563787434755862277025452451108972170386555162524223799295) + uint232(0)) % uint232(6060974714522090449091131022799540695581850702799445178298458371476160)) % uint232(6901746346790563787434755862277025452451108972170386555162524223799295)) + uint232(6901746346790563787434755862277025452451108972170386555162524223799295)) / uint232(5831616539396493876834723996840995922999642548295344789425423871571392))) != uint232(6901746346790563787434755862277025452451108972170386555162524223799295));
)
            {
              {
                int88(0);
              }
              break;
              emit ev0(bytes25(0x00000000000000000000000000000000000000000000000000));
            }
            require(false);
          }
          assembly
          {
            let al2 := 0
          }
          for(;
;
true)
          {
            if (false)
            {
              continue;
              break;
            }
          }
        }
      }
      emit ev0(bytes25(0x808840afcee986b40446fecc072373731c738e6bb3b2c68607));
    }
    emit L0.ev0(bytes25(0x00000000000000000000000000000000000000000000000000));
    if (true)
    {
    }
  }
  int248 public constant cons0 = ((int248(0) ** uint16((((uint16(65535) | uint16(39983)) >> uint8(uint8(255))) * uint16(65535)))) % int248(226156424291633194186662080095093570025917938800079226639565593765455331327));
}
uint208 constant cons1 = uint208(((((((uint208(411376139330301510538742295639337626245683966408394965837152255) ^ uint208(411376139330301510538742295639337626245683966408394965837152255)) | uint208(0)) ** uint160(uint160(1461501637330902918203684832716283019655932542975))) % uint208(411376139330301510538742295639337626245683966408394965837152255)) - uint208(1784231000635421894514038850892131485112795947017107447260849)) / uint208(408100031594215093919312604009375020034293394631330303926740725)));
error er0(bytes25 ep0);
pragma solidity >= 0.0.0;
// ====
// ----
