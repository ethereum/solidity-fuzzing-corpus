{
mstore(memoryguard(0x10000), 1)
sstore(mload(calldataload(0)), 1)
{
foo_n_0(0x8, 0x80, 0x800, not(0x8000))
foo_n_0(0x800000, 0x8000000, 0x80000000, 0x800000000)
let x_11, x_12
{
foo_n_0(0x8000000000000, 0x80000000000000, 0x800000000000000, 0x8000000000000000)
}
foo_n_0(0x800000000000000000, 0x8000000000000000000, 0x80000000000000000000, 0x800000000000000000000)
foo_n_0(0x80000000000000000000000, 0x800000000000000000000000, 0x8000000000000000000000000, 0x80000000000000000000000000)
foo_n_0(0x8000000000000000000000000000, 0x80000000000000000000000000000, 0x800000000000000000000000000000, 0x8000000000000000000000000000000)
foo_n_0(0x800000000000000000000000000000000, 0x8000000000000000000000000000000000, 0x80000000000000000000000000000000000, 0x800000000000000000000000000000000000)
{
}
function foo_n_0(x_38, x_39, x_40, x_41)
{
calldatacopy(mod(call(0x800000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000, 0x80000000000000000000000000000000000000000000, mod(0x800000000000000000000000000000000000000000000, 32768), mod(0x8000000000000000000000000000000000000000000000, 32768), mod(0x80000000000000000000000000000000000000000000000, 32768), mod(0x800000000000000000000000000000000000000000000000, 32768)), 32768), 0x8000000000000000000000000000000000000000000000000, mod(true, 32768))
calldatacopy(mod(call(0x80000000000000000000000000000000000000000000000000, 0x800000000000000000000000000000000000000000000000000, 0x8000000000000000000000000000000000000000000000000000, mod(0x80000000000000000000000000000000000000000000000000000, 32768), mod(origin(), 32768), mod(0x800000000000000000000000000000000000000000000000000000, 32768), mod(0x8000000000000000000000000000000000000000000000000000000, 32768)), 32768), 0x80000000000000000000000000000000000000000000000000000000, mod(true, 32768))
for { let i_0 := 0 } lt(i_0, 0x60) { i_0 := add(i_0, 0x20) } {
for { let i_1 := 0 } lt(i_1, 0x60) { i_1 := add(i_1, 0x20) } {
}
}
}
foo_n_0(sload(288),calldataload(32),sload(96),calldataload(160))
foo_n_0(0x800000000000000000000000000000000000000000000000000000000000001, 0x80000000000000000000000000000000000000000000000000000000000001, 0x8000000000000000000000000000000000000000000000000000000000001, 0x800000000000000000000000000000000000000000000000000000000001)
}
}
