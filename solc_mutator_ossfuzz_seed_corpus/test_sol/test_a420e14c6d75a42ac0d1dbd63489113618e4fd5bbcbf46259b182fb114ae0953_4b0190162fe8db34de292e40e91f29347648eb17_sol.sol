
==== Source: su0.sol ====
type T0 is int104;
contract C0 {
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116, M117, M118, M119,
    M120, M121, M122, M123, M124, M125, M126, M127,
    M128, M129, M130, M131, M132, M133, M134, M135,
    M136, M137, M138, M139, M140, M141, M142, M143,
    M144, M145, M146, M147, M148, M149, M150, M151,
    M152, M153, M154, M155, M156, M157, M158, M159,
    M160, M161, M162, M163, M164, M165, M166, M167,
    M168, M169, M170, M171, M172, M173, M174, M175,
    M176, M177, M178, M179, M180, M181, M182, M183,
    M184, M185, M186, M187, M188
  }
  modifier m0() virtual
  {
    _;
    _;
    assembly
    {
      for 
      {
      }
      mul(sar(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 9767494040140951317041290434847751348179962828093258750900159780553761255878)
      {
        return(115792089237316195423570985008687907853269984665640564039457584007913129639935, create2(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935))
        let al0 := shr(sload(0), 115792089237316195423570985008687907853269984665640564039457584007913129639935)
      }
      {
      }
    }
  }
  fallback() external   
  {
  }
  type T1 is uint56;
  function f1(C0.EN0[] calldata i0,function () external   returns (int88, address payable) i1) private  m0() 
  {
    if ((true ? (((uint184(12165422255814304962084969307367196057898577128345360107) ^ uint184(22937603518258188756468947641442503007646797654154335442)) << uint248(uint248(452312848583266388373324160190187140051835877600158453279131187530910662655))) >= uint184(14025207315521509028106364420171392221481167024784195385)) : true))
    {
    }
    else
    {
      if (true)
      {
      }
    }
    try i1() returns (int88 l0, address payable l1)
    {
    }
    catch
    {
      return;
      assembly
      {
      }
      assembly
      {
      }
    }
    catch Panic(uint256 l2)
    {
      for(;
true;
)
      {
        break;
      }
    }
  }
  address payable  public s0;
  uint112   s1;
  constructor(address payable i0,uint112 i1)   {
    s0 = payable(address(this));
    s1 /= uint112((uint112(4985162055952656867223351137159347) / uint112(5192296858534827628530496329220095)));
    unchecked {
      delete i0;
      s0 = (i0 = payable(address(this)));
      if ((true ? true : true))
      {
      }
      else if (true)
      {
        while (true)
        {
        }
      }
      else
      {
        if (false)
        {
          if ((true || false))
          {
            require((!((!((true && (true || true)))))));
          }
        }
        else if (true)
        {
        }
        else if ((int248(68239083646647171884264959430696486658017146880591069981277494262904025695) < ((int248(0) + (int248(0) ^ int248(0))) | int248(226156424291633194186662080095093570025917938800079226639565593765455331327))))
        {
        }
      }
    }
  }
}
pragma solidity >= 0.0.0;
enum EN1 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48
}
// ====
// ----
