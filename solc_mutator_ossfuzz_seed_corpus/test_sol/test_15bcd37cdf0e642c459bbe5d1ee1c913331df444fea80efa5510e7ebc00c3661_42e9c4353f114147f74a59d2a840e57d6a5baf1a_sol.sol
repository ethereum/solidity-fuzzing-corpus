==== Source:  ====

==== Source: su0.sol ====
library L0 {
  function f0(int120 i0,int64 i1) external   
  {
    revert("000000000000000000000000000000000000");
  }
  address payable public constant cons0 = payable(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF);
  using L0 for *;
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116, M117, M118, M119,
    M120, M121, M122, M123, M124, M125, M126, M127,
    M128, M129, M130, M131, M132, M133, M134, M135,
    M136, M137, M138, M139, M140, M141, M142, M143,
    M144, M145, M146, M147, M148, M149, M150, M151,
    M152, M153, M154, M155, M156, M157, M158, M159,
    M160, M161, M162, M163, M164, M165, M166, M167,
    M168, M169, M170, M171, M172, M173, M174, M175,
    M176, M177, M178, M179, M180, M181, M182, M183,
    M184, M185, M186, M187, M188, M189, M190, M191,
    M192, M193, M194, M195, M196, M197, M198, M199,
    M200, M201, M202, M203, M204, M205, M206, M207,
    M208, M209, M210, M211, M212, M213, M214, M215,
    M216, M217, M218, M219, M220, M221, M222, M223,
    M224, M225, M226, M227, M228, M229, M230, M231,
    M232, M233
  }
  modifier m0(int128 i0) 
  {
    _;
  }
  error er0();
  error er1();
}
function f1(bool i0)    
{
  if (false)
  {
    require(true);
    return;
  }
  unchecked {
  }
  assembly
  {
    for 
    {
    }
    0
    {
      if i0
      {
      }
      for 
      {
        let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
      }
      blockhash(i0)
      {
        return(addmod(i0, 0, 61867893891890116325731434234412662515930751524069853727209224550180553377487), sload(i0))
      }
      {
        i0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
      }
    }
    {
      continue
      continue
    }
  }
}
using L0 for uint;
struct St0 {
  int40 el0;
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
struct St1 {
  bool el0;
}
bool constant cons1 = ((((((uint40(1099511627775) - uint40(1003840408955)) & uint40(41289324795)) << uint88(uint88(29428965623506919490877326))) << uint208(uint208(7736662633967721384390755396502463688903871829445948168965756))) != uint40(720781052123)) && true);
enum EN1 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107
}
function f2(uint96 i0)     returns(bytes memory o0,string memory o1)
{
}
// ----
// Warning 3149: (su1.sol:79-196): The result type of the shift operation is equal to the type of the first operand (uint40) ignoring the (larger) type of the second operand (uint88) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.
// Warning 3149: (su1.sol:78-280): The result type of the shift operation is equal to the type of the first operand (uint40) ignoring the (larger) type of the second operand (uint208) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.
// Warning 5740: (su0.sol:2331-2339): Unreachable code.
// Warning 5667: (su0.sol:27-36): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:37-45): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:15-118): Function state mutability can be restricted to pure
// Warning 2018: (su0.sol:1735-2351): Function state mutability can be restricted to view
