
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  modifier m0(int136 i0) 
  {
    (i0) = (((int136(43556142965880123323311949751266331066367) & ((false ? int136(43556142965880123323311949751266331066367) : int136(43556142965880123323311949751266331066367)) - int136(43556142965880123323311949751266331066367))) | int136(43556142965880123323311949751266331066367)));
    assert(i0 == ((int136(43556142965880123323311949751266331066367) & ((false ? int136(43556142965880123323311949751266331066367) : int136(43556142965880123323311949751266331066367)) - int136(43556142965880123323311949751266331066367))) | int136(43556142965880123323311949751266331066367)));
    uint208 l0 = uint208(161556136736839147220022048730288125146656533496770688159564655);
    _;
    string storage l1;
    address payable l2 = payable(address(this));
  }
  receive() external  m0((int136(0) & int136(43556142965880123323311949751266331066367))) m0((int136(((((~((int136(-8496797632148534721438348088569656001931) ^ int136(0)))) ^ int136(10159188630132465590590659886497527669820)) ^ int136(-3619249185228165507737719907893172529595)) / int136(0))) * int136(38644593673946944550790935425806716835245))) payable
  {
  }
  uint168   s0 = uint168(0);
  address payable   s1;
  constructor(address payable i0)   {
    s1 = payable(address(this));
    unchecked {
      address payable  l0 = s1;
      address payable  l1 = l0;
      assert(l1 == s1);
      address payable  l2 = s1;
      address payable  l3 = l2;
      assert(l3 == s1);
    }
  }
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
