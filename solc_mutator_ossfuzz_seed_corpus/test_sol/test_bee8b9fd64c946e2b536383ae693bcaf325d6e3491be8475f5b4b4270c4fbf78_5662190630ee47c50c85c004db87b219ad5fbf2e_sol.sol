==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external virtual  payable
  {
    assembly
    {
      calldatacopy(add(0x80, mod(sload(0), 1024)), 78286892548206493690981036318005449332938571337521196554882548486039852446671, mod(0, 1024))
      switch gasprice()
      case 55813730329067851139429483050637667239622121498601711228182122796143652259780
      {
        {
          calldatacopy(add(0x80, mod(31733532440543419489668479052990467648276596128023515471937035234476021363663, 1024)), sload(115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(iszero(and(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)), 1024))
        }
        let al0 := sload(91457650666074659148993900863898507706773511571974506543592514227929299479556)
        calldatacopy(add(0x80, mod(35365753892298151365704629916809060567309574929028915419492101761644394488749, 1024)), 0, mod(staticcall(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), 21316189961350934957050929491241567789983806483148561650551576567225412932546, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 77068576769740490645492581483341341687566215476654261935921304758927314274077, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 1024))
      }
      for 
      { let yulinit0 := 0 } lt(yulinit0, mod(0, 11)) { yulinit0 := add(yulinit0, 1) }
      {
        extcodecopy(61447505696882144192599107247623900344068174099372751806041525387516985857448, add(0x80, mod(smod(0, 38486364696865377700912836043332570455820657717929945288445016218470778060949), 1024)), 0, mod(not(27205822525661721084850928157801763914389138414366177158986930930220112454529), 1024))
        switch 53742061710583018494667301707482230584783333739858146115273118157873166842739
        default
        {
          switch 38962317516326462133432304267249079217317652144338053482577158511737955028219
          case 0
          {
            switch 11944237717941129085910655990544524583680255992042489598095225681403424336482
            case 115792089237316195423570985008687907853269984665640564039457584007913129639935
            {
            }
            case 0
            {
              revert(add(0x80, mod(31733532440543419489668479052990467648276596128023515471937035234476021363663, 1024)), 0)
            }
            for 
            { let yulinit1 := 0 } lt(yulinit1, mod(100254700740063852491302577401331617367998720568285535220658742010886029956303, 11)) { yulinit1 := add(yulinit1, 1) }
            {
              calldatacopy(add(0x80, mod(calldataload(mod(71626674654336431638659708296522202719985473110600501816107795183412885852147, calldatasize())), 1024)), sload(115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(mload(add(0x80, mod(31733532440543419489668479052990467648276596128023515471937035234476021363663, 1024))), 1024))
            }
          }
        }
      }
    }
    uint144 l0 = (((uint144(22300745198530623141535718272648361505980415) | uint144(0)) << uint64(uint64(18446744073709551615))) >> uint64(uint64(18446744073709551615)));
    while (false)
    {
    }
  }
  address   s0;
  constructor(address i0)   {
    s0 = (false ? address(this) : (true ? msg.sender : address(this)));
    {
      address  l0 = s0;
      address  l1 = l0;
      assert(l1 == s0);
      (s0) = ((true ? address(this) : address(this)));
      assert(s0 == (true ? address(this) : address(this)));
    }
  }
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ----
// Warning 9592: (su0.sol:1814-3046): "switch" statement with only a default case.
// Warning 2072: (su0.sol:3065-3075): Unused local variable.
// Warning 5667: (su0.sol:3296-3306): Unused function parameter. Remove or comment out the variable name to silence this warning.
