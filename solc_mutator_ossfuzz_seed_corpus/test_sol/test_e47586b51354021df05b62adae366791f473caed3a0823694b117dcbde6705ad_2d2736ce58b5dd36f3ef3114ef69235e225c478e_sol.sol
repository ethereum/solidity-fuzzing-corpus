
==== Source: su0.sol ====
contract C0 {
  bytes26 immutable public s0 = bytes26(0x5c7d26bdc6f0457c7f855fe867063e1737afcd77b0e77f4da46c);
  receive() external   payable
  {
    assembly
    {
      switch 0
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        for 
        {
          switch 74996428280049172878762777329702004315736852346903487263384346509798379475069
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            switch 75920216518563324645375804944245107508477422919731204808934906871458710898721
            case 88238662872933704491408310589306259995829579847317401831156582622002390192550
            {
            }
          }
          {
            let al0 := 0
          }
        }
        mul(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)
        {
          extcodecopy(delegatecall(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 113457777460975278471318974065237472762769999966766787048357476197724271252628, 0, 28879253787840639424605436302629657725477313014649371901683133734465302207731, 0), add(0x80, mod(0, 1024)), sload(115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
          returndatacopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 0, mod(0, 1024))
        }
        {
          continue
        }
      }
      case 0
      {
        {
        }
      }
      let al1 := 27195575325487796606142465589511269842988590433967407863712928549568171494518
      let al2 := calldataload(mod(al1, calldatasize()))
      al2 := al2
    }
    bytes26  l0 = s0;
    bytes26  l1 = l0;
    assert(l1 == s0);
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
