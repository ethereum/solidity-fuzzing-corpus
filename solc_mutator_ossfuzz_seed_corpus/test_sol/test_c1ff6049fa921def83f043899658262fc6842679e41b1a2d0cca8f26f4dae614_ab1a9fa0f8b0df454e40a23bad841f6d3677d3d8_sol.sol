
==== Source: su0.sol ====
bool constant cons0 = false;
contract C0 {
  uint256  public s0;
  constructor(uint256 i0)   {
    s0 += (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | (uint256(0) % uint256(38016903245059578439396019287405951614464306460594030168714479895662992903330))) % uint256(85421301358903840223853008002733206700120473937115907469825800758828060103313)));
    {
      uint256  l0 = s0;
      uint256  l1 = l0;
      assert(l1 == s0);
      (bool l2, bytes memory l3) = address(this).call(bytes("0000000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
      uint256  l4 = s0;
      uint256  l5 = l4;
      assert(l5 == s0);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
