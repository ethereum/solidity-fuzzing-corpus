==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  bytes13   s0;
  address   s1;
  uint176   s2 = uint176(68542828677181763642521974545579809238545853998759756);
  uint120[6]   s3;

	function compareMemoryAndStorage(uint120[6] memory v1, uint120[6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(bytes13 i0,address i1,uint120[6] memory i2) payable  {
    s0 &= bytes13(0x00000000000000000000000000);
    s1 = address(this);
    s3 = i2;
    unchecked {
      (bool l0, bytes memory l1) = address(this).call(bytes("000000000000000000000000000000000000000000000000000000000000"));
      bytes13  l2 = s0;
      bytes13  l3 = l2;
      assert(l3 == s0);
      uint176  l4 = s2;
      uint176  l5 = l4;
      assert(l5 == s2);
      (i2[(((uint256(25303233284333457193459031383130208172866666532199878938191390556872123525861) * (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) | uint256(0)) + uint256(29588498323538719715290550873817078650164119298225235573560719627359639165715))]) = (uint120(0));
      assert(i2[(((uint256(25303233284333457193459031383130208172866666532199878938191390556872123525861) * (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) | uint256(0)) + uint256(29588498323538719715290550873817078650164119298225235573560719627359639165715))] == uint120(0));
      (bool l6, bytes memory l7) = address(this).call(bytes("68c4b058b7dceb294783add13168a6752f0a73ef0bdc31aef460b0344d3b33000000000000000000000000000000000000000000000000"));
      (s3[uint256(31039358428373136663434940457109834265551197240632366486185541872483541241588)]) = ((((i2[uint256(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(72176474799126602149594683034463976580158996973822459880309533828518346397216)))] >> uint120(uint120(0))) >> uint200(uint200(0))) * uint120(646585267206926543878963073290333987)));
      assert(s3[uint256(31039358428373136663434940457109834265551197240632366486185541872483541241588)] == (((i2[uint256(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) / uint256(72176474799126602149594683034463976580158996973822459880309533828518346397216)))] >> uint120(uint120(0))) >> uint200(uint200(0))) * uint120(646585267206926543878963073290333987)));
    }
  }
}
// ----
// Warning 5667: (su0.sol:439-449): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:450-460): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2072: (su0.sol:603-610): Unused local variable.
// Warning 2072: (su0.sol:612-627): Unused local variable.
// Warning 2072: (su0.sol:1688-1695): Unused local variable.
// Warning 2072: (su0.sol:1697-1712): Unused local variable.
// Warning 2018: (su0.sol:174-424): Function state mutability can be restricted to view
