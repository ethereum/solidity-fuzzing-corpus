==== Source:  ====

==== Source: su0.sol ====
error er0();
function f0(bool i0)     returns(bool o0,address payable o1)
{
  unchecked {
    revert er0();
    if (true)
    {
      revert er0();
      if (true)
      {
        {
          return (false, payable(address(0x0000000000000000000000000000000000000002)));
          if ((ripemd160("37f8a6a0051b0c8aeeb8bcb1b6512f3b8fa734a0a68056fc8f9e7eae0000000000000000000000000000000000000000000000000000000000") <= ripemd160("c940f360a78d83800b2a65bddee2a367202e561e94dab00bd167261a2a08047916de")))
          {
            (o0) = (((uint152(5708990770823839524233143877797980545530986495) >> uint232(uint232(6178237791717412048555696375499664363198890615689014550790695687176796))) >= uint152(((uint152(0) * uint152(0)) / uint152(2759646676460884373251085171254679190905885244)))));
          }
          else if ((((((int96(0) + int96(-12987411248621562238374485996)) % int96(0)) | int96(0)) > int96(0)) == true))
          {
            if (false)
            {
              if (false)
              {
              }
            }
            else if (true)
            {
              assert(((((int152(0) % (int152(-709416859587498990979321142450399840766649683) ** uint112(uint112(0)))) & int152(2854495385411919762116571938898990272765493247)) * int152(1610029914049215403225765040930817593099824941)) != int152(-230915757436462826827898486828095657523646945)));
            }
            else if ((!(true)))
            {
            }
          }
          else if (false)
          {
          }
          revert("ff26265498435b05ffffffffffffffffffffffffffffffffffffffffff");
        }
      }
      else
      {
      }
    }
    return (true, payable(address(0x0000000000000000000000000000000000000006)));
    return (false, payable(address(0x0000000000000000000000000000000000000005)));
    assembly
    {
    }
  }
}
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20
}
uint136 constant cons0 = uint136((uint136((((((~(uint136(87112285931760246646623899502532662132735))) | uint136(0)) % uint136(87112285931760246646623899502532662132735)) ** uint232(uint232(6901746346790563787434755862277025452451108972170386555162524223799295))) / uint136(74873881665242643735365804631009858285095))) / uint136(87112285931760246646623899502532662132735)));
pragma solidity >= 0.0.0;
contract C0 {
  bool  public s0;
  mapping(uint128 => bool)[]  public s1;
  uint88  public s2 = uint88(48780985383528603650713797);
  bytes   s3 = "ffffffffff00000000000000000000";
  constructor(bool i0)   {
    s0 = false;
    {
    }
  }
  modifier m0() 
  {
    _;
    (bool l0, bytes memory l1) = address(this).call("000000000000000000000000000000000000000000000000000000000000000000000000000000");
  }
  type T0 is int152;
  struct St0 {
    address el0;
  }
}
struct St1 {
  bytes4 el0;
  address payable el1;
}
// ----
// Warning 3149: (su0.sol:1990-2207): The result type of the exponentiation operation is equal to the type of the first operand (uint136) ignoring the (larger) type of the second operand (uint232) which might be unexpected. Silence this warning by either converting the first or the second operand to the type of the other.
// Warning 5740: (su0.sol:112-1638): Unreachable code.
// Warning 5740: (su0.sol:1643-1718): Unreachable code.
// Warning 5740: (su0.sol:1724-1800): Unreachable code.
// Warning 5667: (su0.sol:25-32): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:2541-2548): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:13-1832): Function state mutability can be restricted to pure
