
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  mapping(address => int104)   s0;
  uint112  public s1;
  constructor(uint112 i0)   {
    s1 |= (uint112(int112(-1832915552389312811115787191942809)) | (uint112(5192296858534827628530496329220095) >> uint128((uint128(340282366920938463463374607431768211455) - uint128(340282366920938463463374607431768211455)))));
    s0[msg.sender] |= int104(0);
    {
    }
  }
  int208 public constant cons0 = 13910232192012638570465111118600307761024313472694789510518183;
  fallback() external   
  {
    assembly
    {
      switch 46252685373257201365996308149551064995984805395224773332122851695913419078521
      default
      {
        returndatacopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 102413941850528928813275186442430964629654164718552328600856518927781457279778, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        for 
        {
          if 0
          {
            {
            }
            for 
            { let yulinit0 := 0 } lt(yulinit0, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit0 := add(yulinit0, 1) }
            {
              if 27074933295428211264171618248271240587450424160489658283301341419316439341803
              {
                stop()
              }
              if 0
              {
                switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
                case 83285638043086182438104200054643889771475193161174463589096926974504943809942
                {
                }
                default
                {
                }
              }
            }
          }
          pop(0)
        }
        0
        {
          if 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
          stop()
        }
        {
          if number()
          {
            let al0 := 114848959484870693700593903265839726746545250681241854565953582308575712392907
            for 
            {
              let al1 := mload(add(0x80, mod(s1.slot, 2048)))
            }
            s1.offset
            {
              for 
              { let yulinit1 := 0 } lt(yulinit1, mod(s1.offset, 11)) { yulinit1 := add(yulinit1, 1) }
              {
                al0 := 100841399908072444819578966068808434532218418266810319136544658361960931028211
                pop(calldataload(mod(al0, calldatasize())))
                let al2 := sload(s1.offset)
              }
            }
            {
            }
            switch al0
            case 80578784313668676231945657640621155156069305217348508176575631919568751761559
            {
              let al3 := al0
              selfdestruct(115792089237316195423570985008687907853269984665640564039457584007913129639935)
            }
            case 0
            {
              returndatacopy(add(0x80, mod(s0.slot, 1024)), mload(add(0x80, mod(s1.offset, 2048))), mod(s1.slot, 1024))
              al0 := sload(113758046434354628963983482994210588144801975841361744780651123863697826931255)
            }
            default
            {
              calldatacopy(add(0x80, mod(s0.offset, 1024)), al0, mod(0, 1024))
              continue
            }
            al0 := al0
          }
          extcodecopy(s0.offset, add(0x80, mod(106386992077399575130863593297147422616296479875679822943062203472633818143717, 1024)), sload(81066008187744439895964327904150564740369344269790031402319231477877545882737), mod(s1.slot, 1024))
          continue
        }
      }
      function af0(ai0, ai1, ai2) -> ao0, ao1
      {
        leave
      }
    }
  }
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
