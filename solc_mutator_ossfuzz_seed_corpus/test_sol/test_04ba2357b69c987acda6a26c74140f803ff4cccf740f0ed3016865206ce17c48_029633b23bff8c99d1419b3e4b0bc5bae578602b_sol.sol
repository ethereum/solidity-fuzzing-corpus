==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  modifier m0() 
  {
    (bool l0, bytes memory l1) = payable(this).call{value: 14817137629723551208}("");
    (bool l2, bytes memory l3) = payable(this).call{value: 10750297397819594244}("");
    int56 l4 = (((int32(96653680) - (int56(5345345352124863) - int56(36028797018963967))) - int56(0)) % int56(0));
    require(((false ? bytes32(0xcd0838dbb53c57e1aeb1c5834926e6302d3d1b4151d79f3a95971f6d57fd91b4) : bytes32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) != (true ? bytes32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) : bytes32(0x929cb2915466a84da565b477ef8306fdc2756587b374c00ddbc3390eeff77062))));
    _;
  }
  receive() external  m0() payable
  {
    assembly
    {
      extcodecopy(0, add(0x80, mod(mload(add(0x80, mod(91423025774558076754980750792362121468860456511522007547308857098530386520336, 2048))), 1024)), 0, mod(43365477521423900547462529315226873688007445687239550373695744394622846588583, 1024))
      switch blockhash(56924833242151514379924629805278766150280034183947344109083812019170535628840)
      case 45891712610753974612504640907348886859067867645537956859548731812218588010423
      {
        extcodecopy(add(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(0, 1024))
      }
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 0
        {
          switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
          case 92631368000228480749230582163054934853415004245175297827713132886891546238669
          {
            codecopy(add(0x80, mod(0, 1024)), 28502803121440601280032506578665760312902506793203969675888686996729464668382, mod(0, 1024))
            pop(sload(mulmod(103813124069343735001316219179228776943623474099099431187510469562434349526511, 0, 80828134892403106670677132941527443854799410827461651950842209290541081356006)))
            for 
            { let yulinit0 := 0 } lt(yulinit0, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit0 := add(yulinit0, 1) }
            {
              break
            }
          }
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
          if 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
        }
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
        }
      }
    }
  }
  struct St0 {
    function () external   returns (int24, string memory) el0;
    mapping(address => address) el1;
    bytes el2;
    bytes19 el3;
  }
  address   s0;
  int152   s1;
  int8 immutable  s2;
  constructor(address i0,int152 i1,int8 i2)   {
    s0 = address(this);
    s1 = (~((int152(2854495385411919762116571938898990272765493247) * (int152(2451928944819220654280311124339266402506511201) ^ int152(0)))));
    s2 = int8(0);
    unchecked {
      (s1) = (((int152((int152(0) / int152(1983435758076736366879582172246111507146982170))) + int152(2854495385411919762116571938898990272765493247)) ** uint72(uint72(0))));
      assert(s1 == ((int152((int152(0) / int152(1983435758076736366879582172246111507146982170))) + int152(2854495385411919762116571938898990272765493247)) ** uint72(uint72(0))));
    }
  }
}
// ----
// Warning 5740: (su0.sol:2423-2451): Unreachable code.
// Warning 5667: (su0.sol:3206-3216): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:3217-3226): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:3227-3234): Unused function parameter. Remove or comment out the variable name to silence this warning.
