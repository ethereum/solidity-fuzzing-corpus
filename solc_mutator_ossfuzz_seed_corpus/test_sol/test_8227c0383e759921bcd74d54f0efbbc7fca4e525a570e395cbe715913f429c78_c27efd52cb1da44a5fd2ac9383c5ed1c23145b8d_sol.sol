==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
library L0 {
  error er0(bytes10 ep0);
  function f0() public    returns(int208[][9][7][8][10] memory o0)
  {
    assembly
    {
      let al0 := o0
      if o0
      {
        sstore(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), o0)
        for 
        {
        }
        blockhash(al0)
        {
          switch o0
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
          case 0
          {
            o0 := o0
          }
          case 6068680098270770621013989574350587624544342401465306938286224581865328428311
          {
            switch add(al0, 89365629491306446244906993535126314243266726216245938584094047674599210301935)
            case 46981136364650826910871863518481953235251927649051828370684783308436847241871
            {
            }
            case 77038134962906938589491491252572768257687880898296092757939944984127331434137
            {
            }
            case 34024840125789667198792536046184190831121569623121821583865623299046568469044
            {
              o0 := o0
              stop()
            }
            for 
            { let yulinit0 := 0 } lt(yulinit0, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit0 := add(yulinit0, 1) }
            {
              switch al0
              default
              {
              }
              switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
              case 115792089237316195423570985008687907853269984665640564039457584007913129639935
              {
              }
              calldatacopy(add(0x80, mod(76149014235138559060360228040087532589243240523415848516080331434125081833669, 1024)), lt(o0, 11077655682224514869302082003627292658355774823196117424209105624182782475054), mod(shl(delegatecall(0, 0, 11362187944248678572719008146096507510257589831626423495384260902340595124856, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 71492484516744721265285246646072894144240494597616058577481472292793217975664), 60024094238581673852918462726570967113102934471665478567944358271127042188148), 1024))
            }
            let al1 := timestamp()
          }
        }
        {
          returndatacopy(add(0x80, mod(coinbase(), 1024)), selfbalance(), mod(81752051086153730366413662856075511723200015483731582638409283301134926857067, 1024))
          let al2 := o0
          continue
        }
      }
      o0 := 61936617994044363707301765097011677536548439662350513742535325081032079507961
    }
    function (address payable, bool, address payable) internal   l0;
    o0[uint120(1329227995784915872903807060280344575)] = o0[(address(0x0000000000000000000000000000000000000002).balance & (uint256(107622680724194388306304939349858821443776865336393562743614630241884986019282) << uint216(uint216(99816422999566872528272431191602590767142773202524181883346148910))))];
  }
}
// ----
// Warning 9592: (su0.sol:1427-1491): "switch" statement with only a default case.
// Warning 2072: (su0.sol:2699-2762): Unused local variable.
