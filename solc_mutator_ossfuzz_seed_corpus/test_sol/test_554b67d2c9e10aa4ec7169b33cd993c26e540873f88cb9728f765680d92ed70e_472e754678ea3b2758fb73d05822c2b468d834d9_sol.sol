
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
bool constant cons0 = true;

==== Source: su1.sol ====
contract C0 {
  int128   s0 = int128(0);
  receive() external   payable
  {
    assembly
    {
      if sload(s0.offset)
      {
        return(115792089237316195423570985008687907853269984665640564039457584007913129639935, sdiv(s0.slot, 27382642473697766294378867446802619364149085229217293781480667834602002391867))
      }
      {
        return(div(s0.offset, 115792089237316195423570985008687907853269984665640564039457584007913129639935), sub(115792089237316195423570985008687907853269984665640564039457584007913129639935, 59278972013883412669223769091719838101832194697368985783483124270373888535554))
      }
    }
    int128  l0 = s0;
    int128  l1 = l0;
    assert(l1 == s0);
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
