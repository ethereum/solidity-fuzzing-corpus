==== Source:  ====

==== Source: su0.sol ====
contract C0 {
  bytes6  public s0 = bytes6(0x6a8166020691);
  uint240[][8]  public s1 = [[uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1694601421824948270556375377337282135810453534105587162820727380048308206), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(1162054368683516584613853175840684802137242669272791064682223324535577524), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0)], [uint240(1357876181742856293511008495741901835235783063910769237597217057735986748), uint240(0), uint240(0)], [uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0), uint240(0)], [uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1094744635002009292220653260390067974139557031951252655003755679275311641), uint240(0)], [uint240(0), uint240(1308508039105891769798977175077173867986281507282330409898685211099707901), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(0), uint240(1089876814275049479226246657790353423723899879676395715618073452825818742), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)]];

	function compareMemoryAndStorage(uint240[][8] memory v1, uint240[][8] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint240[] memory v1, uint240[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  uint80   s2 = uint80(0);
  receive() external   payable
  {
    bytes6  l0 = s0;
    bytes6  l1 = l0;
    assert(l1 == s0);
    uint240[][8] memory l2 = s1;
    uint240[][8] memory l3 = l2;
    assert(compareMemoryAndStorage(l3, s1));
  }
}
pragma solidity >= 0.0.0;
// ----
// Warning 2018: (su0.sol:1757-2005): Function state mutability can be restricted to view
