==== Source:  ====

==== Source: su0.sol ====
struct St0 {
  function (bytes14) external   returns (int120, int136, uint152) el0;
  bytes17 el1;
  address payable el2;
}
contract C0 {
  fallback() external   
  {
    assembly
    {
      if 0
      {
        for 
        {
        }
        prevrandao()
        {
        }
        {
        }
        codecopy(add(0x80, mod(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), 1024)), sload(47382982424089409931644623327245144414521709986557476526909621221839989411610), mod(0, 1024))
        switch or(shl(0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 95809693890591097173274441477221888588357108814112243147072353611904574662955)
        default
        {
        }
        pop(113818005040792633846895829085898442867065837571675205367937807284311537164849)
      }
      extcodecopy(115792089237316195423570985008687907853269984665640564039457584007913129639935, add(0x80, mod(39552498763385623617096765557499089830171870592962351695513551525107422875473, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
      for 
      { let yulinit0 := 0 } lt(yulinit0, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit0 := add(yulinit0, 1) }
      {
        stop()
      }
    }
  }
  bytes5   s0 = bytes5(0x8c3a1c78ce);
  address payable  public s1 = payable(address(this));
}
pragma solidity >= 0.0.0;
// ----
// Warning 9592: (su0.sol:555-767): "switch" statement with only a default case.
// Warning 5740: (su0.sol:1381-1409): Unreachable code.
