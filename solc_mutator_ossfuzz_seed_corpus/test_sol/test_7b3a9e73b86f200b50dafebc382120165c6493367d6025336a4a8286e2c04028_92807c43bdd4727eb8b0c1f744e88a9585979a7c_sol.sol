==== Source:  ====

==== Source: su0.sol ====
contract C0 {
  fallback() external virtual  payable
  {
    address payable l0 = payable(address(this));
    bool l1 = ((~(uint160((((uint160((uint160(18785432644727650719641074485958832910055285561) / uint160(1461501637330902918203684832716283019655932542975))) * uint160(0)) ^ uint160(1461501637330902918203684832716283019655932542975)) / uint160(0))))) <= uint160(1461501637330902918203684832716283019655932542975));
    address payable l2 = payable(address(this));
    address[10][2] storage l3;
    l3[uint256(((((uint256(((uint256(0) + uint256(100446643428675885261219157107912451004368600291984007294690861211071924187320)) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) + uint256(17841849562001029107712797725719685758668794269551789763096136720652830718715)) << uint24(uint24(0))) % uint256(0)) / uint256(0)))] = [address(0x0000000000000000000000000000000000000004), address(0x0000000000000000000000000000000000000007), address(0x0000000000000000000000000000000000000007), address(0x0000000000000000000000000000000000000001), address(0x0000000000000000000000000000000000000003), address(0x0000000000000000000000000000000000000003), address(0x0000000000000000000000000000000000000003), address(0x0000000000000000000000000000000000000005), address(0x0000000000000000000000000000000000000005), address(0x0000000000000000000000000000000000000008)];
  }
  function f1() external virtual   returns(address o0,bool o1)
  {
  }
  address payable   s0 = payable(address(this));
  mapping(int160 => bool)  public s1;
  uint64   s2;
  int48   s3 = int48(-78657761959215);
  constructor(uint64 i0)   {
    s2 /= ((uint64(((uint64(18446744073709551615) - (true ? uint64(9757191532966460150) : uint64(0))) / uint64(0))) & uint64(3018143399997810531)) - uint64(12314911735990638637));
    s1[(-((((payable(address(this)) > payable(this.f1.address)) ? int160(730750818665451459101842416358141509827966271487) : int160(0)) ^ int160(-152834763123227833587168394365611363035343908738))))] = s1[(int160(0) * (-(int160(-575285657045480678222624054777489288131085032012))))];
    unchecked {
      uint64  l0 = s2;
      uint64  l1 = l0;
      assert(l1 == s2);
      address payable  l2 = s0;
      address payable  l3 = l2;
      assert(l3 == s0);
    }
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ----
// Warning 3628: (su0.sol:0-2294): This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.
// TypeError 3464: (su0.sol:505-507): This variable is of storage pointer type and can be accessed without prior assignment, which would lead to undefined behaviour.
