
==== Source: su0.sol ====
contract C0 {
  receive() external   payable
  {
    assembly
    {
      for 
      {
        switch 0
        case 0
        {
          for 
          {
          }
          0
          {
          }
          {
            sstore(110630752935367770692887417081674837107632831680160648967331716340945416166925, 85762336100496587637802463067185106366434688332677950530729239391960698063060)
          }
          calldatacopy(add(0x80, mod(44425942962372770844840304004915193088684004396247257012846833491907970732584, 1024)), mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), mod(68741849780861607123331135026672476734341590199573225021704553407887741156732, 1024))
        }
        case 52471241139645274540100021567745690730892862503757912654291213172573457555892
        {
        }
        case 21035483883092819014742149317970426023898181800697477010419616193897575387274
        {
        }
      }
      0
      {
        function af0(ai0, ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8) -> ao0, ao1, ao2, ao3, ao4, ao5, ao6, ao7, ao8, ao9, ao10, ao11, ao12, ao13, ao14
        {
          switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
          case 0
          {
            return(add(0x80, mod(44425942962372770844840304004915193088684004396247257012846833491907970732584, 1024)), ai0)
          }
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            ao8 := gaslimit()
            {
              ao7 := 0
              pop(balance(0))
            }
          }
          returndatacopy(add(0x80, mod(and(ai2, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 1024)), 77282549446202137518064254150399416704367882918817064048763534974794035897375, mod(calldataload(mod(41656355615466008280766744110488237266367669106502442769659086419717470908609, calldatasize())), 1024))
        }
      }
      {
      }
      return(40739977208988531322622890197926614620514334493822894114893535438132231331162, iszero(0))
    }
  }
  uint56   s0;
  bool   s1 = true;
  bytes14   s2;
  bytes12   s3;
  constructor(uint56 i0,bytes14 i1,bytes12 i2)   {
    s0 ^= (uint56(72057594037927935) % ((uint56((uint56(72057594037927935) / uint56(72057594037927935))) + uint56(0)) >> uint136(uint136(73558286035910305570746339282396047865515))));
    s2 &= bytes9(0xffffffffffffffffff);
    s3 = bytes12(0x000000000000000000000000);
    {
      unchecked {
        bool  l0 = s1;
        bool  l1 = l0;
        assert(l1 == s1);
        bytes12  l2 = s3;
        bytes12  l3 = l2;
        assert(l3 == s3);
        bool  l4 = s1;
        bool  l5 = l4;
        assert(l5 == s1);
        (s3) = (bytes12(0x8b7128db0bd7f655364e695d));
        assert(s3 == bytes12(0x8b7128db0bd7f655364e695d));
      }
      uint56  l6 = s0;
      uint56  l7 = l6;
      assert(l7 == s0);
      bytes12  l8 = s3;
      bytes12  l9 = l8;
      assert(l9 == s3);
      unchecked {
        {
        }
        (bool l10, bytes memory l11) = payable(this).call{value: 7339572584567417962}("");
        revert(string("91349aa8d43bd88a7eb2cf96de1657414b000000000000000000000000000000000000000000000000000000000000"));
      }
      bool  l12 = s1;
      bool  l13 = l12;
      assert(l13 == s1);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
