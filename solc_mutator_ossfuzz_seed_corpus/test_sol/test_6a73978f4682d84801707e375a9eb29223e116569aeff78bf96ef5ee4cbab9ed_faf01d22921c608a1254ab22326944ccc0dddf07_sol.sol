
==== Source: su0.sol ====
contract C0 {
  fallback() external   
  {
    bytes10 l0 = (bytes10(0x346c43c7bd7e26233bd6) | bytes10(0xffffffffffffffffffff));
  }
  receive() external virtual  payable
  {
    bytes storage l0;
    assembly
    {
      if sar(115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
      {
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        default
        {
        }
      }
      if 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        switch 0
        case 47309075059258758321209679152355697842547803086319533083267795852366046809409
        {
        }
        case 92456215429543555599988531702390749107582705765226968720983884471274568275070
        {
          for 
          {
          }
          115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            calldatacopy(add(0x80, mod(smod(calldataload(mod(0, calldatasize())), 5481692368380607915739012119033906789663773264602844539762050435210102229124), 1024)), 90137762466250979638657226959642528399378200460635304816179025236403538522689, mod(0, 1024))
          }
          {
          }
          if 34896404617130405412249908756250403065512275925885297352439281158602992272788
          {
            pop(115792089237316195423570985008687907853269984665640564039457584007913129639935)
          }
          codecopy(add(0x80, mod(mload(add(0x80, mod(9674317401552569927640212547012042407979063410975341258334916638268912036343, 2048))), 1024)), mload(add(0x80, mod(smod(calldataload(mod(0, calldatasize())), 5481692368380607915739012119033906789663773264602844539762050435210102229124), 1024))), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        }
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          {
          }
          stop()
        }
        case 65328303883418150438452538968791733212408236125782171480996875627031418465374
        {
          return(mload(add(0x80, mod(46921552792112473682001561345168690544996176181921323361898122609612818423544, 2048))), 3437456689456877819208147314852969393494203926794824312295360181441663146252)
        }
        default
        {
          pop(115792089237316195423570985008687907853269984665640564039457584007913129639935)
        }
      }
    }
  }
  string   s0;

	function compareMemoryAndStorage(string memory v1, string storage v2) internal pure returns (bool) {
		return keccak256(bytes(v1)) == keccak256(bytes(v2));
	}
  address payable   s1 = payable(address(this));
  int144   s2 = int144(11150372599265311570767859136324180752990207);
  bool immutable public s3 = false;
  constructor(string memory i0)   {
    s0 = string("49ed18e1ba4709f4f8157064bcbff96333312d1c2e79073c3745d3d4591935e157ff3571669c9b38f6b890aac8b8");
    unchecked {
      int144  l0 = s2;
      int144  l1 = l0;
      assert(l1 == s2);
    }
  }
}
pragma solidity >= 0.0.0;
library L0 {
  modifier m0() 
  {
    for(    address payable l0 = payable(msg.sender);
;
)
    {
      _;
    }
  }
}
// ====
// ----
