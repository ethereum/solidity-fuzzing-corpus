
==== Source: su0.sol ====
contract C0 {
  int256   s0;
  constructor(int256 i0)   {
    s0 = (int256(57896044618658097711785492504343953926634992332820282019728792003956564819967) ^ ((((int256(44258188652712917833374229380291228402795456180617081262644227876365609981494) + int256(0)) ** uint248(uint248(36984377123402013300426979440787696439819293135668070980371108922473931413))) - int256(57896044618658097711785492504343953926634992332820282019728792003956564819967)) | int256(-50012994958461233862558339821041581462561843355348481980208017291343731931144)));
    {
      int256  l0 = s0;
      int256  l1 = l0;
      assert(l1 == s0);
      {
        int256  l2 = s0;
        int256  l3 = l2;
        assert(l3 == s0);
        int256  l4 = s0;
        int256  l5 = l4;
        assert(l5 == s0);
        (bool l6, bytes memory l7) = address(this).call(bytes("20e381cfa162c37ea4cb596f63a5b8f839ba261edf4761c73f6b7a439859db5e6b9f03c9a15905"));
        int256  l8 = s0;
        int256  l9 = l8;
        assert(l9 == s0);
        int256  l10 = s0;
        int256  l11 = l10;
        assert(l11 == s0);
      }
      int256  l12 = s0;
      int256  l13 = l12;
      assert(l13 == s0);
      int256  l14 = s0;
      int256  l15 = l14;
      assert(l15 == s0);
    }
  }
}
function f0()    
{
  bytes15 l0 = (bytes15(0x000000000000000000000000000000) | (bytes2(0xffff) ^ (bytes15(0x000000000000000000000000000000) | bytes15(0xa0ddacf8d40cefca65f4da1d551278))));
}
pragma solidity >= 0.0.0;
// ====
// ----
