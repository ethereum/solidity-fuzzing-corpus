
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
contract C0 {
  int80   s0 = int80(0);
  address   s1 = address(this);
}
pragma solidity >= 0.0.0;
library L0 {
  function f0(int168 i0) external    returns(uint208 o0,int8 o1,function (address[1][10][][8][][] memory, function (int144[8] memory, address payable, address payable) external   returns (address payable, int112, bool), function (uint88[7] memory) external   returns (string memory, uint208, uint88)) external   returns (int24, address payable, int120[] memory) o2)
  {
    assembly
    {
      switch sdiv(i0, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
      case 0
      {
        o1 := i0
      }
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        o0 := calldatasize()
        switch staticcall(30480858617138740458892367194360705514162584801455114893134511017213714291396, 21168254517961754588721474891454087485695245734735497507677225879731824661199, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 73418518954838188832026464330321615822930473445272907962645295550059640428515, 0)
        case 0
        {
          o1 := not(46235803693670567508658573357177204180938354077055152092746297639675817755322)
        }
        case 94270762744915260750329690619657436504584075453797668045958757445559874152370
        {
          mstore8(add(0x80, mod(i0, 2048)), 0)
          for 
          {
            sstore(115792089237316195423570985008687907853269984665640564039457584007913129639935, mload(add(0x80, mod(i0, 2048))))
            for 
            {
            }
            i0
            {
              for 
              { let yulinit0 := 0 } lt(yulinit0, mod(i0, 11)) { yulinit0 := add(yulinit0, 1) }
              {
                return(add(0x80, mod(i0, 2048)), extcodehash(i0))
              }
              {
              }
            }
            {
              sstore(0, i0)
            }
          }
          54362448334079422785618059917817201155612889130838212068039437535061199836740
          {
          }
          {
            for 
            { let yulinit1 := 0 } lt(yulinit1, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit1 := add(yulinit1, 1) }
            {
              returndatacopy(add(0x80, mod(mload(add(0x80, mod(i0, 2048))), 1024)), i0, mod(i0, 1024))
              sstore(97931008865256322383304717631519054893664489327755607508041046540659277331678, i0)
              break
            }
            calldatacopy(add(0x80, mod(7424190269951778620082253423039234993312463175518136443623802801253076870050, 1024)), 0, mod(i0, 1024))
            o0 := div(i0, 41618793896222234521868323023005031842375053214035861581862067551670201618319)
            let al0 := i0
          }
        }
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          switch i0
          case 0
          {
            o1 := i0
          }
        }
        function af0(ai0, ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8, ai9, ai10) -> ao0, ao1, ao2, ao3, ao4, ao5, ao6, ao7
        {
          ao1 := ai1
          if smod(shl(2951091359387979905706698243078958800798660443253099915398961094843464214001, 95825824476067379588151920086276148524116491313954152589008267040773226509796), 0)
          {
            ao3 := gt(115792089237316195423570985008687907853269984665640564039457584007913129639935, 12822779309286162237491819057626352360214036092356848516851964810398433576917)
          }
        }
      }
      returndatacopy(add(0x80, mod(0, 1024)), i0, mod(0, 1024))
    }
  }
}
using L0 for int168;
// ====
// ----
