==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external virtual  payable
  {
    assembly
    {
      function af0(ai0, ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8, ai9, ai10) -> ao0, ao1, ao2, ao3, ao4, ao5, ao6, ao7, ao8, ao9, ao10, ao11, ao12, ao13, ao14
      {
        returndatacopy(add(0x80, mod(ai8, 1024)), 0, mod(ai2, 1024))
        ao2 := ai10
        switch sload(ai5)
        case 57788156242893394348630076430506157852779050492401425330671338477388775254717
        {
          return(ai1, 0)
        }
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          returndatacopy(add(0x80, mod(ai8, 1024)), and(43148604950640478466718609120936264972948170930237737866389777808034005535891, 0), mod(ai7, 1024))
          pop(mload(add(0x80, mod(0, 2048))))
        }
      }
      let al0, al1, al2, al3, al4, al5, al6, al7, al8, al9, al10, al11, al12, al13, al14 := af0(mload(add(0x80, mod(ai8, 1024))), calldataload(mod(68341691852737506633013776785359435261723480846989251446390399578411225038431, calldatasize())), 49638874227590043886449810961968281682909971261179379357220635628545577543229, 109461540841269380324682117950368536175807224143051281057819606068727743802273, 50733870020061922405781741994299244152002019275480812113385626393777968126969, 0, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 0)
      return(add(0x80, mod(ai8, 1024)), al13)
    }
    uint176 l0 = (((uint176(0) - (uint176((uint176(0) / uint176(95780971304118053647396689196894323976171195136475135))) | uint176(17308374995439756017714351324769859038077457863699385))) << uint160(uint160(0))) | uint176(39206975127433983413181282693719502570605683752822600));
  }
  address   s0 = address(this);
  int16   s1 = int16(12815);
  bytes13   s2;
  constructor(bytes13 i0) payable  {
    s2 |= bytes13((~(bytes8(0x9d45a07f7ef59104))));
    unchecked {
    }
  }
}
// ----
// DeclarationError 8198: (su0.sol:954-957): Identifier "ai8" not found.
// DeclarationError 8198: (su0.sol:1519-1522): Identifier "ai8" not found.
