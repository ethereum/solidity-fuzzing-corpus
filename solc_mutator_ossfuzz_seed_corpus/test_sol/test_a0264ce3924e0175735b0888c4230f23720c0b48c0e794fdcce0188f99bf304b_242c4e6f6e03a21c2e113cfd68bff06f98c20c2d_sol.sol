
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
contract C0 {
  bool   s0;
  constructor(bool i0)   {
    s0 = true;
    unchecked {
      bool  l0 = s0;
      bool  l1 = l0;
      assert(l1 == s0);
      bool  l2 = s0;
      bool  l3 = l2;
      assert(l3 == s0);
      (s0) = ((int232(-1644352944859789607829444408466371945670924909823516640402518762859999) != (int232(38621437830906137156938776461983506300310193362099804519856215308351) % ((int232(3000094438325734523409057028356889423163151792792168010939199697181845) + int232(3450873173395281893717377931138512726225554486085193277581262111899647)) * int232(3450873173395281893717377931138512726225554486085193277581262111899647)))));
      assert(s0 == (int232(-1644352944859789607829444408466371945670924909823516640402518762859999) != (int232(38621437830906137156938776461983506300310193362099804519856215308351) % ((int232(3000094438325734523409057028356889423163151792792168010939199697181845) + int232(3450873173395281893717377931138512726225554486085193277581262111899647)) * int232(3450873173395281893717377931138512726225554486085193277581262111899647)))));
    }
  }
  receive() external virtual  payable
  {
    bool  l0 = s0;
    bool  l1 = l0;
    assert(l1 == s0);
    bool  l2 = s0;
    bool  l3 = l2;
    assert(l3 == s0);
    bool  l4 = s0;
    bool  l5 = l4;
    assert(l5 == s0);
    (bool l6, bytes memory l7) = payable(this).call{value: 7317003321750399366}("");
  }
  int40 public constant cons0 = 0;
}
pragma solidity >= 0.0.0;
function f1()     returns(bytes9 o0,string memory o1,bool o2)
{
  bool l0 = true;
}
// ====
// ----
