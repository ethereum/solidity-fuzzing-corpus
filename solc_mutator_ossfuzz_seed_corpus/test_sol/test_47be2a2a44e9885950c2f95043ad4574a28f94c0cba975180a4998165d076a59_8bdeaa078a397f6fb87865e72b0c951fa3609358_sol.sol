==== Source:  ====

==== Source: su0.sol ====
struct St0 {
  uint224 el0;
  string el1;
}
function f0(bool i0,uint256 i1)    
{
  bool[] memory l0 = new bool[](2);
  uint72 l1 = uint72(0);
  St0 memory l2 = St0(uint224(11946781070796026396183019672439974323666189919884134996086194918066), string("000000000000000000000000"));
  unchecked {
    bool l3 = (false ? l0[uint256(88356544356079408591024210628095917887881366127248393875643434638885514013762)] : (true ? false : true));
    assembly
    {
      switch and(i1, 0)
      default
      {
        switch 63631969093635646774759354710035010675337893514174218447158040522599847212504
        case 92368112230774188552824427631868247807494239863961615634866900323642196409590
        {
          return(slt(38463037967490526962327949939122562206143663253295990226595883572916498924420, 115792089237316195423570985008687907853269984665640564039457584007913129639935), i0)
        }
        case 0
        {
          l2 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            return(0, 22414353947116597308009910724827208575368321280052639115540137105731451310734)
          }
        }
        case 66018795623516421883153511124200853285460402813576076491820985621860101123325
        {
          {
          }
          if i1
          {
            l3 := i1
          }
          switch smod(i1, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
          case 0
          {
            {
              mstore(add(0x80, mod(i0, 2048)), i0)
            }
          }
          default
          {
            {
            }
            for 
            {
              switch i0
              default
              {
                for 
                { let yulinit0 := 0 } lt(yulinit0, mod(i0, 11)) { yulinit0 := add(yulinit0, 1) }
                {
                }
                calldatacopy(add(0x80, mod(i0, 1024)), returndatasize(), mod(i1, 1024))
              }
            }
            i1
            {
              for 
              {
                i0 := i0
              }
              i0
              {
                for 
                { let yulinit1 := 0 } lt(yulinit1, mod(0, 11)) { yulinit1 := add(yulinit1, 1) }
                {
                  l2 := i1
                  l3 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
                }
              }
              {
                codecopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 85627636483984095556146614642752409610258305634856039098634917163486627886960, mod(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))), 1024))
              }
            }
            {
              l0 := i0
              revert(0, i1)
            }
          }
        }
      }
      l0 := 42690088794077537730588660693461684569005877519940612711053294442057463326826
      i1 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
    }
  }
}
pragma solidity >= 0.0.0;
// ----
// Warning 9592: (su0.sol:460-2896): "switch" statement with only a default case.
// Warning 9592: (su0.sol:1659-1964): "switch" statement with only a default case.
// Warning 5740: (su0.sol:2022-2773): Unreachable code.
// Warning 2072: (su0.sol:120-129): Unused local variable.
// Warning 2018: (su0.sol:44-3089): Function state mutability can be restricted to pure
