
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
function f0(bool i0,address i1)    
{
  bool l0 = (true ? false : (bytes31(0x47c96e41719b0c315de9f9af09e02faeab14bfd6946c4d97c5f2b68e27fcdb) != bytes31(0x484b65b3ce3c89e4ca2fcbbd5cc53f3954652e16079a7d9bc9b8a6b80c4fbe)));
}
contract C0 {
  fallback() external virtual  payable
  {
    assembly
    {
      switch 12493065770309200764465089256504301381209832391766433679415079196648473756522
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        default
        {
          codecopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), balance(0), mod(sdiv(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0), 1024))
        }
        sstore(eq(115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935), mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))))
      }
      for 
      {
      }
      calldataload(mod(115044687158598299455887074931984010605254000417601936646396609648100503443183, calldatasize()))
      {
        returndatacopy(add(0x80, mod(28689201163190797803241045237103991390304965884053079465246170797214366480329, 1024)), 41788139559734712461846725572465367355826607205887746078247532223017769444391, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        for 
        { let yulinit0 := 0 } lt(yulinit0, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 11)) { yulinit0 := add(yulinit0, 1) }
        {
          codecopy(add(0x80, mod(0, 1024)), 0, mod(0, 1024))
          switch 0
          default
          {
            revert(add(12405395596290755081735853637051977348450294458122682921798440109311412990952, 115792089237316195423570985008687907853269984665640564039457584007913129639935), calldataload(mod(100667063639905340330142007467439508714757461491932801518296314040086326319477, calldatasize())))
          }
          let al0 := 0
          al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
        }
      }
      {
        break
      }
    }
    f0(false,address(this));
    address l0 = (((int24(6586832) - (~(int24(0)))) < int24(2680017)) ? address(this) : address(this));
  }
  int216 immutable  s0 = int216(45865416362648552461196081107730130546163693743614021747148889763);
  function f2(int216 i0,int216 i1) private   
  {
    assembly
    {
      returndatacopy(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(calldatasize(), 1024))
    }
    int216  l0 = s0;
    int216  l1 = l0;
    assert(l1 == s0);
    int216  l2 = s0;
    int216  l3 = l2;
    assert(l3 == s0);
    int216  l4 = s0;
    int216  l5 = l4;
    assert(l5 == s0);
  }
}
// ====
// ----
