
==== Source: su0.sol ====
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28
}
function f0(function () external   returns (function (bytes21) external   returns (int128)) i0)    
{
  assembly
  {
    function af0(ai0, ai1)
    {
      pop(0)
      selfdestruct(ai0)
    }
    let al0 := 5419830873600016045441040126329112168345297101488328311843634417016901457870
    {
      switch mod(create2(115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 64238302503312807450188888561908881566960854800129929842503955288140485835728)
      case 0
      {
      }
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        function af1(ai2) -> ao0, ao1
        {
          {
            ao1 := mload(mod(ao0, 2048))
          }
          switch ao0
          default
          {
            let al1, al2 := af1(ai2)
            let al3 := al2
          }
          for 
          {
            return(0, ao0)
            af0(ai2, staticcall(95263870501572985196556825622756694780004309992736476440954697272399862714208, 0, 0, 30570637283664500642065929343954995414976105258066832058770082288129949331389, 17366468628144607377920860619234782185082357181250579167996685964328772641222, 115792089237316195423570985008687907853269984665640564039457584007913129639935))
            ai2 := ao0
          }
          31616891878985877082448070787068390175845946554212340376139142978081578964348
          {
            ao1 := 0
          }
          {
            ao1 := 0
            pop(0)
            leave
            selfdestruct(115792089237316195423570985008687907853269984665640564039457584007913129639935)
            switch 0
            default
            {
            }
          }
          ai2 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
        }
      }
      af0(not(calldataload(mod(101920408633387306821663538660370274797511795720160210400293496694959350840709, calldatasize()))), 37827043564872702995282151412367480004219859031932683199101166945199073125740)
    }
  }
  do
  {
    revert(string("ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
    for(    address l0 = address(0x0000000000000000000000000000000000000004);
;
)
    {
    }
  }
  while ((int152(2854495385411919762116571938898990272765493247) == (int152(0) * ((int152(2854495385411919762116571938898990272765493247) % int152(-2592136584205587319780956646431470210270219552)) * int152(-92820139651055397371420203979839247254446008)))));
}
pragma solidity >= 0.0.0;
bool constant cons0 = (((((~(uint200(432744293157812127171535421546147105254292124222296603660116))) == uint200(1606938044258990275541962092341162602522202993782792835301375)) ? bytes32(0xac5d823e861c360687deccba99ce3bdb3f3374e734b02d4466097600851c39af) : bytes32(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)) & bytes32(0x738cbfc38350d1dbd796e0862ebe560c41577fca2dae50677da323fa36299403)) < bytes32(0x0000000000000000000000000000000000000000000000000000000000000000));
// ====
// ----
