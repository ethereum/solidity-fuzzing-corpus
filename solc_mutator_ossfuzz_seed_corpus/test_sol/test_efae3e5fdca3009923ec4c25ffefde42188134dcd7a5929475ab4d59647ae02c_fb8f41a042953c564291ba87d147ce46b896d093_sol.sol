
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  uint240[][10]   s0 = [[uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(676300196675122167321877007722583170370239742619785455463063364439487521), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1284945686455196719825076382086356444812289236582423907555190920849446687)], [uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(300153137555628695830788048182221851006664712283696803696589639418856647), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(347614354630934474403917917898790444462242608953217958681416020649669331), uint240(0)], [uint240(1668177024447149462777767207792491138615407552167801204879562877240775689), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1534338445971563307212899138504269186950849936822278304062797310731708653), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)], [uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(845231570359280539595857070993045888821223703860532397359970061059416461), uint240(1499072885123666190292063736783771171131206922013973805320070926747706913)], [uint240(272008280232075441865394886276178691590276231647676183289657944995483659), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(0), uint240(0)], [uint240(0), uint240(20539569483527673461738772491955269916384596863187633815883070043474622), uint240(0), uint240(0)], [uint240(434142139549781369559974480864764281049818766245237159042751608562950199), uint240(81908039205608338765286674869617179738702098038235276040350602279317085), uint240(658694222857506042064820401215539103240551330697172552458339820408620450), uint240(0)], [uint240(0), uint240(0), uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)]];

	function compareMemoryAndStorage(uint240[][10] memory v1, uint240[][10] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint240[] memory v1, uint240[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  uint64   s1;
  constructor(uint64 i0) payable  {
    s1 |= uint64(((((uint64((uint64(0) / uint64(18446744073709551615))) | uint64(18446744073709551615)) + uint64(15437082669513859775)) >> uint40(uint40(163854181822))) / uint64(0)));
    unchecked {
      uint64  l0 = s1;
      uint64  l1 = l0;
      assert(l1 == s1);
    }
  }
  struct St0 {
    bytes13 el0;
    bytes12 el1;
    bool el2;
  }
  struct St1 {
    int152 el0;
  }
}
// ====
// ----
