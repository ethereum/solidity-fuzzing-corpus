
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
function f0()    
{
  uint136 l0 = ((true ? uint136(0) : ((uint136(0) + uint136(87112285931760246646623899502532662132735)) ** uint200(uint200(0)))) ^ uint136(0));
  unchecked {
    (l0) = (((uint136(0) ^ (((uint136(0) & uint136(0)) * uint136(0)) - uint136(87112285931760246646623899502532662132735))) - uint136(0)));
    assert(l0 == ((uint136(0) ^ (((uint136(0) & uint136(0)) * uint136(0)) - uint136(87112285931760246646623899502532662132735))) - uint136(0)));
    require(((uint160(1375233355774789019341921008159155553493882407349) * (((uint160(77143064812637941282195949035144705629882571720) & uint160(0)) & uint160(864433964612767440870480922785159527608519754795)) * uint160(0))) <= uint160(228064178791933428903877324879776192897672585987)), string("ffffffffffffffffffffffffffffffffffff0000"));
    int184 l1 = (int184(-4808498198134670683493609591755305050374307615718097306) % int184(((((int184(9194897691247557564964128225526008851513650411911348255) % int184(0)) * int184(0)) - int184(6385536009956546165771588978594470599314033023705439501)) / int184(-3405681854205965701234173637988850440878331125664266641))));
  }
  address l2 = (true ? address(0x0000000000000000000000000000000000000008) : address(0x0000000000000000000000000000000000000006));
  bytes19 l3 = bytes19(0x00000000000000000000000000000000000000);
  int232 l4 = (((int232(int120(((int120(0) + int120(-638311056087432339773378357748325225)) / int120(29219843827782421017188078301722243)))) % int232(727812984327244263904195676703486296703187194458148094950583076440058)) % int232(3450873173395281893717377931138512726225554486085193277581262111899647)) + int232(0));
}
contract C0 {
  function f1(bytes13 i0,bool i1) external   payable returns(bool o0)
  {
    (bool l0, bytes memory l1) = payable(this).call{value: 1714173754872158344}("");
  }
  receive() external   payable
  {
    bool[][] memory l0 = new bool[][](8);
    (l0) = (new bool[][](8));
  }
  address payable   s0 = payable(address(this));
  bool   s1 = false;
  mapping(int80 => address)   s2;
  int136   s3 = int136(43556142965880123323311949751266331066367);
  constructor() payable  {
    s2[(-((int80(((-((int80(467892393059968808103538) & int80(604462909807314587353087)))) / int80(604462909807314587353087))) ** uint96(uint96(13392216121359905773518033718)))))] = address(this);
    unchecked {
      (bool l0, bytes memory l1) = payable(this).call{value: 0}("");
      int136  l2 = s3;
      int136  l3 = l2;
      assert(l3 == s3);
      bool  l4 = s1;
      bool  l5 = l4;
      assert(l5 == s1);
      address payable  l6 = s0;
      address payable  l7 = l6;
      assert(l7 == s0);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
