
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external virtual  payable
  {
    string storage l0;
    if (true)
    {
    }
    else if (true)
    {
      int80 l1 = (int80(567993997898043508315948) ** uint112(((uint88(int88(0)) % uint88(29232946007276980800467233)) % uint112(5192296858534827628530496329220095))));
    }
  }
  int224   s0 = int224(-140768369933504739963768359427523938234198990598765671593278180775);
  uint224  public s1;
  constructor(uint224 i0) payable  {
    s1 >>= (((uint224(0) << uint80(((uint80(1034259735482557767707404) + uint80(0)) + uint80(0)))) & uint224(26959946667150639794667015087019630673637144422540572481103610249215)) + uint224(17991703805965184015626235582191093249802184109372782322519144418820));
    unchecked {
      (s1, s0) = (uint224((int224(13479973333575319897333507543509815336818572211270286240551805124607) % (-((~(int224(13479973333575319897333507543509815336818572211270286240551805124607))))))), int224(0));
      assert(s1 == uint224((int224(13479973333575319897333507543509815336818572211270286240551805124607) % (-((~(int224(13479973333575319897333507543509815336818572211270286240551805124607))))))));
      assert(s0 == int224(0));
      int224  l0 = s0;
      int224  l1 = l0;
      assert(l1 == s0);
    }
  }
}
// ====
// ----
