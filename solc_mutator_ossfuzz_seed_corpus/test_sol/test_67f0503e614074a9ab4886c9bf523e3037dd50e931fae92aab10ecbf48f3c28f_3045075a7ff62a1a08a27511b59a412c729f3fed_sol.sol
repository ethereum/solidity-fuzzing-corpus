
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  fallback() external   payable
  {
    string storage l0;
    for(uint solinit0 = 0; solinit0 < ((uint256(26310008891306346018402734756347420490609408891945531027792056244041152186974) ^ ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) | (uint256(0) | uint256(75226743296467588179479604773859724137806836356038502916816431714492800321090))) * uint256(50785951946004892409667294468201977181173851632563945331271159562323864314352))) % 11); solinit0++)
    {
      (bool l1, bytes memory l2) = payable(this).call{value: 0}("");
    }
  }
  receive() external virtual  payable
  {
    uint208 l0 = ((uint208((false ? int208(205688069665150755269371147819668813122841983204197482918576127) : int208(124248577468595631331555090398067298734813771085108881544384049))) + uint208(0)) + uint208(411376139330301510538742295639337626245683966408394965837152255));
    int72 l1 = int72(2361183241434822606847);
  }
  bool   s0;
  bool  public s1 = false;
  address payable   s2;
  int232[8]  public s3;

	function compareMemoryAndStorage(int232[8] memory v1, int232[8] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  constructor(bool i0,address payable i1,int232[8] memory i2)   {
    s0 = ((((uint48(11391151548832) ^ (uint48(105776113395897) + uint48(281474976710655))) ** uint104(uint104(20282409603651670423947251286015))) | uint48(181949400235515)) >= uint48(143003882525771));
    s2 = payable(address(this));
    s3 = i2;
    unchecked {
      (s3, i2[(uint256(22736472432621551979021182630371084729786668381954510429384214985054916197604) & (uint256(0) + ((uint256(0) - uint256(0)) ** uint168(uint168(374144419156711147060143317175368453031918731001855)))))]) = ([int232(3357310148232826172278020444076807177368204781405014748076383688372694), int232(3450873173395281893717377931138512726225554486085193277581262111899647), int232(0), int232(-2036232794340210928914910414372306419723290997901329014568850230664877), int232(3450873173395281893717377931138512726225554486085193277581262111899647), int232(0), int232(3450873173395281893717377931138512726225554486085193277581262111899647), int232(3450873173395281893717377931138512726225554486085193277581262111899647)], ((((int232(3450873173395281893717377931138512726225554486085193277581262111899647) ^ (int232(0) % int232(3450873173395281893717377931138512726225554486085193277581262111899647))) | int232(0)) + int232(0)) * int232(3450873173395281893717377931138512726225554486085193277581262111899647)));
      assert(i2[(uint256(22736472432621551979021182630371084729786668381954510429384214985054916197604) & (uint256(0) + ((uint256(0) - uint256(0)) ** uint168(uint168(374144419156711147060143317175368453031918731001855)))))] == ((((int232(3450873173395281893717377931138512726225554486085193277581262111899647) ^ (int232(0) % int232(3450873173395281893717377931138512726225554486085193277581262111899647))) | int232(0)) + int232(0)) * int232(3450873173395281893717377931138512726225554486085193277581262111899647)));
      address payable  l0 = s2;
      address payable  l1 = l0;
      assert(l1 == s2);
      bytes10(0xffffffffffffffffffff);
      address payable  l2 = s2;
      address payable  l3 = l2;
      assert(l3 == s2);
      payable(this).transfer(0);
    }
  }
}
// ====
// ----
