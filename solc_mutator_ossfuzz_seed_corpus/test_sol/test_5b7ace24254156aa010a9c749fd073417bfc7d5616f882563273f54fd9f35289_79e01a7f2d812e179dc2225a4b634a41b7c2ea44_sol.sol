
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
library L0 {
  function f0(address payable i0) internal    returns(address o0)
  {
  }
  bytes16 public constant cons0 = bytes16(0xffffffffffffffffffffffffffffffff);
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  function f1(address i0,bytes4 i1) public virtual  
  {
    payable(this).transfer(0);
    unchecked {
      (bool l0) = payable(this).send(2200155175358680750);
      uint120 l1 = (uint120(1240280371272110448167208477755207541) * (~((((uint120(213381269062639333732210535268248925) | uint120(865430549619155852095224554795849287)) ** uint16(uint16(554))) * uint120(0)))));
      (bool l2) = payable(this).send(0);
    }
    assert((int224((((-(((int224(0) - int224(13479973333575319897333507543509815336818572211270286240551805124607)) * int224(0)))) | int224(0)) / int224(-12301631600439596373297439902963925536630379682103338267084284831230))) != int224(0)));
    return;
  }
  function f2() private   
  {
    bytes11 l0 = bytes11(0xffffffffffffffffffffff);
    (bool l1, bytes memory l2) = address(this).call(abi.encodeWithSignature("f1(address,bytes4)", address(this),bytes4(0xffffffff)));
    assembly
    {
      for 
      {
        extcodecopy(l0, add(0x80, mod(l1, 1024)), 66415728270737267804883762943359344847380278178210856976257066507239473902495, mod(calldatasize(), 1024))
        l0 := 74850031579401257698467142691159241910323664302621102233130590695789627069886
      }
      l2
      {
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
        }
      }
      {
        if l2
        {
          returndatacopy(add(0x80, mod(67577285404032245724543891847174270013146453083051283991920586421836821109329, 1024)), addmod(l2, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935), mod(l0, 1024))
          l0 := signextend(l0, 67910045330952295164631129030761920118073275335501558999172110439547545033528)
        }
        let al0 := l2
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        default
        {
          return(115792089237316195423570985008687907853269984665640564039457584007913129639935, l2)
        }
        returndatacopy(add(0x80, mod(al0, 1024)), 69757798703469674351347513382081707241372958620249215832190475829407465079313, mod(eq(115792089237316195423570985008687907853269984665640564039457584007913129639935, 6238685494545729970518028772661087977028220700104393194531871306032559090540), 1024))
      }
      switch l2
      default
      {
        let al1 := 0
      }
      if 94165565126835253473329015691431399834426149826316847074675796527964897827027
      {
        extcodecopy(l1, add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), 0, mod(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))), 1024))
      }
    }
  }
  receive() external virtual  payable
  {
  }
  bytes24   s0 = bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff);
}
// ====
// ----
