==== Source:  ====

==== Source: su0.sol ====
contract C0 {
  bytes20   s0;
  bool[4]  public s1 = [false, true, false, true];

	function compareMemoryAndStorage(bool[4] memory v1, bool[4] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  int200   s2 = int200(-72420745507004743340592794748593075473995966369671123469452);
  uint120  public s3;
  constructor(bytes20 i0,uint120 i1)   {
    s0 &= (false ? bytes20(address(0x79B2fE4AbafEabc6A7530d3b6C6b5F1c1D68a6a6)) : (ripemd160(bytes("ffffffffffffffffffffffffffffffffffffffff0000000000000000000000")) | bytes20(address(0x0000000000000000000000000000000000000000))));
    s3 |= uint120(0);
    {
      (s1[(uint256(81964990264799439228766415092506653841755774468451093440167063062463832062127) ** uint96(uint96(79228162514264337593543950335)))], s1[((address(this).balance & uint256(0)) ** uint200(uint200(996880538524274475635645361915748874350868664794829913389100)))], s1[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)], s1[(uint256(0) ** uint200(((s1[((false ? uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) : (true ? uint256(102648978147546807751241077806787722568562119212718246684490030504274152220923) : uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) & uint256(80456182962620787976521125673631891068370008766610567130159518773601631964264))] = (false ? false : true)) ? ((uint200(0) % uint200(0)) & uint200(0)) : uint200(0))))]) = (s1[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)], true, (false ? s1[payable(address(this)).balance] : false), (int192(0) > ((-((int8(127) % int8(127)))) + int192(0))));
      assert(s1[(uint256(81964990264799439228766415092506653841755774468451093440167063062463832062127) ** uint96(uint96(79228162514264337593543950335)))] == s1[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)]);
      assert(s1[((address(this).balance & uint256(0)) ** uint200(uint200(996880538524274475635645361915748874350868664794829913389100)))] == true);
      assert(s1[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)] == (false ? s1[payable(address(this)).balance] : false));
      assert(s1[(uint256(0) ** uint200(((s1[((false ? uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) : (true ? uint256(102648978147546807751241077806787722568562119212718246684490030504274152220923) : uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) & uint256(80456182962620787976521125673631891068370008766610567130159518773601631964264))] = (false ? false : true)) ? ((uint200(0) % uint200(0)) & uint200(0)) : uint200(0))))] == (int192(0) > ((-((int8(127) % int8(127)))) + int192(0))));
    }
  }
}
pragma solidity >= 0.0.0;
uint40 constant cons0 = 0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ----
// Warning 5667: (su0.sol:450-460): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:461-471): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:83-327): Function state mutability can be restricted to view
