
==== Source: su0.sol ====
function f0()     returns(uint24 o0,bytes18[2] memory o1)
{
  if ((bytes7(0x00000000000000) != bytes7(0xffffffffffffff)))
  {
  }
  else
  {
  }
  uint256 l0 = (uint256(((o1.length ** uint256(o1.length)) / (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) % uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935));
}
struct St0 {
  function () external   returns (int256, bytes9) el0;
}
contract C0 {
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7

  }
  int32 immutable  s0 = int32(0);
  mapping(bytes4 => uint144)   s1;
  uint208   s2 = uint208(411376139330301510538742295639337626245683966408394965837152255);
  St0[]  public s3;
  constructor() payable  {
    s1[bytes4(0xffffffff)] <<= (((((uint144(22300745198530623141535718272648361505980415) | uint144(0)) | uint144(22300745198530623141535718272648361505980415)) - uint144(15359346290255879356791738741575710934544468)) ^ uint144(22300745198530623141535718272648361505980415)) % uint144(20209093878073693083335985520569103751028653));
    unchecked {
    }
  }
}
enum EN1 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43
}
bool constant cons0 = (EN1(uint8(43)) < EN1.M3);
pragma solidity >= 0.0.0;
// ====
// ----
