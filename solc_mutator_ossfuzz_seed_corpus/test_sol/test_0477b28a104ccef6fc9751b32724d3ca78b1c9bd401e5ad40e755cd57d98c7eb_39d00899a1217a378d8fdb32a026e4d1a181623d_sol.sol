
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
function f0(bytes9 i0)     {
}
function f1(uint88 i0)     {
  assert(false);
  return;
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
function f2(bytes14 i0)      returns(int88 o0,int32 o1){
  uint40[3] memory l0 = [uint40(1099511627775), uint40(1099511627775), uint40(0)];
  (o0) = (int88(0));
  assert(o0 == int88(0));
  (l0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)], l0[uint256(0)], l0[(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) + ((uint256(0) - uint256(8942465490902734632978722775261945048703006724335288293760886275062777558958)) >> uint208(uint208(0)))) >> uint232(uint232(0))) - uint256(0))]) = (uint40(0), (uint40(((uint40((uint40(uint144(0)) / uint40(727044886073))) * uint40(0)) / uint40(571527242048))) - uint40(620823805471)), uint40(((uint40(0) ^ (uint40((uint40(953492600093) / uint40(1099511627775))) + uint40(1099511627775))) / uint40(0))));
  assert(l0[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)] == uint40(0));
  assert(l0[uint256(0)] == (uint40(((uint40((uint40(uint144(0)) / uint40(727044886073))) * uint40(0)) / uint40(571527242048))) - uint40(620823805471)));
  assert(l0[(((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) + ((uint256(0) - uint256(8942465490902734632978722775261945048703006724335288293760886275062777558958)) >> uint208(uint208(0)))) >> uint232(uint232(0))) - uint256(0))] == uint40(((uint40(0) ^ (uint40((uint40(953492600093) / uint40(1099511627775))) + uint40(1099511627775))) / uint40(0))));
  if (i0 >= bytes14(0xffffffffffffffffffffffffffff))
  {
    return ((((-(int88(154742504910672534362390527))) ^ int24(7062508)) & int88(154742504910672534362390527)), int32(0));
  }
  else
  {
  }
}
// ====
// ----
