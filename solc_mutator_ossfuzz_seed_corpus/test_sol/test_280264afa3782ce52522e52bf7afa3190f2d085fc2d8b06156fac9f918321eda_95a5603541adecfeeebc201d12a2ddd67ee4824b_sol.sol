
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  fallback() external virtual  
  {
    assembly
    {
      extcodecopy(108908310667847525902122617448843308458048198752409608600394104969860167965455, add(0x80, mod(addmod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 87780821200042675955287976415611049515895483412705320768335830033576026807721, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 1024)), 0, mod(34899281344934407061913544324798755265575156592299415515922283745530742799816, 1024))
      return(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)
    }
  }
  receive() external   payable
  {
    uint192 l0 = ((uint192(((uint192(0) + (uint192(0) >> uint208(uint208(241770668958065323914858049990949110132453269612042598186465562)))) / uint192(0))) * uint192(0)) ** uint240(uint240(1453818144229238934557428842454391378753015585257565946730436197200919941)));
    function () external   returns (uint64, bytes10, bool) l1;
    int120 l2 = ((((((int120(0) | int120(0)) * int120(-649770710775613145575760751630849675)) ** uint16(uint16(0))) * int120(0)) - int120(-391840834525458459427538078257301842)) - int120(-392683753479597716451393941595658461));
  }
  bool   s0;
  constructor(bool i0)   {
    s0 = false;
    unchecked {
    }
  }
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
