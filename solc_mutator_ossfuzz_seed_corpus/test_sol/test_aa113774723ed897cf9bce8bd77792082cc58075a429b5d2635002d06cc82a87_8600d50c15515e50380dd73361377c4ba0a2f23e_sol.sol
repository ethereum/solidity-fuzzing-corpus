
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
library L0 {
  modifier m0() 
  {
    {
      _;
      bytes memory l0 = bytes("0000000000000000000000000000");
      _;
      assembly
      {
        switch l0
        case 65541950016527924418484719273617605061850749718053495280672414300040525182063
        {
        }
        case 45167842276236320499503306377914783172623207749275506822659656868909770184919
        {
          let al0 := l0
        }
        case 0
        {
          let al1 := l0
          switch l0
          case 115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
            stop()
          }
          switch calldataload(mod(l0, calldatasize()))
          case 97749718021544887080253641394055765681008445000151014596490585367328847467666
          {
            al1 := 104538641301664727929069578466508811257889210246148856309762499933835802928124
            {
              returndatacopy(add(0x80, mod(0, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(al1, 1024))
              extcodecopy(al1, add(0x80, mod(al1, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(0, 1024))
              let al2 := calldataload(mod(l0, calldatasize()))
            }
            if al1
            {
              switch lt(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0)
              case 78812788482770809098414486231681725615460514963766083041432216893840034719389
              {
                al1 := 0
              }
              case 28514507382176602103126499499713115485925936649052232401911022879714946376001
              {
              }
              switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
              case 0
              {
              }
            }
          }
          case 51736510917217365337086966714952117877842362906278572237845808095239277413354
          {
            let al3 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
          }
          case 0
          {
            returndatacopy(add(0x80, mod(shr(mload(add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 2048))), 60121060330034868132681333789679481751235108347894376128142987099526912252373), 1024)), 71567658213162277829783466102757122725218398864467632011349535828671238150556, mod(0, 1024))
            switch al1
            case 115792089237316195423570985008687907853269984665640564039457584007913129639935
            {
            }
          }
        }
        {
        }
        let al4 := l0
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 27925399138813846298442009148632157271918874805908282092766963504539000890863
        {
        }
        case 49453449033544460367874974909349883320465900170833225266086239910495912422082
        {
        }
        case 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
        }
      }
      l0 = bytes("ffffffffff9c142e16ba75119bb7034648");
      assert(keccak256(bytes(l0)) == keccak256(bytes(bytes("ffffffffff9c142e16ba75119bb7034648"))));
      address[] memory l1 = ((false == false) ? ((false ? true : false) ? new address[](6) : new address[](6)) : new address[](6));
    }
  }
  function f0(function (address payable) external   i0) private  m0() m0()  returns(uint16 o0,int232 o1,address payable o2)
  {
    i0(payable(address(0x0000000000000000000000000000000000000002)));
    { }
    uint32 l0 = uint32(2756793893);
  }
  function f1() internal  m0()  returns(bytes memory o0,bytes11 o1)
  {
    o0 = bytes("000000000000000000000000000000000000000000000000000000000000000000000000000000");
    assert(keccak256(bytes(o0)) == keccak256(bytes(bytes("000000000000000000000000000000000000000000000000000000000000000000000000000000"))));
  }
}
// ====
// ----
