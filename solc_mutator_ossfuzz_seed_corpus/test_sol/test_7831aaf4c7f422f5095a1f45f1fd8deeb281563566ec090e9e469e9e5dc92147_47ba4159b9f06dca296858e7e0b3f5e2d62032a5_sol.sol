
==== Source: su0.sol ====
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  mapping(uint176 => address)   s0;
  int168   s1;
  int24   s2;
  constructor(int168 i0,int24 i1)   {
    s1 += (true ? (~(((~(int168((int168(0) / int168(187072209578355573530071658587684226515959365500927))))) ^ int168(-22257586578866586398923661201986466251597855093392)))) : int168(-108812151184110258336418779148033859291206898142231));
    s2 = (int24(8388607) - int24(8388607));
    s0[(uint176(((uint176(((uint152(5708990770823839524233143877797980545530986495) | uint152(5708990770823839524233143877797980545530986495)) | uint152(5708990770823839524233143877797980545530986495))) & uint176(0)) / uint176(76454106433331449658253803301400853178623455929409752))) | uint176(34589223501236749629829878723351692266324690905478135))] = address(this);
    unchecked {
    }
  }
  receive() external virtual  payable
  {
    unchecked {
      int168  l0 = s1;
      int168  l1 = l0;
      assert(l1 == s1);
      (bool l2) = payable(this).send(0);
      int168  l3 = s1;
      int168  l4 = l3;
      assert(l4 == s1);
      int168  l5 = s1;
      int168  l6 = l5;
      assert(l6 == s1);
      {
      }
    }
    for(uint solinit0 = 0; solinit0 < (((uint256(82563948054719935278694289059809103299416512649860674669137239618528937798917) * (~(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)))) ** uint112((uint112(5192296858534827628530496329220095) >> uint144(uint144(10144412272992583247507080411771686808321124))))) % 11); solinit0++)
    {
      (s2) = (((((((int24(8388607) * int24(8388607)) - int24(-6731871)) ** uint72(uint72(4722366482869645213695))) + int24(8388607)) - int24(0)) ^ int24(0)));
      assert(s2 == ((((((int24(8388607) * int24(8388607)) - int24(-6731871)) ** uint72(uint72(4722366482869645213695))) + int24(8388607)) - int24(0)) ^ int24(0)));
      continue;
    }
    int168  l7 = s1;
    int168  l8 = l7;
    assert(l8 == s1);
  }
  type T0 is bool;
}
// ====
// ----
