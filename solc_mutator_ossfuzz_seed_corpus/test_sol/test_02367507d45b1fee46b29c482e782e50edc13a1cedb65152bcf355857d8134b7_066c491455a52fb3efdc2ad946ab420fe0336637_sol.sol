
==== Source: su0.sol ====
contract C0 {
  fallback() external   
  {
    (bool l0, bytes memory l1) = address(this).call(msg.data);
    uint216 l2 = uint216(104443024675135064005348017798965023014683521123429944816933061500);
  }
  uint208   s0;
  uint160 immutable  s1;
  constructor(uint208 i0,uint160 i1)   {
    s0 *= ((uint208((((int208(205688069665150755269371147819668813122841983204197482918576127) | int208(0)) & int208(162111750735935651177765391992450364957274223133019619633115008)) ** uint192(uint192(0)))) | uint208(121490252959463798169675747019608008737765847535609811142964777)) + uint208(0));
    s1 = (uint160(1461501637330902918203684832716283019655932542975) & ((~(uint160(1461501637330902918203684832716283019655932542975))) ^ uint160((uint160(593484987925876278121381910945292267218354794061) / uint160(1461501637330902918203684832716283019655932542975)))));
    unchecked {
      uint208  l0 = s0;
      uint208  l1 = l0;
      assert(l1 == s0);
      uint160  l2 = s1;
      uint160  l3 = l2;
      assert(l3 == s1);
      uint208  l4 = s0;
      uint208  l5 = l4;
      assert(l5 == s0);
    }
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
