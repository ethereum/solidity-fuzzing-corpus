==== Source:  ====

==== Source: su0.sol ====
contract C0 {
  event ev0() anonymous;
  bool  public s0 = false;
  uint96[6][4][8]  public s1;

	function compareMemoryAndStorage(uint96[6][4][8] memory v1, uint96[6][4][8] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint96[6][4] memory v1, uint96[6][4] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint96[6] memory v1, uint96[6] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  int176  public s2;
  bytes24 immutable  s3;
  constructor(uint96[6][4][8] memory i0,int176 i1,bytes24 i2)   {
    s1 = i0;
    s2 |= (int176(0) + int176((int176(0) / ((int176(-34395688835454346573150421135906827393418784983859345) - int176(47890485652059026823698344598447161988085597568237567)) - int176(-18102432862273504246027849202611768069094403898375036)))));
    s3 = bytes24(0xffffffffffffffffffffffffffffffffffffffffffffffff);
    {
      s0 = true;
      assert(s0 == true);
      (s1[((uint32(0) & uint32((uint32(0) / uint32(4294967295)))) % uint256(0))], s1[uint256(109903093113577809215564080652653731323001629733487398286307723864182931686916)], s1[(((false ? ((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) % uint256(0)) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) : uint256(87489351249271169975041120171863314002204180905157368865489085729979042174532)) + uint256(22276374796985308552340494900049548261782653290133202026105642228243165189575)) ^ uint256(0))]) = ((s1[uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)] = [[uint96(79228162514264337593543950335), uint96(1316415354443399366331300393), uint96(0), uint96(79228162514264337593543950335), uint96(79228162514264337593543950335), uint96(56157549636872919402329424517)], [uint96(42958519610256699577184050777), uint96(0), uint96(0), uint96(79228162514264337593543950335), uint96(50602571271401453707062221932), uint96(79228162514264337593543950335)], [uint96(0), uint96(79228162514264337593543950335), uint96(65115338445488295592731844740), uint96(79228162514264337593543950335), uint96(0), uint96(79228162514264337593543950335)], [uint96(0), uint96(39354979543444238938222727213), uint96(79228162514264337593543950335), uint96(31186235025658255656865159848), uint96(29089686101670834510834939727), uint96(43799127173890505220312813912)]]), s1[(((uint256(int256(16314874073395685247383842300919128173992057894625733631390401444818826936823)) % uint256(0)) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) >> uint64(uint64(0)))], [[uint96(0), uint96(48229787416006924352593674389), uint96(79228162514264337593543950335), uint96(37475626651005411268409202578), uint96(79228162514264337593543950335), uint96(70083165872895644652476763795)], [uint96(79228162514264337593543950335), uint96(26747295319642983267686583731), uint96(79228162514264337593543950335), uint96(0), uint96(0), uint96(18983514616609682167302809717)], [uint96(71749959840348676272081406728), uint96(0), uint96(0), uint96(79228162514264337593543950335), uint96(0), uint96(2127863446430871013024217292)], [uint96(0), uint96(0), uint96(79228162514264337593543950335), uint96(0), uint96(26880255135164988205483470124), uint96(9229120925045102545120240852)]]);
      bool  l0 = s0;
      bool  l1 = l0;
      assert(l1 == s0);
    }
  }
}
pragma solidity >= 0.0.0;
// ----
// Warning 7238: (su0.sol:1408-3779): This assignment performs two copies to storage. Since storage copies do not first copy to a temporary location, one of them might be overwritten before the second is executed and thus may have unexpected effects. It is safer to perform the copies separately or assign to storage pointers first.
// Warning 5667: (su0.sol:1001-1010): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 5667: (su0.sol:1011-1021): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:666-914): Function state mutability can be restricted to view
