
==== Source: su0.sol ====
library L0 {
  function f0(bool i0) internal    returns(bytes12[] memory o0,bytes16 o1)
  {
    function () internal   returns (address payable) l0;
    assert((int144(0) < int144((int144(11150372599265311570767859136324180752990207) / (false ? int144(-361553131424401618306923540076691103888003) : int144(0))))));
    (o0[((uint256((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) + (uint256(99802496541756869534692664329112798207610171458330822638837809358559231144269) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) % uint256(0))], o0) = (o0[(((((uint256(91731441614790955447111150247040319529309369570800798273088117989857034433800) * uint256(30726359717741106508527376795937340584809912087088068158478911272724038268754)) % uint256(0)) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))], new bytes12[](5));
    assert(o0[((uint256((uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) + (uint256(99802496541756869534692664329112798207610171458330822638837809358559231144269) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))) % uint256(0))] == o0[(((((uint256(91731441614790955447111150247040319529309369570800798273088117989857034433800) * uint256(30726359717741106508527376795937340584809912087088068158478911272724038268754)) % uint256(0)) ^ uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) | uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)) * uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))]);
  }
  function f1(int56 i0) external   
  {
    for(uint solinit0 = 0; solinit0 < (uint256(17147170920468894517757994253726539885827240650112921404101489315210699379134) % 11); solinit0++)
    {
      (i0) = (((int56(23689214491789784) ^ (~(int56(0)))) | (true ? int56(0) : int56(0))));
      assert(i0 == ((int56(23689214491789784) ^ (~(int56(0)))) | (true ? int56(0) : int56(0))));
    }
    bytes29 l0 = (bytes29(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) ^ (bytes29(bytes14(0x0000000000000000000000000000)) & bytes29(0x82412864e08c63e12fd6992d6e52e93e51f230ff7637cbb7f7bee7ede8)));
  }
  function f2() external   
  {
    uint208 l0 = uint208(0);
    assert(true);
  }
}
pragma solidity >= 0.0.0;
using L0 for bool;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
type T0 is bytes12;

using {
lt0 as <, gt0 as >, leq0 as <=, geq0 as >=,
bitor0 as |, bitand0 as &, bitxor0 as ^, bitnot0 as ~,

eq0 as ==, neq0 as !=

} for T0 global;



function lt0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) < T0.unwrap(y); }

function gt0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) > T0.unwrap(y); }

function leq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) <= T0.unwrap(y); }

function geq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) >= T0.unwrap(y); }




function bitor0(T0 x, T0 y) pure returns (T0) { return T0.wrap(T0.unwrap(x) | T0.unwrap(y)); }

function bitand0(T0 x, T0 y) pure returns (T0) { return T0.wrap(T0.unwrap(x) & T0.unwrap(y)); }

function bitxor0(T0 x, T0 y) pure returns (T0) { return T0.wrap(T0.unwrap(x) ^ T0.unwrap(y)); }

function bitnot0(T0 x) pure returns (T0) { return T0.wrap(~T0.unwrap(x)); }





function eq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) == T0.unwrap(y); }

function neq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) != T0.unwrap(y); }



// ====
// ----
