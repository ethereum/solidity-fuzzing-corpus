==== Source:  ====

==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  receive() external   payable
  {
    assembly
    {
      if 109328487317343032180597868791731185805967024231530814075476082733691683129908
      {
      }
    }
    bytes20[4] storage l0;
  }
  bool  public s0;
  bool[]   s1;

	function compareMemoryAndStorage(bool[] memory v1, bool[] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bytes6  public s2 = bytes6(0x000000000000);
  constructor(bool i0,bool[] memory i1)   {
    s0 = false;
    s1 = i1;
    unchecked {
      (s1[((uint256(0) % (uint256(114736704321351820745546989854967949203143391438261992901956977752178148013755) * uint256((uint256(0) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))))) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))], i1[uint256(73577508280844917493638667195105628965449908164316229967079547578202980693152)], i1[(uint256(0) + uint256((uint256((((~(uint256(66569529218296210152479200128467517982969845440746111949146818596621023866688))) ** uint224(uint224(25255895178753489889279713846192634013783785669835669913622151098400))) / uint256(0))) / uint256(0))))]) = (true, ((((s1[(uint256(0) * uint256(0))] ? bytes16(0x00000000000000000000000000000000) : bytes16(0x00000000000000000000000000000000)) ^ bytes16(0xffffffffffffffffffffffffffffffff)) > bytes16(0x00000000000000000000000000000000)) ? true : true), true);
      assert(s1[((uint256(0) % (uint256(114736704321351820745546989854967949203143391438261992901956977752178148013755) * uint256((uint256(0) / uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))))) - uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935))] == true);
      assert(i1[uint256(73577508280844917493638667195105628965449908164316229967079547578202980693152)] == ((((s1[(uint256(0) * uint256(0))] ? bytes16(0x00000000000000000000000000000000) : bytes16(0x00000000000000000000000000000000)) ^ bytes16(0xffffffffffffffffffffffffffffffff)) > bytes16(0x00000000000000000000000000000000)) ? true : true));
      assert(i1[(uint256(0) + uint256((uint256((((~(uint256(66569529218296210152479200128467517982969845440746111949146818596621023866688))) ** uint224(uint224(25255895178753489889279713846192634013783785669835669913622151098400))) / uint256(0))) / uint256(0))))] == true);
      (i1[(uint256(0) ** uint232(uint232(2148928703130373295464414942814701309244076669529500065444885722455808)))]) = (false);
      assert(i1[(uint256(0) ** uint232(uint232(2148928703130373295464414942814701309244076669529500065444885722455808)))] == false);
      require((address(this) < address(this)), string("aa7057d32e4feda00e6c95de85ffffffffffffff"));
      require(false);
    }
  }
}
// ----
// Warning 2072: (su0.sol:208-229): Unused local variable.
// Warning 5667: (su0.sol:574-581): Unused function parameter. Remove or comment out the variable name to silence this warning.
// Warning 2018: (su0.sol:271-513): Function state mutability can be restricted to view
