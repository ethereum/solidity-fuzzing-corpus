
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
function f0()     returns(uint64 o0,int104 o1)
{
}
library L0 {
  function f1() external    returns(function () external   returns (bool, bool) o0,bool o1)
  {
    (o1) = (((uint120(1329227995784915872903807060280344575) | (uint120((int120(664613997892457936451903530140172287) + int120(18911806174947932223010366737632953))) >> uint224(uint224(26959946667150639794667015087019630673637144422540572481103610249215)))) < uint120(990274581882598950348055504123175205)));
    assert(o1 == ((uint120(1329227995784915872903807060280344575) | (uint120((int120(664613997892457936451903530140172287) + int120(18911806174947932223010366737632953))) >> uint224(uint224(26959946667150639794667015087019630673637144422540572481103610249215)))) < uint120(990274581882598950348055504123175205)));
    bytes7 l0 = bytes7(0x6e4cc1e8a30fe9);
  }
  function f2() external   
  {
    assembly
    {
      for 
      {
        for 
        { let yulinit0 := 0 } lt(yulinit0, mod(101361632781578937013496139759736312869999061500684654544132675552668072020126, 11)) { yulinit0 := add(yulinit0, 1) }
        {
          let al0 := coinbase()
          mstore(add(0x80, mod(al0, 2048)), mload(add(0x80, mod(al0, 2048))))
        }
      }
      0
      {
        for 
        {
          codecopy(add(0x80, mod(0, 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        }
        0
        {
        }
        {
          switch 89667614491019533653293923883559285921676226169910434702726903048913008286198
          default
          {
            calldatacopy(add(0x80, mod(77371964230382668257075690293818786611894083483072193357736665955212319163980, 1024)), 0, mod(77810842116005550490758438668184068378278442402792925432254977137456319849544, 1024))
          }
          extcodecopy(0, add(0x80, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024)), mul(51657436690538574002923975734581651682005572170294195209527313976629698604765, 0), mod(91857428879227220101462252010480491146020449822663633189586206698734655105515, 1024))
        }
        sstore(calldataload(mod(sgt(0, 15568322137482531398075116377293073672299685771820518000518053903209992394323), calldatasize())), 80308906404991320631298240878049416742723217336298987922066303233457232550329)
      }
      {
        calldatacopy(add(0x80, mod(101031171070129583409975824552449062908293913936664498758087192619409150679685, 1024)), 8766571312253507897854887029322376350339242245333914030678702398339675498666, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        switch sload(calldataload(mod(sgt(0, 15568322137482531398075116377293073672299685771820518000518053903209992394323), calldatasize())))
        case 55131411218796102460817587435817844159689552963822472931404658006346342209376
        {
          pop(44655358799811722660354282567011127087886640778944070947989145446475013977274)
        }
        case 0
        {
          continue
        }
        continue
      }
    }
  }
}
// ====
// ----
