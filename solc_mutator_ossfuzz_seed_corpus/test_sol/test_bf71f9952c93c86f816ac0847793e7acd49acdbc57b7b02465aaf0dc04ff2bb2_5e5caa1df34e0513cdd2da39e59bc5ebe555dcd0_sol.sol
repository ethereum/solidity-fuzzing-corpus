
==== Source: su0.sol ====
library L0 {
  event ev0(bool  ep0) anonymous;
  function f0() private   
  {
    bool l0 = false;
  }
}
pragma solidity >= 0.0.0;
contract C0 {
  receive() external   payable
  {
    assembly
    {
      for 
      {
      }
      9087189488044512938041859577357910349675364374447002856530373182224349108049
      {
      }
      {
        calldatacopy(add(0x80, mod(64654189784747515177251926126111336084856482317202125233263222678944163255496, 1024)), addmod(28389636247526859923597730351445295876879736879876042352015919319074448645271, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        returndatacopy(add(0x80, mod(0, 1024)), mload(add(0x80, mod(42327848703458083261693734992589868617465280268250823401073356954969615183777, 2048))), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        continue
      }
      switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
      default
      {
        let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
        {
          for 
          {
            calldatacopy(add(0x80, mod(al0, 1024)), slt(0, 101533593878550443746908681778413093547545486136099784968151082950899939871422), mod(al0, 1024))
            {
              stop()
            }
            let al1 := calldataload(mod(al0, calldatasize()))
          }
          115792089237316195423570985008687907853269984665640564039457584007913129639935
          {
          }
          {
            return(al0, byte(al0, 115792089237316195423570985008687907853269984665640564039457584007913129639935))
          }
        }
      }
    }
    address payable l0 = payable(address(this));
  }
  uint136  public s0 = uint136(0);
  uint184   s1;
  bytes   s2;

	function compareMemoryAndStorage(bytes memory v1, bytes storage v2) internal pure returns (bool) {
		return keccak256(bytes(v1)) == keccak256(bytes(v2));
	}
  bytes6  public s3 = bytes6(0xffffffffffff);
  constructor(uint184 i0,bytes memory i1)   {
    s1 ^= (uint184(int184(0)) << uint256(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935)));
    s2 = bytes("000000000000000000000000000000000000000000000000");
    unchecked {
    }
  }
  using L0 for *;
}

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
// ====
// ----
