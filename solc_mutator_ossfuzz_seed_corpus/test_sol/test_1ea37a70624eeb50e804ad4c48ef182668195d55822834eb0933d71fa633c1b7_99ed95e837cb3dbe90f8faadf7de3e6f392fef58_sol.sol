
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
function f0()     returns(address o0)
{
  uint160 l0 = uint160(1461501637330902918203684832716283019655932542975);
  function (bytes15, bytes13, bytes19) internal   returns (uint192, address payable) l1;
  bytes17(0x0000000000000000000000000000000000);
}

==== Source: su1.sol ====
function f1()     returns(address payable o0,bool o1)
{
  unchecked {
    address l0 = address(0x0000000000000000000000000000000000000005);
  }
  assembly
  {
    let al0 := addmod(o0, 96645637139907862227303359072617060727065365796933288205615038321969752064459, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
    for 
    {
      switch o1
      case 0
      {
        switch prevrandao()
        case 65987082636308777766603193903325271619601974096055370033274411723272077297734
        {
          return(0, and(113420003049985391636885325966987908364653588479586848778132853907916278456453, 8363684655701854549060643153328354855620381768045589084028185109321944427375))
        }
        return(47412141705561221054237293610743496982493128183546410216644309587202254394523, addmod(o0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0))
      }
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        o1 := 79108403496772229286149843014859268452095271383111302956009257095626913303668
      }
      o1 := 0
    }
    o1
    {
      for 
      {
        calldatacopy(add(0x80, mod(o1, 1024)), delegatecall(number(), 115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 0, 0, 21422455914351870186829553422422812722106089550653090764841923864312370818355), mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
        sstore(al0, and(sload(115792089237316195423570985008687907853269984665640564039457584007913129639935), 0))
      }
      0
      {
        o0 := or(o1, 65734941350219100610344148880091395485362895493586096869716599359549766103095)
        switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
        case 100058099745255411923687925439508751295316630733455518717051955552951151989284
        {
          function af0(ai0, ai1, ai2, ai3, ai4, ai5, ai6, ai7, ai8, ai9, ai10, ai11, ai12) -> ao0, ao1
          {
          }
          switch o1
          default
          {
            returndatacopy(add(0x80, mod(o1, 1024)), 76623965728824679697569867693056483943262977089903308669807468980809201211144, mod(o0, 1024))
            {
              o1 := sgt(chainid(), 0)
              {
              }
            }
          }
        }
        sstore(mload(add(0x80, mod(o1, 1024))), 103684543713586370945188626726674709441765774393309945564710895992072896366455)
      }
      {
        o1 := 43269667467561919576080500947872351490143633257428405589076053982545527041304
        returndatacopy(add(0x80, mod(o0, 1024)), o1, mod(o0, 1024))
      }
      codecopy(add(0x80, mod(gaslimit(), 1024)), calldataload(mod(o0, calldatasize())), mod(0, 1024))
    }
    {
      function af1() -> ao2
      {
        let al1 := af1()
      }
    }
  }
  bool l1 = false;
  assembly
  {
    revert(o1, 0)
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
