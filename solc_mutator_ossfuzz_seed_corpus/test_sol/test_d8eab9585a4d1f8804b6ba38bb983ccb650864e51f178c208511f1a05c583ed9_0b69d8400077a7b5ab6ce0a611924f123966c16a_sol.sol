
==== Source: su0.sol ====
contract C0 {
  receive() external virtual  payable
  {
    assembly
    {
      if 1494682021388210180053482993696516973524022648842357130239892903064955645924
      {
        {
          for 
          {
            for 
            {
              revert(21654410062198883517542681606144845062731289083865699920196223139019233400067, eq(115792089237316195423570985008687907853269984665640564039457584007913129639935, 0))
            }
            mload(add(0x80, mod(25558857651286907666951656927536248683400902059172919554695427014814874150305, 2048)))
            {
              for 
              {
              }
              timestamp()
              {
                calldatacopy(add(0x80, mod(0, 1024)), 27039460835767134230296756586694460717839158553135367580761154556615027575734, mod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 1024))
              }
              {
              }
              let al0 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
            }
            {
              extcodecopy(115792089237316195423570985008687907853269984665640564039457584007913129639935, add(0x80, mod(calldataload(mod(42159929614849479443423262761936228300782410533049908951188440728631459521774, calldatasize())), 1024)), 115792089237316195423570985008687907853269984665640564039457584007913129639935, mod(0, 1024))
              if 29355938536337317793595090340331270267998312329647819440968772132139483665777
              {
                for 
                {
                  switch 115792089237316195423570985008687907853269984665640564039457584007913129639935
                  default
                  {
                    stop()
                  }
                }
                and(smod(115792089237316195423570985008687907853269984665640564039457584007913129639935, 115792089237316195423570985008687907853269984665640564039457584007913129639935), 0)
                {
                  let al1 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
                }
                {
                }
                {
                }
              }
            }
          }
          mload(add(0x80, mod(0, 1024)))
          {
          }
          {
            if 0
            {
            }
            if 14614317561391114124222436838385141374267972457491528063517033316819267129855
            {
              break
            }
          }
        }
        {
        }
      }
      stop()
    }
    uint56 l0 = (uint56(0) & (uint56(uint64(16608907661085149951)) + uint56(72057594037927935)));
    int56 l1 = (~(((int56(36028797018963967) ^ int56(36028797018963967)) & (int56(-20068370858134456) + int56(36028797018963967)))));
  }
  int56   s0 = int56(0);
}
contract C1 is C0 {
  address   s1;
  address  public s2 = address(this);
  constructor(address i0)   {
    s1 = address((bytes20(address(0x25542368FBb5D44673f4fa482eAa2Ace832a4Bd5)) ^ bytes20(address(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF))));
    unchecked {
      {
      }
    }
  }
  receive() external override  payable
  {
    address  l0 = s2;
    address  l1 = l0;
    assert(l1 == s2);
    int56  l2 = s0;
    int56  l3 = l2;
    assert(l3 == s0);
    bytes.concat(bytes32(0x381451597e9e5a033a529bc47b99cb733800d61164c3fd73594c78b699692b98), bytes1(0xff), bytes3(0xffffff));
  }
}
pragma solidity >= 0.0.0;
// ====
// ----
