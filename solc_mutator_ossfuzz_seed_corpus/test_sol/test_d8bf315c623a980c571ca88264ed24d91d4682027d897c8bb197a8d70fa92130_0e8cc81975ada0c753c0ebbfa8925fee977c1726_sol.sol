
==== Source: su0.sol ====
contract C0 {
  bytes27   s0 = bytes27(0x000000000000000000000000000000000000000000000000000000);
  bool   s1 = true;
  function f0() public virtual    returns(address payable o0,bytes[] memory o1,bytes32 o2)  {
    (o1[(((~(uint256(6511456819390685994837088549883185807253659284358625777193800187231017919688))) % o1.length) & (uint256(90450011144337809107605683848638591496493878371551783489286108265531302599030) ^ uint256(56254124985500000496473453603839211768049428775650623374715185632130831691470)))], o1[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) - (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * (uint64(18446744073709551615) - uint256(5948961839168134260229601650991511538099813121265400960071285823562236659795))))]) = (o1[(uint256(54331141501457698316712587180254706354777387002151977210177833159674630444946) ^ uint256((address(this).balance / uint256(0))))], bytes("f56d1b79eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"));
    assert(keccak256(bytes(o1[(((~(uint256(6511456819390685994837088549883185807253659284358625777193800187231017919688))) % o1.length) & (uint256(90450011144337809107605683848638591496493878371551783489286108265531302599030) ^ uint256(56254124985500000496473453603839211768049428775650623374715185632130831691470)))])) == keccak256(bytes(o1[(uint256(54331141501457698316712587180254706354777387002151977210177833159674630444946) ^ uint256((address(this).balance / uint256(0))))])));
    assert(keccak256(bytes(o1[(uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) - (uint256(115792089237316195423570985008687907853269984665640564039457584007913129639935) * (uint64(18446744073709551615) - uint256(5948961839168134260229601650991511538099813121265400960071285823562236659795))))])) == keccak256(bytes(bytes("f56d1b79eeffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"))));
  }
}
pragma solidity >= 0.0.0;

==== Source: su1.sol ====
pragma solidity >= 0.0.0;
contract C1 {
  error er0();
  address   s2 = address(this);
  int40   s3 = int40(549755813887);
  mapping(uint96 => int160)   s4;
  bytes4   s5;
  constructor(bytes4 i0)   {
    s5 = (false ? bytes4(0x4772fc3a) : (true ? bytes4(0x57ff0fc9) : bytes4(0xffffffff)));
    s4[uint88(51532449981683933587403172)] &= int104((int104(((~((int104(10141204801825835211973625643007) & int104(10141204801825835211973625643007)))) / int104(8628384010647586674104112158335))) / int104(10141204801825835211973625643007)));
    {
    }
  }
}
type T0 is bool;

using {



eq0 as ==, neq0 as !=

} for T0 global;






function eq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) == T0.unwrap(y); }

function neq0(T0 x, T0 y) pure returns (bool) { return T0.unwrap(x) != T0.unwrap(y); }



function f1()      returns(bytes16 o0){
}
// ====
// ----
