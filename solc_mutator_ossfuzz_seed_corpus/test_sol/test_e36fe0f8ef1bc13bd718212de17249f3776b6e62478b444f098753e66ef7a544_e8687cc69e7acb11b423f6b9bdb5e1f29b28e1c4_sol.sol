
==== Source: su0.sol ====
pragma solidity >= 0.0.0;
contract C0 {
  int208  public s0 = int208(205688069665150755269371147819668813122841983204197482918576127);
  uint240[10][7]  public s1;

	function compareMemoryAndStorage(uint240[10][7] memory v1, uint240[10][7] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (!compareMemoryAndStorage(v1[i], v2[i]))

				return false;
		return true;
	}

	function compareMemoryAndStorage(uint240[10] memory v1, uint240[10] storage v2) internal returns (bool) {
		if (v1.length != v2.length)
			return false;
		for (uint i = 0; i < v1.length; i++)

			if (v1[i] != v2[i])

				return false;
		return true;
	}
  bool  public s2 = false;
  constructor(uint240[10][7] memory i0) payable  {
    s1 = i0;
    {
      s1[uint256(0)] = [uint240(604774843225268167062935336854196294363494571049233270801080524189589477), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(555509241376433924384863878596592495323253218711465835279729792228094745), uint240(0), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775), uint240(1766847064778384329583297500742918515827483896875618958121606201292619775)];
      bool  l0 = s2;
      bool  l1 = l0;
      assert(l1 == s2);
    }
  }
}
// ====
// ----
