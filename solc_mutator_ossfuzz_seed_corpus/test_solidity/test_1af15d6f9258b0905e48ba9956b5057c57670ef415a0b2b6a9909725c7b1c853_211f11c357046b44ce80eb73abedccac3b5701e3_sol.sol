
==== Source: su0.sol ====
type T0 is int8;
pragma solidity >= 0.0.0;
function f0()    
{
  uint208 l0 = (uint208(411376139330301510538742295639337626245683966408394965837152255) + (((uint208(99691960967435416038493264796349746247720126385531914241173605) % uint208(411376139330301510538742295639337626245683966408394965837152255)) | uint208(0)) << uint248(uint248(452312848583266388373324160190187140051835877600158453279131187530910662655))));
  (l0) = (((uint208((((uint208(411376139330301510538742295639337626245683966408394965837152255) ** uint192(uint192(6277101735386680763835789423207666416102355444464034512895))) ^ uint208(0)) / uint208(0))) & uint208(411376139330301510538742295639337626245683966408394965837152255)) + uint208(85516309506380020759622363864599632477931947209879337356850986)));
}
error er0();
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141
}
uint176 constant cons0 = ((((((uint176(91340033986948750126240512391600020729535233941718846) << uint168(uint168(374144419156711147060143317175368453031918731001855))) ** uint200(uint200(1283412474262637066855774018894755657499872236751512391857978))) - uint176(95780971304118053647396689196894323976171195136475135)) % uint176(14316496541553021806465010447976246659306440755384405)) & uint176(79518639797744395349831031020037778123872374582166373)) % uint176(0));
contract C0 {
  address payable   s0 = payable(address(this));
  type T1 is bool;
  error er1();
  event ev0();
  modifier m0(address i0) 
  {
    while ((!(true)))
    {
      _;
      continue;
      _;
    }
    if (false)
    {
      _;
      (bool l0, bytes memory l1) = address(this).call("0000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffff");
    }
    else
    {
      do
      {
      }
      while (((bytes27(0x27dcece5621800e9222793505fa87be12f3b98932127affa8b8364) <= bytes27(0x000000000000000000000000000000000000000000000000000000)) || (true ? false : true)));
      unchecked {
        assembly
        {
          i0 := 0
        }
      }
    }
  }
  function f1() public virtual  
  {
    revert er1();
    return;
  }
  error er2(address payable ep0);
  event ev1() anonymous;
  fallback() external virtual m0(address(this)) 
  {
    while ((int72(2361183241434822606847) > int72(0)))
    {
    }
    return;
  }
  struct St0 {
    bytes8 el0;
  }
  enum EN1 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99
  }
}
// ====
// ----
