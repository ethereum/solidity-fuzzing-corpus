
==== Source: su0.sol ====
function f0(bool i0)     returns(string memory o0,function (function (int232) external   returns (int144)[] memory, int240, int24) external   returns (uint192, bool) o1)
{
  if (true)
  {
    for(;
(true ? (((uint184(1888821159025596513724117118905405830779848457592082046) >> uint40(uint40(1054570065755))) - uint184(23833668908919495724060189477716552128559004071064487398)) >= uint184(24519928653854221733733552434404946937899825954937634815)) : true);
)
    {
      break;
    }
  }
  try o1(new function (int232) external   returns (int144)[](1),(int240(883423532389192164791648750371459257913741948437809479060803100646309887) ^ ((int240(883423532389192164791648750371459257913741948437809479060803100646309887) | int240(0)) * int240(883423532389192164791648750371459257913741948437809479060803100646309887))),int24(0)) returns (uint192 l0, bool l1)
  {
  }
  catch
  {
    unchecked {
      assembly
      {
        pop(o0)
        switch or(o0, 115792089237316195423570985008687907853269984665640564039457584007913129639935)
        default
        {
        }
        mstore(mod(0, 2048), mload(mod(i0, 2048)))
      }
      {
        return (string("000000000000000000000000000000000000000000ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"), o1);
      }
    }
  }
  catch Error(string memory l2)
  {
    assembly
    {
      o0 := address()
      revert(o0, sload(0))
    }
  }
  if (((((int192(-3081299375991101178180330750118079466407587701651545492598) + (int192(3138550867693340381917894711603833208051177722232017256447) + int192(0))) + int192(3138550867693340381917894711603833208051177722232017256447)) ** uint232(uint232(5486097025610269216950805737516545790608294491410616971544327365161283))) <= int192(3138550867693340381917894711603833208051177722232017256447)))
  {
  }
}
pragma solidity >= 0.0.0;
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112
}
// ====
// ----
