
==== Source: su0.sol ====
contract C0 {
  address payable public constant cons0 = payable(0xFFfFfFffFFfffFFfFFfFFFFFffFFFffffFfFFFfF);
  type T0 is bytes5;
  int32   s0;
  int192   s1;
  uint144[1]  public s2 = [uint144(22300745198530623141535718272648361505980415)];
  uint152   s3;
  constructor(int32 i0,int192 i1,uint152 i2)   {
    s0 |= (int32(0) ** uint72((((uint72(4722366482869645213695) % uint72(4722366482869645213695)) >> uint144(uint144(0))) + uint72(2357171264800261261008))));
    s1 += (int192(0) ** uint40((uint40(0) - uint40((uint40(0) / uint40(1099511627775))))));
    s3 >>= uint152(2349223559890226785903172134322287181508270213);
    {
      (bool l0) = payable(this).send(10761085066241818520);
    }
  }
  enum EN0 {
    M0, M1, M2, M3, M4, M5, M6, M7,
    M8, M9, M10, M11, M12, M13, M14, M15,
    M16, M17, M18, M19, M20, M21, M22, M23,
    M24, M25, M26, M27, M28, M29, M30, M31,
    M32, M33, M34, M35, M36, M37, M38, M39,
    M40, M41, M42, M43, M44, M45, M46, M47,
    M48, M49, M50, M51, M52, M53, M54, M55,
    M56, M57, M58, M59, M60, M61, M62, M63,
    M64, M65, M66, M67, M68, M69, M70, M71,
    M72, M73, M74, M75, M76, M77, M78, M79,
    M80, M81, M82, M83, M84, M85, M86, M87,
    M88, M89, M90, M91, M92, M93, M94, M95,
    M96, M97, M98, M99, M100, M101, M102, M103,
    M104, M105, M106, M107, M108, M109, M110, M111,
    M112, M113, M114, M115, M116, M117, M118, M119,
    M120, M121, M122, M123, M124, M125, M126, M127,
    M128, M129, M130, M131, M132, M133, M134, M135,
    M136, M137, M138, M139, M140, M141, M142, M143,
    M144, M145, M146, M147, M148, M149, M150, M151,
    M152, M153, M154, M155, M156, M157, M158, M159,
    M160, M161, M162, M163, M164, M165, M166, M167,
    M168, M169, M170, M171, M172, M173, M174, M175,
    M176, M177, M178, M179, M180, M181, M182, M183,
    M184, M185, M186, M187, M188, M189, M190, M191,
    M192, M193, M194, M195, M196
  }
  function f0() private   
  {
  }
  function f1(uint64 i0) external virtual  
  {
    try this.f1(uint64(18446744073709551615))
    {
    }
    catch
    {
    }
  }
  receive() external   payable
  {
    try this.f1(((((((uint64(18446744073709551615) ** uint56(uint56(72057594037927935))) << uint152(uint152(5708990770823839524233143877797980545530986495))) & uint64(18446744073709551615)) << uint96(uint96(79228162514264337593543950335))) % uint64(0)) * uint64(0)))
    {
      try this.f1({i0: uint64(16033978440584758423)})
      {
      }
      catch
      {
        assembly
        {
          if s2.slot
          {
            pop(s1.offset)
            return(s1, s2.slot)
          }
        }
      }
      if ((uint160(1461501637330902918203684832716283019655932542975) != (uint160((((uint160(583666819088506516306152490515538186783800720849) % uint160(1461501637330902918203684832716283019655932542975)) & uint160(0)) / uint160(630042725791580462597106507176237646021738268345))) % uint160(0))))
      {
      }
      (s2[0], s2[0], s2[0]) = ((((((~((uint144(12727849220861686825923476099593725903082848) * uint144(22300745198530623141535718272648361505980415)))) ^ uint144(468161109648225508858050882373540753161232)) & uint144(9513854974169160052797337878917953218777285)) ** uint8(uint8(211))) + uint144(0)), uint144(22300745198530623141535718272648361505980415), (((((~((uint144(22300745198530623141535718272648361505980415) << uint160(uint160(788196134952427823554421471134648988594613802727))))) ** uint8(uint8(255))) << uint256(uint256(0))) + uint144(3125345524122480715069082591339132560670589)) | uint144(5542114380566037368687352689819661632490170)));
    }
    catch
    {
    }
  }
  error er0();
}
pragma solidity >= 0.0.0;
error er1();
// ====
// ----
