
==== Source: su0.sol ====
enum EN0 {
  M0, M1, M2, M3, M4, M5, M6, M7,
  M8, M9, M10, M11, M12, M13, M14, M15,
  M16, M17, M18, M19, M20, M21, M22, M23,
  M24, M25, M26, M27, M28, M29, M30, M31,
  M32, M33, M34, M35, M36, M37, M38, M39,
  M40, M41, M42, M43, M44, M45, M46, M47,
  M48, M49, M50, M51, M52, M53, M54, M55,
  M56, M57, M58, M59, M60, M61, M62, M63,
  M64, M65, M66, M67, M68, M69, M70, M71,
  M72, M73, M74, M75, M76, M77, M78, M79,
  M80, M81, M82, M83, M84, M85, M86, M87,
  M88, M89, M90, M91, M92, M93, M94, M95,
  M96, M97, M98, M99, M100, M101, M102, M103,
  M104, M105, M106, M107, M108, M109, M110, M111,
  M112, M113, M114, M115, M116, M117, M118, M119,
  M120, M121, M122, M123, M124, M125, M126, M127,
  M128, M129, M130, M131, M132, M133, M134, M135,
  M136, M137, M138, M139, M140, M141, M142, M143,
  M144, M145, M146, M147, M148, M149, M150, M151,
  M152, M153, M154, M155, M156, M157, M158, M159,
  M160, M161, M162, M163, M164, M165, M166, M167,
  M168, M169, M170, M171, M172, M173, M174, M175,
  M176, M177, M178, M179, M180, M181, M182, M183,
  M184, M185, M186, M187, M188, M189, M190, M191,
  M192, M193, M194, M195, M196, M197, M198, M199,
  M200, M201, M202, M203, M204, M205, M206, M207,
  M208, M209, M210, M211, M212, M213, M214, M215,
  M216, M217, M218, M219, M220, M221, M222, M223,
  M224, M225, M226, M227, M228, M229, M230, M231,
  M232, M233, M234, M235, M236, M237, M238, M239,
  M240, M241, M242, M243, M244, M245, M246, M247,
  M248, M249, M250, M251
}
contract C0 {
  fallback() external   
  {
    payable(address(this));
    for(    uint208 l0 = (~((~(uint208(111303066175097626533524974697082715204733330463486579586464338)))));
;
address(this))
    {
      if ((uint144(19931013362552369502925483742698922670710159) == uint144(22300745198530623141535718272648361505980415)))
      {
        break;
        require(true, "fc0921b04affffffffffffffffffffffff");
      }
      else
      {
      }
      return;
      int24 l1 = int24(2177402);
    }
    (bool l2) = payable(this).send(5418671171990904938);
    assembly
    {
      l2 := 77287400344721722914036113123326957981391593355476730358524618801919992162510
      switch 28773096238420056374939816034767753679289946506431638450602289308003111531003
      case 115792089237316195423570985008687907853269984665640564039457584007913129639935
      {
        if l2
        {
          for 
          {
            mstore8(mod(l2, 2048), l2)
          }
          l2
          {
          }
          {
            break
            for 
            {
            }
            sload(l2)
            {
              let al0 := 17672511817744902029689531299865103191769043500591697939744814482105841033086
            }
            {
              break
              break
            }
            if 82103587464743354964146455616656333907294822147557054604006651201899265395112
            {
            }
            for 
            {
            }
            0
            {
              l2 := 74368007883943116290865619170228891704350085822509580927897340124897789118818
            }
            {
            }
          }
        }
        l2 := 115792089237316195423570985008687907853269984665640564039457584007913129639935
      }
      case 20653036417176164546615691334203769603198251093623710639352553652477098167047
      {
      }
      case 0
      {
      }
    }
  }
  event ev0();
  receive() external virtual  payable
  {
  }
  uint8   s0;
  constructor(uint8 i0)   {
    s0 = (uint8(((((uint8((uint8(255) / uint8(255))) | uint8(41)) | uint8(0)) ** uint224(uint224(1583096246166991329785676528662094764860860094469060334470155947296))) / uint8(255))) >> uint208(uint208(411376139330301510538742295639337626245683966408394965837152255)));
    unchecked {
    }
  }
  type T0 is bool;
}
pragma solidity >= 0.0.0;
// ====
// ----
