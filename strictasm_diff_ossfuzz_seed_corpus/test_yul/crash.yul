{
    mstore(memoryguard(0x010000), 1)
    sstore(mload(calldataload(0)), 1)
    {
        let x_2, x_3, x_4, x_5 := foo_m(0x2000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001)
        {
            x_2 := add(0x200000000000000000000000000000000000000000001, number())
        }
        let x_13, x_14, x_15, x_16 := foo_m(0x20000000000000000000000000000000000001, 0x2000000000000000000000000000000000001, 0x200000000000000000000000000000000001, call(0x20000000000000000000000000000000001, 0x2000000000000000000000000000000001, 0x200000000000000000000000000000001, mod(x, 32768), mod(0x20000000000000000000000000000001, 32768), mod(0x2000000000000000000000000000001, 32768), mod(0x200000000000000000000000000001, 32768)))
        function foo_m(x, x_1, x_2, x_3) -> x_4, x_5, x_6, x_7 { }
    }
}
// ----
// step: fullSimplify
//
// {
//     {
//         let _1 := 1
//         mstore(memoryguard(0x010000), _1)
//         sstore(mload(calldataload(0)), _1)
//         let x, x_1, x_2, x_3 := foo_m(0x2000000000000000000000000000000000000000000000001, 0x200000000000000000000000000000000000000000000001, 0x20000000000000000000000000000000000000000000001, 0x2000000000000000000000000000000000000000000001)
//         let _11 := number()
//         let _12 := 0x200000000000000000000000000000000000000000001
//         x := add(_12, _11)
//         pop(call(0x20000000000000000000000000000000001, 0x2000000000000000000000000000000001, 0x200000000000000000000000000000001, addmod(_12, _11, 32768), 1, 1, 1))
//     }
//     function foo_m(x_8, x_1_9, x_2_10, x_3_11) -> x_4_12, x_5_13, x_6_14, x_7_15
//     { }
// }
